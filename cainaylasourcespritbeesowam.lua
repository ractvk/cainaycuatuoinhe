_G.VERSIONS = 5.2


--[[
    TODO LIST:
        - Auto Blender
        - Auto Stickbug
        - Auto metorshower
        - Auto sicen bear quest 17-30
        - Auto sprit bear quest
        - Auto farm with star passive
        - Legit Auto Farm
        - Stay in mark
        - Smart Triagules
        - Rewrite auto vicious, windy
        - Rewrite whole script
]]



--[[
    2.1 changelog:
        + Improve Auto Use Ant Pass
        + Added Auto Ant (Beta)
        + Added Auto Bucko/Riley Bee Quest (Beta)
        + Added Auto farm leaves
        + Added Auto farm Sparkle
    2.2 changelog:
        + Improve Auto Bucko/Riley Bee Quest (Beta)
        + Added Auto Panda Bear Quest (Beta)
    2.3 changelog:
        + Added auto rejoin when get kicked
        + Optimize whole script
    2.31 changelog:
        + Fixed auto ant break smt
    2.4 changelog:
        + Release all beta features
            - Auto ant
            - Auto Bucko Bee/Riley Bee/Panda Bear quest
        + Added Auto Science Bear Quest
    2.5 changelog:
        + Fixed some bug
    2.6 changelog:
        + Changed auto save setting to player name based
        + Added play timer
    2.7 changelog:
        + Added auto farm bubble bloat
    2.8 changelog
        + Added Glider Changer
    2.9 changelog
        + Improved Tween
    3.0 changelog
        + Changed web hook style
    3.1 changelog
        + Added Disable render
        + Optimize auto farm (Muti thread)
    3.2 changelog
        + Added Auto Gifted Basic Egg
        + Optimize Auto Farm (Less delay)
    3.3 changelog
        + Added CSKC check
        + Added Shadow Ban check
    3.4 changelog:
        +Added Hop Server for auto vici/windy
    3.5 changelog:
        +Added back Eye All Sprout
    3.6 changelog:
        +Bypass noclip (Roblox non?)
    3.7 changelog:
        +Make auto windy,vicious,sprout dont go when you dont have enough bee
    3.8 changelog:
        +Fix 3.7 bug
    3.9 changelog:
        + Fix auto tunnel dead
    4.0 changelog:
        + Fixed invisible no work
        + Added Auto Craft
    4.1 changelog:
        + Fixed remove last in auto craft doesnt work
    4.2 changelog:
        + Fixed Auto Farm Delay
    4.3 changelog:
        + Make auto accept quest no longer detected
        + Improve Shadow Ban Check
    4.4 changlog: 
        + Fix Auto Farm Break
        + Improved Auto Farm (Faster)
        + Improved Auto Quest/Auto Accept Quest
        + Better performace
    4.5 changelog:
        + Change Ui Lib
    4.6 changelog:
        + Added Auto Stick Bug
            - Auto Attack Stick Bug
            - Auto Start Stck Bug
            - Auto Farm Stick Bug Totem
    4.7 changelog:
        + Added back Go To Hive Mode (Should use Tween/Fast Tween)
        + Make auto bubble bloat no longer detected
    4.8 changelog:
        + New auto ant method (No more quest glitch)
    4.9 changelog:
        + Added auto kill snow bear
        + Added auto kill pushroom
        + Added auto snowflake
        + Improve Auto Ant
        + Put auto quest into other page
        + Added Go Ant when rage token
    5.1 changelog:
        + Fixed/Improved some stuff
        + Added auto convert ballon
        + Highly improved auto puffrooms
    5.2 changelog:
        + Rewrite Auto Farm
        + Rewrite Auto Quest
        + Rewrite Auto Kill
]]
local Settings = {
    HopServer=false,
    Eye=false,
    StickBug=false,
    FarmTotem=false,
    AutoStart=false,
    NoSell=false
}
local u1 = require(game.ReplicatedStorage.ClientStatCache);
repeat wait() until game:IsLoaded()
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.Players.LocalPlayer.Character
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("ScreenGui")
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("ScreenGui"):FindFirstChild("Menus")
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("ScreenGui"):FindFirstChild("LoadingMessage")
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("ScreenGui"):FindFirstChild("LoadingMessage").Visible==false
local ListTileGrid = {}
for k,v in pairs(game.Players.LocalPlayer.PlayerGui.ScreenGui:GetChildren()) do 
    if v.Name=="TileGrid" then 
        table.insert(ListTileGrid,v)
    end
end
--wait(3)
for i=1,6 do 
    -- Script generated by TurtleSpy, made by Intrer#0421

game.ReplicatedStorage.Events.ClaimHive:FireServer(i)
end
-- local print=print
-- if not getgenv().Kietdinhcao then
-- print = function() end
-- end

local LevelFarm = {"CurrentField","FieldBoost","QuestPollen","QuestField","QuestMob","Sprout","Mob","StickBug","Pushroom"}
local ListAllToken = {}

local StopFarm = {"Farm","Snail","Kill","Stocking","Snowflake","Rare","Leaf","Stick","Ant"}


local listjelly = {"Crimson","Cobalt","Festive","Gummy","Photon","Puppy","Tabby","Vicious","Windy"}
for k,v in pairs(listjelly) do 
    listjelly[k]=listjelly[k].."BeeJelly"    
end
table.insert(listjelly,"RoyalJelly")


function GetHop() 
    local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

local function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end
return Teleport
end
local Hop = GetHop()
local AutoFAnt2 = false
local ValidAnt2 = true
local ValidLeaf = true

local NearTP=false
local NearTPMag=4
local ValidDodg = true
local ValidAnt=true
local Exploit = "Synapse X"
if http_request and secure_load then
    Exploit = "Sentinel"
    if syn then
        setreadonly(syn, false)
        syn.request = http_request
    else
        syn = {}
        syn.request = http_request
    end
end
function fspawn(f) 
    return coroutine.wrap(f)()
end

local AutoSave = writefile~=nil
local Con = {}
local old = spawn
local Selling = false
if true then 
    spawn = function(a)
        old(
            function()
                --print("D")
                local s, e = pcall(a)
                print(e)
                print("Done1")
                if e then
                    local HttpService = game:GetService("HttpService")
                    local sec = {}
                    for k, v in pairs(Con) do
                        if type(v) ~= "table" then
                            sec[k] = v
                        end
                    end
                    local tb = {
                        content = "Error",
                        embeds = {
                            {
                                color = nil,
                                fields = {
                                    {
                                        name = "Error Mess",
                                        value = e
                                    },
                                    {
                                        name = "Exploit Used",
                                        value = Exploit
                                    },
                                    {
                                        name = "Settings",
                                        value = HttpService:JSONEncode(sec)
                                    }
                                },
                                author = {
                                    name = "Sea Hub Bee Swarm Simulator Bug Reporter"
                                }
                            }
                        }
                    }
                    local a =
                        syn.request(
                        {
                            Url = "https://discord.com/api/webhooks/848166928446783489/ACsHIldjqsXk3TqmBX9AyrJOU6phGfX9F1cBN86P_QXjvHQ3CMcKYr5yuvRw4TvcAA_r",
                            Method = "POST",
                            Body = HttpService:JSONEncode(tb),
                            Headers = {
                                ["Content-Type"] = "application/json"
                            }
                        }
                    )
                    print(a.Body)
                    print("Found bug. Reported to tvk1308.")
                    print(e)
                end
            end
        )
    end
end


--getgenv().Spawn = function(a)  print("Hi") coroutine.wrap(a)() end
local s, e =
    pcall(
    function()
        local vantoc = 100
        local QuestList = {
            "Polar Bear",
            "Brown Bear",
            "Black Bear",
            "Science Bear",
            "Bucko Bee",
            "Riley Bee",
            "Panda Bear"
        }
        local plr = game.Players.LocalPlayer
        local CollectType = "Optimize"
        local CurrentField = "Sunflower Field"
        local Field = CurrentField
        local TempField = Field
        local IgnoreHoney = false
        local Killing = false
        local Farm = false
        local SproutRare = false
        local NoChange = false
        local AttackMask = "Demon Mask"
        local BringInsValid = true
        local BringInsValidQ = true
        local ValidEquip = true
        local DebugGlider = false
        local Kiet1308 = false
        local EquipAttack = false
        local noclip = false
        local inactiveTransparencyTokens = 0.7
        local inactiveBufferTokens = 0.05
        local Valid2 = true
        function isActiveTokens(v)
            if v and v:IsA("Part") then
                return --[[v.DataCost ~= 32]] not ((v.Transparency + inactiveBufferTokens) > inactiveTransparencyTokens and
                    (v.Transparency - inactiveBufferTokens) < inactiveTransparencyTokens)
            end
        end
        local ChangeGlider=false
        local Glider="Glider"
        local t = require(game:GetService("ReplicatedStorage").Parachutes)
        local old = t.Get
        t.Get = function(a)
            if ChangeGlider then
            return old(Glider)
            end
            return old(a)
        end
      











if getgenv().Tvk then 
    if game.CoreGui:FindFirstChild("Sea Hub Premium GUI") then 
        for k,v in pairs(game.CoreGui:GetChildren()) do 
            if v.Name=="Sea Hub Premium GUI" then 
                v:Destroy()
            end
        end
    end
end
getgenv().Tvk=true
getgenv().UI_Setting = {
    Loaded = false;
    Enabled = true;
}

getgenv().UI_Color = {
    ['Main'] = {
        ['Main Color'] = Color3.fromRGB(131, 181, 255);
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
        ['Image Icon'] = "rbxassetid://6248942117"; -- Default Logo
        ['Button Effect'] = Color3.fromRGB(230, 230, 230);
    };
    ['Noti'] = {
        ['Main Color'] = Color3.fromRGB(131, 181, 255);
        ['Title Color'] = Color3.fromRGB(230, 230, 230);
        ['Image Icon'] = "rbxassetid://6248942117"; -- Default Logo
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
    };
    ['Page'] = {
        ['Page Selected Color'] = Color3.fromRGB(131, 181, 255);
        ['Page Search Color'] = Color3.fromRGB(131, 181, 255);
    };
    ['Section'] = {
        ['Underline Color'] = Color3.fromRGB(131, 181, 255);
        ['Text Color'] = Color3.fromRGB(131, 181, 255);
    };
    ['Toggle'] = {
        ['Main Color'] = Color3.fromRGB(131, 181, 255);
        ['Background Color'] = Color3.fromRGB(43, 43, 43);
        ['Checkbox Color'] = Color3.fromRGB(131, 181, 255);
        ['Checked Color'] = Color3.fromRGB(230, 230, 230);
        ['Title Color'] = Color3.fromRGB(230, 230, 230);
        ['Desc Color'] = Color3.fromRGB(185, 185, 185);

    };
    ['Button'] = {
        ['Main Color'] = Color3.fromRGB(131, 181, 255);
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
    };
    ['Label'] = {
        ['Main Color'] = Color3.fromRGB(101, 152, 220);
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
    };
    ['Dropdown'] = {
        ['Main Color'] = Color3.fromRGB(90, 90, 90);
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
        ['Icon Color'] = Color3.fromRGB(230, 230, 230);
		['Button Color'] = Color3.fromRGB(90, 90, 90);
        ['Selected Color'] = Color3.fromRGB(131, 181, 255);
    };
    ['Bind'] = {
        ['Background Color'] = Color3.fromRGB(43, 43, 43);
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
        ['Key Color'] = Color3.fromRGB(230, 230, 230);
        ['Bind Color'] = Color3.fromRGB(90, 90, 90);
    },
    ['Box'] = {
        ['Background Color'] = Color3.fromRGB(43, 43, 43);
        ['Box Color'] = Color3.fromRGB(90, 90, 90);
        ['Title Color'] = Color3.fromRGB(230, 230, 230);
        ['Text Color'] = Color3.fromRGB(230, 230, 230);
        ['Placeholder Color'] = Color3.fromRGB(178, 178, 178);
        ['Line Color'] = Color3.fromRGB(131, 181, 255);
    };
    ['Slider'] = {
        ['Background Color'] = Color3.fromRGB(43, 43, 43);
        ['Box Color'] = Color3.fromRGB(90, 90, 90);
        ['Title Color'] = Color3.fromRGB(230, 230, 230);
        ['Value Color'] = Color3.fromRGB(230, 230, 230);
        ['Barr Color'] = Color3.fromRGB(75, 75, 75);
        ['Bar Active Color'] = Color3.fromRGB(131, 181, 255);
        ['Bar Color'] = Color3.fromRGB(59, 82, 115);
    }
    
}

local Library = {};
local Library_Function = {}
local TweenService = game:GetService('TweenService')
local uis = game:GetService("UserInputService")

function Library_Function.Destroy()
    getgenv().UI_Setting.Loaded = false;
    Library_Function.Gui:Destroy();
	Library_Function.NotiGui:Destroy();
end

local result, code = pcall(function()
	return game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(game.Players.LocalPlayer)
end)
getgenv().ThangNayLaVietNam = false
if result and code == "VN" then
    getgenv().ThangNayLaVietNam = true
end

--Button Effect
function Library_Function.ButtonEffect()
	local mouse = game:GetService("Players").LocalPlayer:GetMouse();
	local buoi = Drawing.new("Circle")
	buoi.Visible = true
	buoi.Radius = 10
	buoi.Filled = true
	buoi.Color = getgenv().UI_Color['Main']['Button Effect']
	buoi.Position = Vector2.new(mouse.X, mouse.Y + 35)


	local BuoiFolder = Instance.new('Folder')
	BuoiFolder.Parent = Library_Function.gui
	BuoiFolder.Name = 'Game nhu buoi'

	local a = Instance.new('NumberValue')
	a.Value = 10
	a.Parent = BuoiFolder
	a.Name = 'Rua nhu buoi'

	local b = Instance.new('NumberValue')
	b.Value = 1
	b.Parent = BuoiFolder
	b.Name = 'Rua nhu buoi 2'

	TweenService:Create(a,TweenInfo.new(.25),{Value = 25}):Play()
	TweenService:Create(b,TweenInfo.new(.25),{Value = 0}):Play()


	a:GetPropertyChangedSignal('Value'):Connect(function()
		buoi.Radius = a.Value
	end)


	b:GetPropertyChangedSignal('Value'):Connect(function()
		buoi.Transparency = b.Value
	end)

	wait(.5)
	BuoiFolder:Destroy()
end

Library_Function.GetIMG = function(url)
    local File = 'SynAsset ['
    if url and type(url) == 'string' and tostring(game:HttpGet(url)):find('PNG') then
        for i = 1, 5 do
            File = tostring(File..string.char(math.random(65, 122)))
        end
        File = File..'].png'
        writefile(File, game:HttpGet(url))
        coroutine.wrap(function()
            wait(5)
            if isfile(File) then
                delfile(File)
            end
        end)()
        return getsynasset(File)
    end
end

local MainLogo = "rbxassetid://6248942117"
getgenv().FaiFaiMax = ""
if getgenv().UI_Color['Main']['Image Icon'] == "rbxassetid://6248942117" then
    if math.random(1, 20) == 20 then
        MainLogo = Library_Function.GetIMG('https://images-ext-2.discordapp.net/external/WWsOm6lX8LxLoTK8r6rqZkFQxu7U43r2WCakjtRZvlg/%3Fsize%3D4096/https/cdn.discordapp.com/icons/832881901429063710/5dfc2a82bed36b489864bbce42eaa14d.png')
    elseif getgenv().ThangNayLaVietNam then
        if math.random(1, 55) == 55 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916515395731595284/kisspng-fifa-online-3-blackshot-garena-icon100-computer-i-steam-5aba1e33155b79.1934739515221468670875.png?width=625&height=613')
            getgenv().FaiFaiMax = "<font color=\"rgb(255, 60, 0)\">MAX</font> "
        elseif math.random(1, 10000) == 10000 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916529363804119090/334733793098211.png')
            BackgroundVideo = "https://cdn.discordapp.com/attachments/832898415083913237/916525990950363206/ezgif.com-gif-maker.webm"
			GUITransparency = 0.5
        end
    end
    if MainLogo == "rbxassetid://6248942117" then
        if os.date("*t")["month"] == 10 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916612141459574804/Untitled.png') -- Haloween
        elseif os.date("*t")["month"] == 12 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916609934538440724/833324349884071936.png') -- Christmas
            if getgenv().EnableSnowFalling then
				BackgroundVideo = "https://cdn.discordapp.com/attachments/832898415083913237/917219520962236476/snow.webm"
				GUITransparency = 0.6
			end
        elseif os.date("*t")["day"] == 1
        and os.date("*t")["month"] == 1 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916611093596626984/833324366263222293.png') -- New Year
        elseif os.date("*t")["day"] == 14
        and os.date("*t")["month"] == 3 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916612591101566997/848573848302649374.png') -- Anniversary
        end
    end
    if getgenv().Key == "436787166b5e72a"
    or getgenv().Key == "a10dc0bdd7b3dc1" then
        if math.random(1, 2) == 1 then
            MainLogo = Library_Function.GetIMG('https://media.discordapp.net/attachments/832891957126365234/916529363804119090/334733793098211.png')
            BackgroundVideo = "https://cdn.discordapp.com/attachments/832898415083913237/916525990950363206/ezgif.com-gif-maker.webm"
			GUITransparency = 0.5
        end
    end
else
    MainLogo = getgenv().UI_Color['Main']['Image Icon']
end

Library_Function.Gui = Instance.new('ScreenGui')
Library_Function.Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Library_Function.Gui.Name = 'Sea Hub Premium GUI'
if BackgroundVideo then
	getgenv().ReadyForGuiLoaded = false
	spawn(function()
		Library_Function.Gui.Enabled = false
		repeat wait()
		until getgenv().ReadyForGuiLoaded
		Library_Function.Gui.Enabled = true
	end)
end

Library_Function.NotiGui = Instance.new('ScreenGui')
Library_Function.NotiGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Library_Function.NotiGui.Name = 'Sea Hub Premium Notification'


local NotiContainer = Instance.new("Frame")
local NotiList = Instance.new("UIListLayout")


NotiContainer.Name = "NotiContainer"
NotiContainer.Parent = Library_Function.NotiGui
NotiContainer.AnchorPoint = Vector2.new(1, 1)
NotiContainer.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
NotiContainer.BackgroundTransparency = 1.000
NotiContainer.Position = UDim2.new(1, -5, 1, -5)
NotiContainer.Size = UDim2.new(0, 350, 1, -10)

NotiList.Name = "NotiList"
NotiList.Parent = NotiContainer
NotiList.SortOrder = Enum.SortOrder.LayoutOrder
NotiList.VerticalAlignment = Enum.VerticalAlignment.Bottom
NotiList.Padding = UDim.new(0, 5)

if syn.protect_gui then 
	syn.protect_gui(Library_Function.Gui)
    syn.protect_gui(Library_Function.NotiGui)
	Library_Function.Gui.Parent = game:GetService('CoreGui')
    Library_Function.NotiGui.Parent = game:GetService('CoreGui')
end


function Library_Function.Getcolor(color)
	return {math.floor(color.r*255),math.floor(color.g*255),math.floor(color.b*255)}
end

if getgenv().UI_Setting.Loaded then 
    return
end
getgenv().UI_Setting.Loaded = true

function Library_Function.ToggledUI()
    getgenv().UI_Setting.Toggled = not getgenv().UI_Setting.Toggled;
    Library_Function.Gui.Enabled = getgenv().UI_Setting.Toggled;
end

function Library_Function.CreateNoti(Setting)
	local TitleName = Setting.Title or ""; 
	local Desc = Setting.Desc; 
	local Timeshow = Setting.ShowTime or 10;

	local NotiFrame = Instance.new("Frame")
	local Noticontainer = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Topnoti = Instance.new("Frame")
	local Ruafimg = Instance.new("ImageLabel")
	local RuafimgCorner = Instance.new("UICorner")
	local TextLabel = Instance.new("TextLabel")
	local CloseContainer = Instance.new("Frame")
	local CloseImage = Instance.new("ImageLabel")
	local TextButton = Instance.new("TextButton")
	local TextLabel_2 = Instance.new("TextLabel")

	NotiFrame.Name = "NotiFrame"
	NotiFrame.Parent = NotiContainer
	NotiFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	NotiFrame.BackgroundTransparency = 1.000
	NotiFrame.ClipsDescendants = true
	NotiFrame.Position = UDim2.new(0, 0, 0.865191162, 0)
	NotiFrame.Size = UDim2.new(1, 0, 0, 100)

	Noticontainer.Name = "Noticontainer"
	Noticontainer.Parent = NotiFrame
	Noticontainer.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
	Noticontainer.Position = UDim2.new(1, 0, 0, 0)
	Noticontainer.Size = UDim2.new(1, 0, 1, 0)

	UICorner.CornerRadius = UDim.new(0, 4)
	UICorner.Parent = Noticontainer

	Topnoti.Name = "Topnoti"
	Topnoti.Parent = Noticontainer
	Topnoti.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	Topnoti.BackgroundTransparency = 1.000
	Topnoti.Position = UDim2.new(0, 0, 0, 5)
	Topnoti.Size = UDim2.new(1, 0, 0, 25)

	Ruafimg.Name = "Ruafimg"
	Ruafimg.Parent = Topnoti
	Ruafimg.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	Ruafimg.BackgroundTransparency = 1.000
	Ruafimg.Position = UDim2.new(0, 10, 0, 0)
	Ruafimg.Size = UDim2.new(0, 25, 0, 25)
	Ruafimg.Image = getgenv().UI_Color['Noti']['Image Icon']

	RuafimgCorner.CornerRadius = UDim.new(1, 0)
	RuafimgCorner.Name = "RuafimgCorner"
	RuafimgCorner.Parent = Ruafimg

	TextLabel.Parent = Topnoti
	TextLabel.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Position = UDim2.new(0, 40, 0, 0)
	TextLabel.Size = UDim2.new(1, -40, 1, 0)
	TextLabel.Font = Enum.Font.GothamBold
    TextLabel.Text = "<font color=\"rgb("..tostring(Library_Function.Getcolor(getgenv().UI_Color['Noti']['Main Color'])[1])..','..tostring(Library_Function.Getcolor(getgenv().UI_Color['Noti']['Main Color'])[2])..','..tostring(Library_Function.Getcolor(getgenv().UI_Color['Noti']['Main Color'])[3])..")\">Sea Hub Premium</font> "..TitleName
	TextLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel.RichText = true

	CloseContainer.Name = "CloseContainer"
	CloseContainer.Parent = Topnoti
	CloseContainer.AnchorPoint = Vector2.new(1, 0.5)
	CloseContainer.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	CloseContainer.BackgroundTransparency = 1.000
	CloseContainer.Position = UDim2.new(1, -4, 0.5, 0)
	CloseContainer.Size = UDim2.new(0, 22, 0, 22)

	CloseImage.Name = "CloseImage"
	CloseImage.Parent = CloseContainer
	CloseImage.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	CloseImage.BackgroundTransparency = 1.000
	CloseImage.Size = UDim2.new(1, 0, 1, 0)
	CloseImage.Image = "rbxassetid://3926305904"
	CloseImage.ImageRectOffset = Vector2.new(284, 4)
	CloseImage.ImageRectSize = Vector2.new(24, 24)

	TextButton.Parent = CloseContainer
	TextButton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	TextButton.BackgroundTransparency = 1.000
	TextButton.Size = UDim2.new(1, 0, 1, 0)
	TextButton.Font = Enum.Font.SourceSans
	TextButton.Text = ""
	TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	TextButton.TextSize = 14.000

	if Desc then
        TextLabel_2.Name = 'Bu cac tao ne'
        TextLabel_2.Parent = Noticontainer
        TextLabel_2.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        TextLabel_2.BackgroundTransparency = 1.000
        TextLabel_2.Position = UDim2.new(0, 10, 0, 35)
        TextLabel_2.Size = UDim2.new(1, -15, 1, -40)
        TextLabel_2.Font = Enum.Font.GothamBold
        TextLabel_2.Text = Desc
        TextLabel_2.TextColor3 = Color3.fromRGB(230, 230, 230)
        TextLabel_2.TextSize = 14.000
        TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
        TextLabel_2.RichText = true
    end

	local function remove()
		TweenService:Create(Noticontainer,TweenInfo.new(.25),{Position = UDim2.new(1,0,0,0)}):Play()
		wait(.25)
		NotiFrame:Destroy()
	end

	TweenService:Create(Noticontainer,TweenInfo.new(.25),{Position = UDim2.new(0,0,0,0)}):Play()

	TextButton.MouseEnter:Connect(function()
		TweenService:Create(CloseImage,TweenInfo.new(.25),{ImageColor3 = getgenv().UI_Color['Noti']['Main Color']}):Play()
	end)

	TextButton.MouseLeave:Connect(function()
		TweenService:Create(CloseImage,TweenInfo.new(.25),{ImageColor3 = Color3.fromRGB(255,255,255)}):Play()
	end)

	TextButton.MouseButton1Click:Connect(function()
		spawn(function() Library_Function.ButtonEffect() end)
		wait(.25)
		remove()
	end)

	spawn(function()
		wait(Timeshow)
		remove()
	end)


end


function Library.CreateMain(Setting)

    local MainTitleText = tostring(Setting.Title) or "Sea Hub Premium"
    local MainDesc = Setting.Desc or ""

    local djtmemay = false
    cac = false

    local function makeDraggable(topBarObject, object)
        local dragging = nil
        local dragInput = nil
        local dragStart = nil
        local startPosition = nil
        topBarObject.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPosition = object.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        topBarObject.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        uis.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                local delta = input.Position - dragStart
                if not djtmemay and cac then
                    TweenService:Create(object, TweenInfo.new(0.35,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {
                        Position = UDim2.new(startPosition.X.Scale, startPosition.X.Offset + delta.X, startPosition.Y.Scale, startPosition.Y.Offset + delta.Y)
                    }):Play()
                elseif not djtmemay and not cac then
                    object.Position = UDim2.new(startPosition.X.Scale, startPosition.X.Offset + delta.X, startPosition.Y.Scale, startPosition.Y.Offset + delta.Y)
                end
            end
        end)
    end

    local Main = Instance.new("Frame")
    local djtmemays = Instance.new("ImageLabel")
    local MainContainer = Instance.new("VideoFrame")
    local MainCorner = Instance.new("UICorner")
    local TopMain = Instance.new("Frame")
    local ImageLabel = Instance.new("ImageLabel")
    local TextLabel = Instance.new("TextLabel")
    local PageControl = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local ControlList = Instance.new("ScrollingFrame")
    local UIListLayout = Instance.new("UIListLayout")
    local ControlTitle = Instance.new("TextLabel")
    local MainPage = Instance.new("Frame")
    local UIPage = Instance.new("UIPageLayout")

    Main.Name = "Main"
    Main.Parent = Library_Function.Gui
    Main.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
    Main.BackgroundTransparency = 1.000
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.Size = UDim2.new(0, 629, 0, 359)

    makeDraggable(Main, Main)

    djtmemays.Name = "djtmemays"
    djtmemays.Parent = Main
    djtmemays.AnchorPoint = Vector2.new(0.5, 0.5)
    djtmemays.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    djtmemays.BackgroundTransparency = 1.000
    djtmemays.Position = UDim2.new(0.5, 0, 0.5, 0)
    djtmemays.Selectable = true
    djtmemays.Size = UDim2.new(1, 30, 1, 30)
    djtmemays.Image = "rbxassetid://8068653048"
    djtmemays.ImageColor3 = getgenv().UI_Color['Main']['Main Color']
    djtmemays.ScaleType = Enum.ScaleType.Slice
    djtmemays.SliceCenter = Rect.new(15, 15, 175, 175)
    djtmemays.SliceScale = 1.300

    if BackgroundVideo then
        local url = BackgroundVideo
        writefile("friend.webm", syn.request({Url=url}).Body)
        local sus = isfile("friend.webm")
        if sus then
            MainContainer.Name = "MainContainer"
            MainContainer.Parent = Main
            MainContainer.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
            MainContainer.Size = UDim2.new(1, 0, 1, 0)
            MainContainer.Video = getsynasset("friend.webm")
            MainContainer.Looped = true
            MainContainer:Play()
            wait()
            delfile('friend.webm')
        end
		getgenv().ReadyForGuiLoaded = true
    else
        MainContainer.Name = "MainContainer"
        MainContainer.Parent = Main
        MainContainer.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
        MainContainer.Size = UDim2.new(1, 0, 1, 0)
    end

    MainCorner.CornerRadius = UDim.new(0, 4)
    MainCorner.Name = "MainCorner"
    MainCorner.Parent = MainContainer

    TopMain.Name = "TopMain"
    TopMain.Parent = MainContainer
    TopMain.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    TopMain.BackgroundTransparency = 1.000
    TopMain.Size = UDim2.new(1, 0, 0, 25)

    ImageLabel.Parent = TopMain
    ImageLabel.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    ImageLabel.BackgroundTransparency = 1.000
    ImageLabel.Position = UDim2.new(0, 5, 0, 0)
    ImageLabel.Size = UDim2.new(0, 25, 0, 25)
    ImageLabel.Image = MainLogo

    TextLabel.Parent = TopMain
    TextLabel.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.Position = UDim2.new(0, 35, 0, 0)
    TextLabel.Size = UDim2.new(1, -35, 1, 0)
    TextLabel.Font = Enum.Font.GothamBold
    TextLabel.Text = "<font color=\"rgb("..tostring(Library_Function.Getcolor(getgenv().UI_Color['Main']['Main Color'])[1])..','..tostring(Library_Function.Getcolor(getgenv().UI_Color['Main']['Main Color'])[2])..','..tostring(Library_Function.Getcolor(getgenv().UI_Color['Main']['Main Color'])[3])..")\">Sea Hub Premium</font> " .. getgenv().FaiFaiMax .. MainDesc
    TextLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
    TextLabel.RichText = true
    TextLabel.TextSize = 16.000
    TextLabel.TextWrapped = true
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left

    PageControl.Name = "PageControl"
    PageControl.Parent = MainContainer
    PageControl.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
    PageControl.Position = UDim2.new(0, 5, 0, 30)
    PageControl.Size = UDim2.new(0, 180, 0, 325)
    if BackgroundVideo then
        PageControl.BackgroundTransparency = GUITransparency
    end

    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = PageControl

    ControlList.Name = "ControlList"
    ControlList.Parent = PageControl
    ControlList.Active = true
    ControlList.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    ControlList.BackgroundTransparency = 1.000
    ControlList.BorderColor3 = Color3.fromRGB(27, 42, 53)
    ControlList.BorderSizePixel = 0
    ControlList.Position = UDim2.new(0, 0, 0, 30)
    ControlList.Size = UDim2.new(1, -5, 1, -30)
    ControlList.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
    ControlList.CanvasSize = UDim2.new(0, 0, 0, 0)
    ControlList.ScrollBarThickness = 5
    ControlList.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"

    UIListLayout.Parent = ControlList
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)

    ControlTitle.Name = "ControlTitle"
    ControlTitle.Parent = PageControl
    ControlTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    ControlTitle.BackgroundTransparency = 1.000
    ControlTitle.Position = UDim2.new(0, 5, 0, 0)
    ControlTitle.Size = UDim2.new(1, 0, 0, 25)
    ControlTitle.Font = Enum.Font.GothamBold
    ControlTitle.Text = MainTitleText
    ControlTitle.TextColor3 = Color3.fromRGB(230, 230, 230)
    ControlTitle.TextSize = 14.000
    ControlTitle.TextXAlignment = Enum.TextXAlignment.Left

    MainPage.Name = "MainPage"
    MainPage.Parent = MainContainer
    MainPage.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    MainPage.BackgroundTransparency = 1.000
    MainPage.ClipsDescendants = true
    MainPage.Position = UDim2.new(0, 190, 0, 30)
    MainPage.Size = UDim2.new(0, 435, 0, 325)

    UIPage.Name = "UIPage"
    UIPage.Parent = MainPage
    UIPage.FillDirection = Enum.FillDirection.Vertical
    UIPage.SortOrder = Enum.SortOrder.LayoutOrder
    UIPage.EasingDirection = Enum.EasingDirection.InOut
    UIPage.EasingStyle = Enum.EasingStyle.Quart
    UIPage.Padding = UDim.new(0, 10)
    UIPage.TweenTime = .25

    UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        ControlList.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 5)
    end)

    local Main_Function = {}

	local LayoutOrderBut = -1
	local LayoutOrder = -1

    function Main_Function.CreatePage(Setting)

        local Page_Name = tostring(Setting.Page_Name) 
        local Page_Title = tostring(Setting.Page_Title)

        LayoutOrder = LayoutOrder + 1
        LayoutOrderBut = LayoutOrderBut + 1

        --Control 
        local PageName = Instance.new("Frame")
        local Frame = Instance.new("Frame")
        local TabNameCorner = Instance.new("UICorner")
        local Line = Instance.new("Frame")
        local InLine = Instance.new("Frame")
        local LineCorner = Instance.new("UICorner")
        local TabTitleContainer = Instance.new("Frame")
        local TabTitle = Instance.new("TextLabel")
        local PageButton = Instance.new("TextButton")


        PageName.Name = Page_Name.."_Control"
        PageName.Parent = ControlList
        PageName.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        PageName.BackgroundTransparency = 1.000
        PageName.Size = UDim2.new(1, -10, 0, 25)
        PageName.LayoutOrder = LayoutOrderBut

        Frame.Parent = PageName
        Frame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        Frame.BackgroundTransparency = 1.000
        Frame.Position = UDim2.new(0, 5, 0, 0)
        Frame.Size = UDim2.new(1, -5, 1, 0)

        TabNameCorner.CornerRadius = UDim.new(0, 4)
        TabNameCorner.Name = "TabNameCorner"
        TabNameCorner.Parent = Frame

        Line.Name = "Line"
        Line.Parent = Frame
        Line.AnchorPoint = Vector2.new(0, 0.5)
        Line.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        Line.BackgroundTransparency = 1.000
        Line.Position = UDim2.new(0, 0, 0.5, 0)
        Line.Size = UDim2.new(0, 14, 1, 0)

        InLine.Name = "InLine"
        InLine.Parent = Line
        InLine.AnchorPoint = Vector2.new(0.5, 0.5)
        InLine.BackgroundColor3 = getgenv().UI_Color['Page']['Page Selected Color']
        InLine.BorderSizePixel = 0
        InLine.Position = UDim2.new(0.5, 0, 0.5, 0)
        InLine.Size = UDim2.new(1, -10, 0, 0)

        LineCorner.Name = "LineCorner"
        LineCorner.Parent = InLine

        TabTitleContainer.Name = "TabTitleContainer"
        TabTitleContainer.Parent = Frame
        TabTitleContainer.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        TabTitleContainer.BackgroundTransparency = 1.000
        TabTitleContainer.Position = UDim2.new(0, 15, 0, 0)
        TabTitleContainer.Size = UDim2.new(1, -15, 1, 0)

        TabTitle.Name = "TabTitle"
        TabTitle.Parent = TabTitleContainer
        TabTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        TabTitle.BackgroundTransparency = 1.000
        TabTitle.Size = UDim2.new(1, 0, 1, 0)
        TabTitle.Font = Enum.Font.GothamBold
        TabTitle.Text = Page_Name
        TabTitle.TextColor3 = Color3.fromRGB(230, 230, 230)
        TabTitle.TextSize = 14.000
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left

        PageButton.Name = "PageButton"
        PageButton.Parent = PageName
        PageButton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        PageButton.BackgroundTransparency = 1.000
        PageButton.Size = UDim2.new(1, 0, 1, 0)
        PageButton.Font = Enum.Font.SourceSans
        PageButton.Text = ""
        PageButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        PageButton.TextSize = 14.000

        -- Container

        local PageContainer = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local PageTitle = Instance.new("TextLabel")
        local PageList = Instance.new("ScrollingFrame")
        local Pagelistlayout = Instance.new("UIListLayout")

        PageContainer.Name = Page_Name.."_Container"
        PageContainer.Parent = MainPage
        PageContainer.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
        PageContainer.Position = UDim2.new(0, 190, 0, 30)
        PageContainer.Size = UDim2.new(0, 435, 0, 325)
        PageContainer.LayoutOrder = LayoutOrder
        if BackgroundVideo then
            PageContainer.BackgroundTransparency = GUITransparency
        end

        UICorner.CornerRadius = UDim.new(0, 4)
        UICorner.Parent = PageContainer

        PageTitle.Name = "PageTitle"
        PageTitle.Parent = PageContainer
        PageTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        PageTitle.BackgroundTransparency = 1.000
        PageTitle.Position = UDim2.new(0, 5, 0, 0)
        PageTitle.Size = UDim2.new(1, 0, 0, 25)
        PageTitle.Font = Enum.Font.GothamBold
        PageTitle.Text = Page_Title
        PageTitle.TextColor3 = Color3.fromRGB(230, 230, 230)
        PageTitle.TextSize = 16.000
        PageTitle.TextXAlignment = Enum.TextXAlignment.Left

        PageList.Name = "PageList"
        PageList.Parent = PageContainer
        PageList.Active = true
        PageList.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        PageList.BackgroundTransparency = 1.000
        PageList.BorderColor3 = Color3.fromRGB(27, 42, 53)
        PageList.BorderSizePixel = 0
        PageList.Position = UDim2.new(0, 5, 0, 30)
        PageList.Size = UDim2.new(1, -10, 1, -30)
        PageList.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
        PageList.ScrollBarThickness = 5
        PageList.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"

        Pagelistlayout.Name = "Pagelistlayout"
        Pagelistlayout.Parent = PageList
        Pagelistlayout.SortOrder = Enum.SortOrder.LayoutOrder
        Pagelistlayout.Padding = UDim.new(0, 5)
        Pagelistlayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            PageList.CanvasSize = UDim2.new(0, 0, 0, Pagelistlayout.AbsoluteContentSize.Y + 5)
        end)

        local PageSearch = Instance.new("Frame")
        local PageSearchCorner = Instance.new("UICorner")
        local SearchFrame = Instance.new("Frame")
        local SearchIcon = Instance.new("ImageLabel")
        local active = Instance.new("TextButton")
        local Bucu = Instance.new("TextBox")

        PageSearch.Name = "PageSearch"
        PageSearch.Parent = PageContainer
        PageSearch.AnchorPoint = Vector2.new(1, 0)
        PageSearch.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
        PageSearch.Position = UDim2.new(1, -5, 0, 5)
        PageSearch.Size = UDim2.new(0, 20, 0, 20)
        PageSearch.ClipsDescendants = true

        PageSearchCorner.CornerRadius = UDim.new(0, 2)
        PageSearchCorner.Name = "PageSearchCorner"
        PageSearchCorner.Parent = PageSearch

        SearchFrame.Name = "SearchFrame"
        SearchFrame.Parent = PageSearch
        SearchFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SearchFrame.BackgroundTransparency = 1.000
        SearchFrame.Size = UDim2.new(0, 20, 0, 20)

        SearchIcon.Name = "SearchIcon"
        SearchIcon.Parent = SearchFrame
        SearchIcon.AnchorPoint = Vector2.new(0.5, 0.5)
        SearchIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SearchIcon.BackgroundTransparency = 1.000
        SearchIcon.Position = UDim2.new(0.5, 0, 0.5, 0)
        SearchIcon.Size = UDim2.new(0, 16, 0, 16)
        SearchIcon.Image = "rbxassetid://8154282545"

        active.Name = "active"
        active.Parent = SearchFrame
        active.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        active.BackgroundTransparency = 1.000
        active.Size = UDim2.new(1, 0, 1, 0)
        active.Font = Enum.Font.SourceSans
        active.Text = ""
        active.TextColor3 = Color3.fromRGB(0, 0, 0)
        active.TextSize = 14.000

        Bucu.Name = "Bucu"
        Bucu.Parent = PageSearch
        Bucu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Bucu.BackgroundTransparency = 1.000
        Bucu.Position = UDim2.new(0, 30, 0, 0)
        Bucu.Size = UDim2.new(1, -30, 1, 0)
        Bucu.Font = Enum.Font.GothamBold
        Bucu.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
        Bucu.Text = ""
        Bucu.TextColor3 = Color3.fromRGB(255, 255, 255)
        Bucu.TextSize = 14.000
        Bucu.TextXAlignment = Enum.TextXAlignment.Left
        Bucu.PlaceholderText = "Search Section name"

        local cummmed = false 

        active.MouseEnter:Connect(function()
            TweenService:Create(SearchIcon,TweenInfo.new(0.1),{ImageColor3 = getgenv().UI_Color['Page']['Page Search Color']}):Play()
        end)

        active.MouseLeave:Connect(function()
            TweenService:Create(SearchIcon,TweenInfo.new(0.1),{ImageColor3 = Color3.fromRGB(255,255,255)}):Play()
        end)

        active.MouseButton1Click:Connect(function()
            cummmed = not cummmed
            local size = cummmed and UDim2.new(0,175,0,20) or  UDim2.new(0,20,0,20)
	        game.TweenService:Create(PageSearch,TweenInfo.new(.5),{Size = size}):Play()
        end)

        local function succac()
            for i,v in next, PageList:GetChildren() do 
                if not v:IsA('UIListLayout') then 
                    v.Visible = false
                end
            end
        end
        
        local function ra()
            for a, b in pairs(PageList:GetChildren()) do
                if not b:IsA('UIListLayout') then 
                    if string.find(string.lower(b.Name),string.lower(Bucu.Text)) then 
                        b.Visible = true
                    end
                end
            end
        end
        
        Bucu:GetPropertyChangedSignal("Text"):Connect(function()
            succac()
            ra()
        end)

        for i,v in pairs(ControlList:GetChildren()) do
            if not (v:IsA('UIListLayout')) then
                if i == 2 then 
                    v.Frame.Line.InLine.Size = UDim2.new(1, -10, 1, -10)
                    oldlay = v.LayoutOrder
					oldobj = v
                end
            end
        end

        PageButton.MouseButton1Click:Connect(function()
            Library_Function.ButtonEffect()
        end)

        PageButton.MouseButton1Click:Connect(function()

            if PageContainer.Name == Page_Name.."_Container" then 

                for i,v in pairs(MainPage:GetChildren()) do
                    if not (v:IsA('UIPageLayout')) and not (v:IsA('UICorner')) then
                        v.Visible = false
                    end
                end
                PageContainer.Visible = true 
                UIPage:JumpTo(PageContainer)

                for i,v in next, ControlList:GetChildren() do
                    if not (v:IsA('UIListLayout')) then
                        if v.Name == Page_Name.."_Control" then 
                            if v.LayoutOrder > oldlay  then 
								oldobj.Active = false 
								TweenService:Create(oldobj.Frame.Line.InLine,TweenInfo.new(.175),{Size = UDim2.new(1,-10,0,0),Position = UDim2.new(0.5, 0, 1, 0), AnchorPoint = Vector2.new(.5,1)}):Play()
								v.Frame.Line.InLine.Position = UDim2.new(0.5, 0, 0, 0)
								v.Frame.Line.InLine.AnchorPoint = Vector2.new(.5,0)
								wait(.25/2)
								TweenService:Create(v.Frame.Line.InLine,TweenInfo.new(.175),{Size = UDim2.new(1,-10,1,-10),Position = UDim2.new(0.5, 0, .5, 0), AnchorPoint = Vector2.new(.5,.5)}):Play()

								v.Active = true
								oldobj = v
								oldlay = v.LayoutOrder
							else
								oldobj.Active = false 
								TweenService:Create(oldobj.Frame.Line.InLine,TweenInfo.new(.175),{Size = UDim2.new(1,-10,0,0),Position = UDim2.new(0.5, 0, 0, 0), AnchorPoint = Vector2.new(.5,0)}):Play()
								v.Frame.Line.InLine.Position = UDim2.new(0.5, 0, 1, 0)
								v.Frame.Line.InLine.AnchorPoint = Vector2.new(.5,1)
								wait(.25/2)
								TweenService:Create(v.Frame.Line.InLine,TweenInfo.new(.175),{Size = UDim2.new(1,-10,1,-10),Position = UDim2.new(0.5, 0, .5, 0), AnchorPoint = Vector2.new(.5,.5)}):Play()
								v.Active = true
								oldobj = v
								oldlay = v.LayoutOrder
							end

                        end
                    end
                end

            end
        end)

        local Page_Function = {}

            function Page_Function.CreateSection(Section_Name)

                local Section = Instance.new("Frame")
                local UICorner = Instance.new("UICorner")
                local Topsec = Instance.new("Frame")
                local Sectiontitle = Instance.new("TextLabel")
                local Linesec = Instance.new("Frame")
                local UIGradient = Instance.new("UIGradient")
                local SectionList = Instance.new("UIListLayout")


                Section.Name = Section_Name.."_Dot"
                Section.Parent = PageList
                Section.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
                Section.Size = UDim2.new(0, 415, 0, 100)
                if BackgroundVideo then
                    Section.BackgroundTransparency = GUITransparency
                end

                UICorner.CornerRadius = UDim.new(0, 4)
                UICorner.Parent = Section

                Topsec.Name = "Topsec"
                Topsec.Parent = Section
                Topsec.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                Topsec.BackgroundTransparency = 1.000
                Topsec.Size = UDim2.new(0, 415, 0, 30)

                Sectiontitle.Name = "Sectiontitle"
                Sectiontitle.Parent = Topsec
                Sectiontitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                Sectiontitle.BackgroundTransparency = 1.000
                Sectiontitle.Size = UDim2.new(1, 0, 1, 0)
                Sectiontitle.Font = Enum.Font.GothamBold
                Sectiontitle.Text = Section_Name
                Sectiontitle.TextColor3 = getgenv().UI_Color['Section']['Text Color']
                Sectiontitle.TextSize = 14.000

                Linesec.Name = "Linesec"
                Linesec.Parent = Topsec
                Linesec.AnchorPoint = Vector2.new(0.5, 1)
                Linesec.BackgroundColor3 = getgenv().UI_Color['Section']['Underline Color']
                Linesec.BorderSizePixel = 0
                Linesec.Position = UDim2.new(0.5, 0, 1, -2)
                Linesec.Size = UDim2.new(1, -10, 0, 2)

                UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 1.00), NumberSequenceKeypoint.new(0.50, 0.00), NumberSequenceKeypoint.new(0.51, 0.02), NumberSequenceKeypoint.new(1.00, 1.00)}
                UIGradient.Parent = Linesec

                SectionList.Name = "SectionList"
                SectionList.Parent = Section
                SectionList.SortOrder = Enum.SortOrder.LayoutOrder
                SectionList.Padding = UDim.new(0, 5)

                SectionList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                    Section.Size = UDim2.new(1, -5, 0, SectionList.AbsoluteContentSize.Y + 5)
                end)

                local Section_Function = {}

                   function Section_Function.CreateToggle(Setting, Callback)

                        local Title = tostring(Setting.Title)
                        local Desc = Setting.Desc
                        local Default = Setting.Default
                        local Callback = Callback or function() end

                        local ToggleFrame = Instance.new("Frame")
                        local TogFrame1 = Instance.new("Frame")
                        local checkbox = Instance.new("ImageLabel")
                        local check = Instance.new("ImageLabel")
                        local ToggleDesc = Instance.new("TextLabel")
                        local ToggleTitle = Instance.new("TextLabel")
                        local ToggleBg = Instance.new("Frame")
                        local ToggleCorner = Instance.new("UICorner")
                        local ToggleButton = Instance.new("TextButton")
                        local ToggleList = Instance.new("UIListLayout")

                        ToggleFrame.Name = "ToggleFrame"
                        ToggleFrame.Parent = Section
                        ToggleFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ToggleFrame.BackgroundTransparency = 1.000
                        ToggleFrame.Position = UDim2.new(0, 0, 0.300000012, 0)
                        ToggleFrame.Size = UDim2.new(1, 0, 0, 0)
                        ToggleFrame.AutomaticSize = Enum.AutomaticSize.Y

                        TogFrame1.Name = "TogFrame1"
                        TogFrame1.Parent = ToggleFrame
                        TogFrame1.AnchorPoint = Vector2.new(0.5, 0.5)
                        TogFrame1.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        TogFrame1.BackgroundTransparency = 1.000
                        TogFrame1.Position = UDim2.new(0.5, 0, 0.5, 0)
                        TogFrame1.Size = UDim2.new(1, -10, 0, 0)
                        TogFrame1.AutomaticSize = Enum.AutomaticSize.Y

                        checkbox.Name = "checkbox"
                        checkbox.Parent = TogFrame1
                        checkbox.AnchorPoint = Vector2.new(1, 0.5)
                        checkbox.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        checkbox.BackgroundTransparency = 1.000
                        checkbox.Position = UDim2.new(1, -5, 0.5, 3)
                        checkbox.Size = UDim2.new(0, 25, 0, 25)
                        checkbox.Image = "rbxassetid://4552505888"
                        checkbox.ImageColor3 = getgenv().UI_Color['Toggle']['Checkbox Color']

                        check.Name = "check"
                        check.Parent = checkbox
                        check.AnchorPoint = Vector2.new(0, 1)
                        check.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        check.BackgroundTransparency = 1.000
                        check.Position = UDim2.new(0, 0, 1, 0)
                        check.Image = "rbxassetid://4555411759"
                        check.ImageColor3 = getgenv().UI_Color['Toggle']['Checked Color']

                        local cac = 5
                        if Desc then
                            cac = 0
                            ToggleDesc.Name = "ToggleDesc"
                            ToggleDesc.Parent = TogFrame1
                            ToggleDesc.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                            ToggleDesc.BackgroundTransparency = 1.000
                            ToggleDesc.Position = UDim2.new(0, 15, 0, 20)
                            ToggleDesc.Size = UDim2.new(1, -50, 0, 0)
                            ToggleDesc.Font = Enum.Font.GothamBlack
                            ToggleDesc.Text = Desc
                            ToggleDesc.TextColor3 = getgenv().UI_Color['Toggle']['Desc Color']
                            ToggleDesc.TextSize = 13.000
                            ToggleDesc.TextWrapped = true
                            ToggleDesc.TextXAlignment = Enum.TextXAlignment.Left
                            ToggleDesc.RichText = true
                            ToggleDesc.AutomaticSize = Enum.AutomaticSize.Y
						else
							ToggleDesc.Text = ''
						end

                        ToggleTitle.Name = "ToggleTitle"
                        ToggleTitle.Parent = TogFrame1
                        ToggleTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ToggleTitle.BackgroundTransparency = 1.000
                        ToggleTitle.Position = UDim2.new(0, 10, 0, cac)
                        ToggleTitle.Size = UDim2.new(1, -10, 0, 20)
                        ToggleTitle.Font = Enum.Font.GothamBlack
                        ToggleTitle.Text = Title
                        ToggleTitle.TextColor3 = getgenv().UI_Color['Toggle']['Title Color']
                        ToggleTitle.TextSize = 14.000
                        ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
                        ToggleTitle.TextYAlignment = Enum.TextYAlignment.Center
                        ToggleTitle.RichText = true
                        ToggleTitle.AutomaticSize = Enum.AutomaticSize.Y

                        ToggleBg.Name = "ToggleBg"
                        ToggleBg.Parent = TogFrame1
                        ToggleBg.BackgroundColor3 = getgenv().UI_Color['Toggle']['Background Color']
                        ToggleBg.Size = UDim2.new(1, 0, 1, 6)
                        ToggleBg.ZIndex = 0
						if BackgroundVideo then
							ToggleBg.BackgroundTransparency = GUITransparency
						end

                        ToggleCorner.CornerRadius = UDim.new(0, 4)
                        ToggleCorner.Name = "ToggleCorner"
                        ToggleCorner.Parent = ToggleBg

                        ToggleButton.Name = "ToggleButton"
                        ToggleButton.Parent = TogFrame1
                        ToggleButton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ToggleButton.BackgroundTransparency = 1.000
                        ToggleButton.Size = UDim2.new(1, 0, 1, 6)
                        ToggleButton.Font = Enum.Font.SourceSans
                        ToggleButton.Text = ""
                        ToggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                        ToggleButton.TextSize = 14.000

                        ToggleList.Name = "ToggleList"
                        ToggleList.Parent = ToggleFrame
                        ToggleList.HorizontalAlignment = Enum.HorizontalAlignment.Center
                        ToggleList.SortOrder = Enum.SortOrder.LayoutOrder
                        ToggleList.VerticalAlignment = Enum.VerticalAlignment.Center
                        ToggleList.Padding = UDim.new(0, 5)

                        local function ChangeStage(val)

                            local csize = val and UDim2.new(1,-4,1,-4) or UDim2.new(0,0,0,0)
                            local pos = val and UDim2.new(.5,0,.5,0) or UDim2.new(0,0,1,0)
                            local apos = val and Vector2.new(.5,.5) or Vector2.new(0,1)

                            game.TweenService:Create(check,TweenInfo.new(.25),{Size = csize, Position = pos, AnchorPoint = apos}):Play()

                            Callback(val)

                        end

                        if  Callback then ChangeStage(Default) end 

                        ToggleButton.MouseButton1Click:Connect(function()
                            Library_Function.ButtonEffect()
                        end)

                        ToggleButton.MouseButton1Down:Connect(function()
                            Default = not Default
							ChangeStage(Default)
                        end)

                        local tog_func = {}

								function tog_func.SetStage(value)
									ChangeStage(value)
								end

						return tog_func



                    end

                    function Section_Function.CreateButton(Setting, Callback)

                        local Title = Setting.Title
                        local Callback = Callback or function() end

                        local ButtonFrame = Instance.new("Frame")
                        local ButtonBG = Instance.new("Frame")
                        local ButtonCorner = Instance.new("UICorner")
                        local ButtonTitle = Instance.new("TextLabel")
                        local Button = Instance.new("TextButton")

                        ButtonFrame.Name = Title..'dot'
                        ButtonFrame.Parent = Section
                        ButtonFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ButtonFrame.BackgroundTransparency = 1.000
                        ButtonFrame.Position = UDim2.new(0, 0, 0.300000012, 0)
                        ButtonFrame.Size = UDim2.new(1, 0, 0, 25)

                        ButtonBG.Name = "ButtonBG"
                        ButtonBG.Parent = ButtonFrame
                        ButtonBG.AnchorPoint = Vector2.new(0.5, 0.5)
                        ButtonBG.BackgroundColor3 = getgenv().UI_Color['Button']['Main Color']
                        ButtonBG.Position = UDim2.new(0.5, 0, 0.5, 0)
                        ButtonBG.Size = UDim2.new(1, -10, 1, 0)
						if BackgroundVideo then
							ButtonBG.BackgroundTransparency = GUITransparency
						end

                        ButtonCorner.CornerRadius = UDim.new(0, 4)
                        ButtonCorner.Name = "ButtonCorner"
                        ButtonCorner.Parent = ButtonBG

                        ButtonTitle.Name = "ButtonTitle"
                        ButtonTitle.Parent = ButtonBG
                        ButtonTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ButtonTitle.BackgroundTransparency = 1.000
                        ButtonTitle.Position = UDim2.new(0, 10, 0, 0)
                        ButtonTitle.Size = UDim2.new(1, -10, 1, 0)
                        ButtonTitle.Font = Enum.Font.GothamBlack
                        ButtonTitle.Text = Title
                        ButtonTitle.TextColor3 = getgenv().UI_Color['Button']['Text Color']
                        ButtonTitle.TextSize = 14.000
                        ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left

                        Button.Name = "Button"
                        Button.Parent = ButtonBG
                        Button.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        Button.BackgroundTransparency = 1.000
                        Button.Size = UDim2.new(1, 0, 1, 0)
                        Button.Font = Enum.Font.SourceSans
                        Button.Text = ""
                        Button.TextColor3 = Color3.fromRGB(0, 0, 0)
                        Button.TextSize = 14.000

                        Button.MouseButton1Click:Connect(function()
                            Library_Function.ButtonEffect()
                        end)

                        Button.MouseButton1Down:Connect(function()
                            Callback()
                        end)

                    end

                    function Section_Function.CreateLabel(Setting)

                        local Title = tostring(Setting.Title)

                        local LabelFrame = Instance.new("Frame")
                        local LabelBG = Instance.new("Frame")
                        local LabelCorner = Instance.new("UICorner")
                        local LabelTitle = Instance.new("TextLabel")

                        LabelFrame.Name = "LabelFrame"
                        LabelFrame.Parent = Section
                        LabelFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        LabelFrame.BackgroundTransparency = 1.000
                        LabelFrame.Position = UDim2.new(0, 0, 0.300000012, 0)
                        LabelFrame.Size = UDim2.new(1, 0, 0, 25)

                        LabelBG.Name = "LabelBG"
                        LabelBG.Parent = LabelFrame
                        LabelBG.AnchorPoint = Vector2.new(0.5, 0.5)
                        LabelBG.BackgroundColor3 = getgenv().UI_Color['Label']['Main Color']
                        LabelBG.Position = UDim2.new(0.5, 0, 0.5, 0)
                        LabelBG.Size = UDim2.new(1, -10, 1, 0)
						if BackgroundVideo then
							LabelBG.BackgroundTransparency = GUITransparency
						end

                        LabelCorner.CornerRadius = UDim.new(0, 4)
                        LabelCorner.Name = "LabelCorner"
                        LabelCorner.Parent = LabelBG

                        LabelTitle.Name = "LabelTitle"
                        LabelTitle.Parent = LabelBG
                        LabelTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        LabelTitle.BackgroundTransparency = 1.000
                        LabelTitle.Position = UDim2.new(0, 10, 0, 0)
                        LabelTitle.Size = UDim2.new(1, -10, 1, 0)
                        LabelTitle.Font = Enum.Font.GothamBlack
                        LabelTitle.Text = Title
                        LabelTitle.TextColor3 = getgenv().UI_Color['Label']['Text Color']
                        LabelTitle.TextSize = 14.000
                        LabelTitle.TextXAlignment = Enum.TextXAlignment.Left

                        local label_func = {}

                            function label_func.SetText(text)
                                LabelTitle.Text = text
                            end

                            function label_func.SetColor(color)
                                LabelTitle.TextColor3 = color
                            end

                        return label_func
                    end

                    function Section_Function.CreateDropdown(Setting, Callback)

                        local Title = tostring(Setting.Title)
                        local List = Setting.List
                        local Search = Setting.Search or false
						local Selected = Setting.Selected or false
                        local Default = Setting.Default
                        local Callback = Callback or function() end

                        local DropdownFrame = Instance.new("Frame")
                        local Dropdownbg = Instance.new("Frame")
                        local Dropdowncorner = Instance.new("UICorner")
                        local Topdrop = Instance.new("Frame")
                        local UICorner = Instance.new("UICorner")
                        local ImgDrop = Instance.new("ImageLabel")
                        local DropdownButton = Instance.new("TextButton")
                        local Dropdownlisttt = Instance.new("Frame")
                        local DropdownScroll = Instance.new("ScrollingFrame")
                        local ScrollContainer = Instance.new("Frame")
                        local ScrollContainerList = Instance.new("UIListLayout")


                        local Dropdowntitle; 
                        if Search then 
                            Dropdowntitle = Instance.new("TextBox")
                            DropdownButton.Visible = false
                        else
                            Dropdowntitle = Instance.new("TextLabel")
                        end


                        DropdownFrame.Name = Title.."DropdownFrame"
                        DropdownFrame.Parent = Section
                        DropdownFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        DropdownFrame.BackgroundTransparency = 1.000
                        DropdownFrame.Position = UDim2.new(0, 0, 0.473684222, 0)
                        DropdownFrame.Size = UDim2.new(1, 0, 0, 25)

                        Dropdownbg.Name = "Dropdownbg"
                        Dropdownbg.Parent = DropdownFrame
                        Dropdownbg.AnchorPoint = Vector2.new(0.5, 0.5)
                        Dropdownbg.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
                        Dropdownbg.Position = UDim2.new(0.5, 0, 0.5, 0)
                        Dropdownbg.Size = UDim2.new(1, -10, 1, 0)
                        Dropdownbg.ClipsDescendants = true
						if BackgroundVideo then
							Dropdownbg.BackgroundTransparency = GUITransparency
						end

                        Dropdowncorner.CornerRadius = UDim.new(0, 4)
                        Dropdowncorner.Name = "Dropdowncorner"
                        Dropdowncorner.Parent = Dropdownbg

                        Topdrop.Name = "Topdrop"
                        Topdrop.Parent = Dropdownbg
                        Topdrop.BackgroundColor3 = getgenv().UI_Color['Dropdown']['Button Color']
                        Topdrop.Size = UDim2.new(1, 0, 0, 25)
						if BackgroundVideo then
							Topdrop.BackgroundTransparency = GUITransparency
						end

                        UICorner.CornerRadius = UDim.new(0, 4)
                        UICorner.Parent = Topdrop

                        Dropdowntitle.Name = "Dropdowntitle"
                        Dropdowntitle.Parent = Topdrop
                        Dropdowntitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        Dropdowntitle.BackgroundTransparency = 1.000
                        Dropdowntitle.Position = UDim2.new(0, 10, 0, 0)
                        Dropdowntitle.Size = UDim2.new(1, -10, 1, 0)
                        Dropdowntitle.Font = Enum.Font.GothamBlack
                        Dropdowntitle.Text = ''
                        Dropdowntitle.TextColor3 = getgenv().UI_Color['Dropdown']['Text Color']
                        Dropdowntitle.TextSize = 14.000
                        Dropdowntitle.TextXAlignment = Enum.TextXAlignment.Left
                        local Sel = Instance.new("IntValue",Dropdowntitle)
                        Sel.Value=-1
                        if Default and table.find(List,Default) then 
                            Sel.Value=table.find(List,Default)
                        end
                        if not Selected then
                            if Search then
                                Dropdowntitle.PlaceholderText = Title..': '..tostring(Default); 
                            else
                                Dropdowntitle.Text = Title..': '..tostring(Default); 
                            end
                        else
                            Dropdowntitle.Text = Title..': '..tostring(Default)
                        end

                        ImgDrop.Name = "ImgDrop"
                        ImgDrop.Parent = Topdrop
                        ImgDrop.AnchorPoint = Vector2.new(1, 0.5)
                        ImgDrop.BackgroundColor3 = getgenv().UI_Color['Dropdown']['Icon Color']
                        ImgDrop.BackgroundTransparency = 1.000
                        ImgDrop.BorderColor3 = Color3.fromRGB(27, 42, 53)
                        ImgDrop.Position = UDim2.new(1, -6, 0.5, 0)
                        ImgDrop.Size = UDim2.new(0, 15, 0, 15)
                        ImgDrop.Image = "rbxassetid://6954383209"

                        DropdownButton.Name = "DropdownButton"
                        DropdownButton.Parent = Topdrop
                        DropdownButton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        DropdownButton.BackgroundTransparency = 1.000
                        DropdownButton.Size = UDim2.new(1, 0, 1, 0)
                        DropdownButton.Font = Enum.Font.GothamBold
                        DropdownButton.Text = ""
                        DropdownButton.TextColor3 = Color3.fromRGB(230, 230, 230)
                        DropdownButton.TextSize = 14.000

                        Dropdownlisttt.Name = "Dropdownlisttt"
                        Dropdownlisttt.Parent = Dropdownbg
                        Dropdownlisttt.BackgroundColor3 = getgenv().UI_Color['Dropdown']['Main Color']
                        Dropdownlisttt.BackgroundTransparency = 1.000
                        Dropdownlisttt.BorderSizePixel = 0
                        Dropdownlisttt.Position = UDim2.new(0, 0, 0, 25)
                        Dropdownlisttt.Size = UDim2.new(1, 0, 0, 25)
						if BackgroundVideo then
							Dropdownlisttt.BackgroundTransparency = GUITransparency
						end

                        DropdownScroll.Name = "DropdownScroll"
                        DropdownScroll.Parent = Dropdownlisttt
                        DropdownScroll.Active = true
                        DropdownScroll.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        DropdownScroll.BackgroundTransparency = 1.000
                        DropdownScroll.BorderSizePixel = 0
                        DropdownScroll.Size = UDim2.new(1, 0, 1, 0)
                        DropdownScroll.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                        DropdownScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
                        DropdownScroll.ScrollBarThickness = 5
                        DropdownScroll.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"

                        ScrollContainer.Name = "ScrollContainer"
                        ScrollContainer.Parent = DropdownScroll
                        ScrollContainer.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ScrollContainer.BackgroundTransparency = 1.000
                        ScrollContainer.Position = UDim2.new(0, 5, 0, 5)
                        ScrollContainer.Size = UDim2.new(1, -15, 1, -5)

                        ScrollContainerList.Name = "ScrollContainerList"
                        ScrollContainerList.Parent = ScrollContainer
                        ScrollContainerList.SortOrder = Enum.SortOrder.LayoutOrder

                        ScrollContainerList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                            DropdownScroll.CanvasSize = UDim2.new(0, 0, 0, 10 + ScrollContainerList.AbsoluteContentSize.Y + 5)
                        end)

                        local isbusy = false

                        local found = {}

						local searchtable = {}
						
						local function edit()
							for i in pairs(found) do
								found[i] = nil
							end
							for h, l in pairs(ScrollContainer:GetChildren()) do
								if not l:IsA("UIListLayout") and not l:IsA("UIPadding") and not l:IsA('UIGridLayout') then
									l.Visible = false
								end
							end
							Dropdowntitle.Text = string.lower(Dropdowntitle.Text)
						end

                        local function SearchDropdown()
							local Results = {}
							for i, v in pairs(searchtable) do
								if string.find(v, Dropdowntitle.Text) then
									table.insert(found, v)
								end
							end
							for a, b in pairs(ScrollContainer:GetChildren()) do
								for c, d in pairs(found) do
									if d == b.Name then
										b.Visible = true
									end
								end
							end
						end

                        local function clear_object_in_list()
							for i,v in next, ScrollContainer:GetChildren() do 
								if v:IsA('Frame') then 
									v:Destroy()
								end
							end
						end

						local ListNew = List
                        
						local function refreshlist()
                            clear_object_in_list()

							searchtable = {}
							
							for i, v in pairs(ListNew) do
								if not Selected then 
								table.insert(searchtable, string.lower(v))
								else 
									table.insert(searchtable, string.lower(i))
								end 
							end

                            if not Selected then 
								for i,v in pairs (ListNew) do
                                    local Dropval = Instance.new("Frame")
                                    local DropvalCorner = Instance.new("UICorner")
                                    local Line = Instance.new("Frame")
                                    local InLine = Instance.new("Frame")
                                    local LineCorner = Instance.new("UICorner")
                                    local Dropvalcontainer = Instance.new("Frame")
                                    local Dropvalbutton = Instance.new("TextButton")

                                    Dropval.Name = string.lower(v)
                                    Dropval.Parent = ScrollContainer
                                    Dropval.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropval.BackgroundTransparency = 1.000
                                    Dropval.Size = UDim2.new(1, 0, 0, 25)

                                    DropvalCorner.CornerRadius = UDim.new(0, 4)
                                    DropvalCorner.Name = "DropvalCorner"
                                    DropvalCorner.Parent = Dropval

                                    Line.Name = "Line"
                                    Line.Parent = Dropval
                                    Line.AnchorPoint = Vector2.new(0, 0.5)
                                    Line.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Line.BackgroundTransparency = 1.000
                                    Line.Position = UDim2.new(0, 0, 0.5, 0)
                                    Line.Size = UDim2.new(0, 14, 1, 0)

                                    InLine.Name = "InLine"
                                    InLine.Parent = Line
                                    InLine.AnchorPoint = Vector2.new(0.5, 0.5)
                                    InLine.BackgroundColor3 = getgenv().UI_Color['Dropdown']['Selected Color']
                                    InLine.BorderSizePixel = 0
                                    InLine.Position = UDim2.new(0.5, 0, 0.5, 0)
                                    InLine.Size = UDim2.new(1, -10, 1, -10)
                                    InLine.BackgroundTransparency = 1

                                    LineCorner.Name = "LineCorner"
                                    LineCorner.Parent = InLine

                                    Dropvalcontainer.Name = "Dropvalcontainer"
                                    Dropvalcontainer.Parent = Dropval
                                    Dropvalcontainer.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropvalcontainer.BackgroundTransparency = 1.000
                                    Dropvalcontainer.Position = UDim2.new(0, 15, 0, 0)
                                    Dropvalcontainer.Size = UDim2.new(1, -15, 1, 0)

                                    Dropvalbutton.Name = "Dropvalbutton"
                                    Dropvalbutton.Parent = Dropvalcontainer
                                    Dropvalbutton.Active = false
                                    Dropvalbutton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropvalbutton.BackgroundTransparency = 1.000
                                    Dropvalbutton.Selectable = false
                                    Dropvalbutton.Size = UDim2.new(1, 0, 1, 0)
                                    Dropvalbutton.Font = Enum.Font.GothamBold
                                    Dropvalbutton.Text = v
                                    Dropvalbutton.TextColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropvalbutton.TextSize = 14.000
                                    Dropvalbutton.TextWrapped = true
                                    Dropvalbutton.TextXAlignment = Enum.TextXAlignment.Left
                                    
                                    if Search then
                                        if Sel.Value == i then
                                            InLine.BackgroundTransparency = 0;
                                        end
                                    else
                                        if Sel.Value == i then
                                            InLine.BackgroundTransparency = 0;
                                        end
                                    end

                                    Dropvalbutton.MouseButton1Click:Connect(function()
                
                                        if Search then
											Dropdowntitle.PlaceholderText = Title..': '..v
                                            Sel.Value=i
                                           
										else
											Dropdowntitle.Text = Title..': '..v
                                            Sel.Value=i
                                          
										end


                                        refreshlist()
                                        if Callback then 
                                            Callback(v,i)
                                        end

                                    end)

                                    Dropvalbutton.MouseButton1Click:Connect(function()
                                        Library_Function.ButtonEffect()
                                    end)

                                end

                            else

                                for i,v in pairs (ListNew) do
											
                                    local linetran = v and 0 or 1

                                    local Dropval = Instance.new("Frame")
                                    local DropvalCorner = Instance.new("UICorner")
                                    local Line = Instance.new("Frame")
                                    local InLine = Instance.new("Frame")
                                    local LineCorner = Instance.new("UICorner")
                                    local Dropvalcontainer = Instance.new("Frame")
                                    local Dropvalbutton = Instance.new("TextButton")

                                    Dropval.Name = string.lower(i)
                                    Dropval.Parent = ScrollContainer
                                    Dropval.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropval.BackgroundTransparency = 1.000
                                    Dropval.Size = UDim2.new(1, 0, 0, 25)

                                    DropvalCorner.CornerRadius = UDim.new(0, 4)
                                    DropvalCorner.Name = "DropvalCorner"
                                    DropvalCorner.Parent = Dropval

                                    Line.Name = "Line"
                                    Line.Parent = Dropval
                                    Line.AnchorPoint = Vector2.new(0, 0.5)
                                    Line.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Line.BackgroundTransparency = 1
                                    Line.Position = UDim2.new(0, 0, 0.5, 0)
                                    Line.Size = UDim2.new(0, 14, 1, 0)

                                    InLine.Name = "InLine"
                                    InLine.Parent = Line
                                    InLine.AnchorPoint = Vector2.new(0.5, 0.5)
                                    InLine.BackgroundColor3 = getgenv().UI_Color['Dropdown']['Selected Color']
                                    InLine.BorderSizePixel = 0
                                    InLine.Position = UDim2.new(0.5, 0, 0.5, 0)
                                    InLine.Size = UDim2.new(1, -10, 1, -10)
                                    InLine.BackgroundTransparency = linetran

                                    LineCorner.Name = "LineCorner"
                                    LineCorner.Parent = InLine

                                    Dropvalcontainer.Name = "Dropvalcontainer"
                                    Dropvalcontainer.Parent = Dropval
                                    Dropvalcontainer.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropvalcontainer.BackgroundTransparency = 1.000
                                    Dropvalcontainer.Position = UDim2.new(0, 15, 0, 0)
                                    Dropvalcontainer.Size = UDim2.new(1, -15, 1, 0)

                                    Dropvalbutton.Name = "Dropvalbutton"
                                    Dropvalbutton.Parent = Dropvalcontainer
                                    Dropvalbutton.Active = false
                                    Dropvalbutton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropvalbutton.BackgroundTransparency = 1.000
                                    Dropvalbutton.Selectable = false
                                    Dropvalbutton.Size = UDim2.new(1, 0, 1, 0)
                                    Dropvalbutton.Font = Enum.Font.GothamBold
                                    Dropvalbutton.Text = i
                                    Dropvalbutton.TextColor3 = Color3.fromRGB(230, 230, 230)
                                    Dropvalbutton.TextSize = 14.000
                                    Dropvalbutton.TextWrapped = true
                                    Dropvalbutton.TextXAlignment = Enum.TextXAlignment.Left

                                    Dropvalbutton.MouseButton1Click:Connect(function()
                                        Library_Function.ButtonEffect()
                                    end)
                                    
                                    Dropvalbutton.MouseButton1Click:Connect(function()
                                        v = not v 

                                        local linetran = v and 0 or 1

                                        TweenService:Create(InLine,TweenInfo.new(.5),{BackgroundTransparency = linetran}):Play()

                                        if Callback then
                                            Callback(i,v)
                                            ListNew[i] = v
                                        end
                                    end)

                                end


                            end

                        end

                        if Search then
                            Dropdowntitle.Changed:Connect(function()
                                edit()
                                SearchDropdown()
                            end)
                        end

                        if typeof(Default) ~= 'table' then
							Callback(Default)
							if Search then
                                Dropdowntitle.PlaceholderText = Title..': '..tostring(Default)
                            else
                                Dropdowntitle.Text = Title..': '..tostring(Default)
                            end
						elseif Selected then
							for i,v in next, Default do
								ListNew[i] = v
								Callback(i,v)
							end
                            Dropdowntitle.Text = ''
                            Dropdowntitle.PlaceholderText = Title..': '
						end

                        DropdownButton.MouseButton1Click:Connect(function()
                            refreshlist()
                            isbusy = not isbusy
                            local listsize = isbusy and UDim2.new(1, 0,0, 170) or UDim2.new(1, 0,0, 0)
                            local mainsize = isbusy and UDim2.new(1, 0,0, 200) or UDim2.new(1, 0,0, 25)
                            local DropCRotation = isbusy and 90 or 0

                            TweenService:Create(Dropdownlisttt,TweenInfo.new(.5),{Size = listsize}):Play()
                            TweenService:Create(DropdownFrame,TweenInfo.new(.5),{Size = mainsize}):Play()
                            TweenService:Create(ImgDrop,TweenInfo.new(.5),{Rotation = DropCRotation}):Play()

                        end)

                        DropdownButton.MouseButton1Click:Connect(function()
                            Library_Function.ButtonEffect()
                        end)

                        if Search then
                            Dropdowntitle.Focused:Connect(function()
                                refreshlist()
                                isbusy = not isbusy
                                local listsize = isbusy and UDim2.new(1, 0,0, 170) or UDim2.new(1, 0,0, 0)
                                local mainsize = isbusy and UDim2.new(1, 0,0, 200) or UDim2.new(1, 0,0, 25)
                                local DropCRotation = isbusy and 90 or 0
    
                                TweenService:Create(Dropdownlisttt,TweenInfo.new(.5),{Size = listsize}):Play()
                                TweenService:Create(DropdownFrame,TweenInfo.new(.5),{Size = mainsize}):Play()
                                TweenService:Create(ImgDrop,TweenInfo.new(.5),{Rotation = DropCRotation}):Play()
    
                            end)
    
                            Dropdowntitle.Focused:Connect(function()
                                Library_Function.ButtonEffect()
                            end)
                        end

                        local dropdown_function = {rf=refreshlist}

						function dropdown_function:ClearText()
							if not Selected then
								if Search then
									Dropdowntitle.PlaceholderText = Title..': '
								else
									Dropdowntitle.Text = Title..': ' 
								end
							else
								Dropdowntitle.Text = Title..': '
							end
						end

						function dropdown_function:GetNewList(List)
							refreshlist()
							isbusy = false
							local listsize = isbusy and UDim2.new(1, 0,0, 170) or UDim2.new(1, 0,0, 0)
							local mainsize = isbusy and UDim2.new(1, 0,0, 200) or UDim2.new(1, 0,0, 25)
							local DropCRotation = isbusy and 90 or 0

							TweenService:Create(Dropdownlisttt,TweenInfo.new(.5),{Size = listsize}):Play()
							TweenService:Create(DropdownFrame,TweenInfo.new(.5),{Size = mainsize}):Play()
							TweenService:Create(ImgDrop,TweenInfo.new(.5),{Rotation = DropCRotation}):Play()
							
							ListNew = {}
							ListNew = List

							for i,v in next, ListNew do
								if Selected then
									Callback(i,v)
								end
							end

						end
                        
                        return dropdown_function

                    end

                    function Section_Function.CreateBind(Setting, Callback)

                        local TitleText = tostring(Setting.Title) or ""
                        local KeyCode = Setting.Key
						local Default = Setting.Default or Setting.Key
						local Type = tostring(Default):match("UserInputType") and "UserInputType" or "KeyCode"
						local Callback = Callback or function() end
						
						KeyCode = tostring(KeyCode):gsub("Enum.UserInputType.", "")
						KeyCode = tostring(KeyCode):gsub("Enum.KeyCode.", "")

                        local BindFrame = Instance.new("Frame")
                        local BindCorner = Instance.new("UICorner")
                        local BindBG = Instance.new("Frame")
                        local ButtonCorner = Instance.new("UICorner")
                        local ButtonTitle = Instance.new("TextLabel")
                        local Button = Instance.new("TextButton")
                        local BindCor = Instance.new("Frame")
                        local ButtonCorner_2 = Instance.new("UICorner")
                        local Bindkey = Instance.new("TextButton")

                        BindFrame.Name = TitleText.."bguvl"
                        BindFrame.Parent = Section
                        BindFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        BindFrame.BackgroundTransparency = 1.000
                        BindFrame.Position = UDim2.new(0, 0, 0.208333328, 0)
                        BindFrame.Size = UDim2.new(1, 0, 0, 35)

                        BindCorner.CornerRadius = UDim.new(0, 4)
                        BindCorner.Name = "BindCorner"
                        BindCorner.Parent = BindFrame

                        BindBG.Name = "BindBG"
                        BindBG.Parent = BindFrame
                        BindBG.AnchorPoint = Vector2.new(0.5, 0.5)
                        BindBG.BackgroundColor3 = getgenv().UI_Color['Bind']['Background Color']
                        BindBG.Position = UDim2.new(0.5, 0, 0.5, 0)
                        BindBG.Size = UDim2.new(1, -10, 1, 0)
						if BackgroundVideo then
							BindBG.BackgroundTransparency = GUITransparency
						end

                        ButtonCorner.CornerRadius = UDim.new(0, 4)
                        ButtonCorner.Name = "ButtonCorner"
                        ButtonCorner.Parent = BindBG

                        ButtonTitle.Name = "ButtonTitle"
                        ButtonTitle.Parent = BindBG
                        ButtonTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        ButtonTitle.BackgroundTransparency = 1.000
                        ButtonTitle.Position = UDim2.new(0, 10, 0, 0)
                        ButtonTitle.Size = UDim2.new(1, -10, 1, 0)
                        ButtonTitle.Font = Enum.Font.GothamBlack
                        ButtonTitle.Text = TitleText
                        ButtonTitle.TextColor3 = getgenv().UI_Color['Bind']['Text Color']
                        ButtonTitle.TextSize = 14.000
                        ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left

                        BindCor.Name = "BindCor"
                        BindCor.Parent = BindBG
                        BindCor.AnchorPoint = Vector2.new(1, 0.5)
                        BindCor.BackgroundColor3 = getgenv().UI_Color['Bind']['Bind Color']
                        BindCor.Position = UDim2.new(1, -5, 0.5, 0)
                        BindCor.Size = UDim2.new(0, 150, 0, 25)

                        ButtonCorner_2.CornerRadius = UDim.new(0, 4)
                        ButtonCorner_2.Name = "ButtonCorner"
                        ButtonCorner_2.Parent = BindCor

                        Bindkey.Name = "Bindkey"
                        Bindkey.Parent = BindCor
                        Bindkey.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        Bindkey.BackgroundTransparency = 1.000
                        Bindkey.Size = UDim2.new(1, 0, 1, 0)
                        Bindkey.Font = Enum.Font.GothamBold
                        Bindkey.Text = tostring(Default):gsub("Enum.KeyCode.", "");
                        Bindkey.TextColor3 = getgenv().UI_Color['Bind']['Key Color']
                        Bindkey.TextSize = 14.000

                        local WhitelistedType = {
							[Enum.UserInputType.MouseButton1] = "Mouse1";
							[Enum.UserInputType.MouseButton2] = "Mouse2";
							[Enum.UserInputType.MouseButton3] = "Mouse3";
						};

						Bindkey.MouseButton1Click:Connect(function()
							Library_Function.ButtonEffect()
						end)
		
						Bindkey.MouseButton1Click:Connect(function()
							local Connection;
		
							Bindkey.Text = "...";
		
							Connection = game:GetService("UserInputService").InputBegan:Connect(function(i)
								if WhitelistedType[i.UserInputType] then
									Bindkey.Text = WhitelistedType[i.UserInputType];
									spawn(function()
										wait(0.1)
										Default = i.UserInputType;
										Type = "UserInputType";
									end);
								elseif i.KeyCode ~= Enum.KeyCode.Unknown then
									Bindkey.Text = tostring(i.KeyCode):gsub("Enum.KeyCode.", "");
									spawn(function()
										wait(0.1)
										Default = i.KeyCode;
										Type = "KeyCode";
									end);
								else
									warn("Exception: " .. i.UserInputType .. " " .. i.KeyCode);
								end;
		
		
								Connection:Disconnect();
							end);
						end);
		
						game:GetService("UserInputService").InputBegan:Connect(function(i)
							if (Default == i.UserInputType or Default == i.KeyCode) then
								Callback(Default);
							end;
						end);
                        
                    end

                    function Section_Function.CreateBox(Setting, Callback)

                        local TitleText = tostring(Setting.Title) or ""
                        local Placeholder = tostring(Setting.Placeholder) or ""
                        local Default = Setting.Default or false
                        local Number_Only = Setting.Number or false 
						local Callback = Callback or function() end

                        local BoxFrame = Instance.new("Frame")
                        local BoxCorner = Instance.new("UICorner")
                        local BoxBG = Instance.new("Frame")
                        local ButtonCorner = Instance.new("UICorner")
                        local Boxtitle = Instance.new("TextLabel")
                        local BoxCor = Instance.new("Frame")
                        local ButtonCorner_2 = Instance.new("UICorner")
                        local Boxxx = Instance.new("TextBox")
                        local Lineeeee = Instance.new("Frame")
                        local UICorner = Instance.new("UICorner")

                        BoxFrame.Name = "BoxFrame"
                        BoxFrame.Parent = Section
                        BoxFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        BoxFrame.BackgroundTransparency = 1.000
                        BoxFrame.Position = UDim2.new(0, 0, 0.208333328, 0)
                        BoxFrame.Size = UDim2.new(1, 0, 0, 60)

                        BoxCorner.CornerRadius = UDim.new(0, 4)
                        BoxCorner.Name = "BoxCorner"
                        BoxCorner.Parent = BoxFrame

                        BoxBG.Name = "BoxBG"
                        BoxBG.Parent = BoxFrame
                        BoxBG.AnchorPoint = Vector2.new(0.5, 0.5)
                        BoxBG.BackgroundColor3 = getgenv().UI_Color['Box']['Background Color']
                        BoxBG.Position = UDim2.new(0.5, 0, 0.5, 0)
                        BoxBG.Size = UDim2.new(1, -10, 1, 0)
						if BackgroundVideo then
							BoxBG.BackgroundTransparency = GUITransparency
						end

                        ButtonCorner.CornerRadius = UDim.new(0, 4)
                        ButtonCorner.Name = "ButtonCorner"
                        ButtonCorner.Parent = BoxBG

                        Boxtitle.Name = "Boxtitle"
                        Boxtitle.Parent = BoxBG
                        Boxtitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        Boxtitle.BackgroundTransparency = 1.000
                        Boxtitle.Position = UDim2.new(0, 10, 0, 0)
                        Boxtitle.Size = UDim2.new(1, -10, 0.5, 0)
                        Boxtitle.Font = Enum.Font.GothamBlack
                        Boxtitle.Text = TitleText
                        Boxtitle.TextColor3 = getgenv().UI_Color['Box']['Title Color']
                        Boxtitle.TextSize = 14.000
                        Boxtitle.TextXAlignment = Enum.TextXAlignment.Left

                        BoxCor.Name = "BoxCor"
                        BoxCor.Parent = BoxBG
                        BoxCor.AnchorPoint = Vector2.new(1, 0.5)
                        BoxCor.BackgroundColor3 = getgenv().UI_Color['Box']['Box Color']
                        BoxCor.ClipsDescendants = true
                        BoxCor.Position = UDim2.new(1, -5, 0, 40)
                        BoxCor.Size = UDim2.new(1, -10, 0, 25)

                        ButtonCorner_2.CornerRadius = UDim.new(0, 4)
                        ButtonCorner_2.Name = "ButtonCorner"
                        ButtonCorner_2.Parent = BoxCor

                        Boxxx.Name = "Boxxx"
                        Boxxx.Parent = BoxCor
                        Boxxx.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        Boxxx.BackgroundTransparency = 1.000
                        Boxxx.Position = UDim2.new(0, 5, 0, 0)
                        Boxxx.Size = UDim2.new(1, -5, 1, 0)
                        Boxxx.Font = Enum.Font.GothamBold
                        Boxxx.PlaceholderText = Placeholder
                        Boxxx.PlaceholderColor3 = getgenv().UI_Color['Box']['Placeholder Color']
                        Boxxx.Text = ""
                        Boxxx.TextColor3 = getgenv().UI_Color['Box']['Text Color']
                        Boxxx.TextSize = 14.000
                        Boxxx.TextXAlignment = Enum.TextXAlignment.Left


                        Lineeeee.Name = "Lineeeee"
						Lineeeee.Parent = BoxCor
						Lineeeee.BackgroundColor3 = getgenv().UI_Color['Box']['Line Color']
						Lineeeee.BackgroundTransparency = 1.000
						Lineeeee.Position = UDim2.new(0, 0, 1, -2)
						Lineeeee.Size = UDim2.new(1, 0, 0, 6)

                        UICorner.CornerRadius = UDim.new(1, 0)
						UICorner.Parent = Lineeeee

                        Boxxx.Focused:Connect(function() 
                            TweenService:Create(Lineeeee,TweenInfo.new(.5),{BackgroundTransparency = 0}):Play()
                        end)

                        Boxxx.Focused:Connect(function() 
                    
                            Library_Function.ButtonEffect()

                        end)

                        if Number_Only then 
                            Boxxx:GetPropertyChangedSignal("Text"):Connect(function()
                                if tonumber(Boxxx.Text) then 
                                else 
                                    Boxxx.PlaceholderText = Placeholder
                                    Boxxx.Text = ''
                                end
                            end)
                        end

                        Boxxx.FocusLost:Connect(function()
                            TweenService:Create(Lineeeee,TweenInfo.new(.5),{BackgroundTransparency = 1}):Play()
                            if Boxxx.Text ~= '' then
                                Callback(Boxxx.Text)
                            end
                        end)

                        local textbox_function = {}

                        if Default then
                            Boxxx.Text = Default
                            Callback(Default)
                        end

                        function textbox_function.SetValue(Value)
                            Boxxx.Text = Value
                            Callback(Value)
                        end 

                        return textbox_function;


                    end

                    function Section_Function.CreateSlider(Setting, Callback)
                        
                        local TitleText = tostring(Setting.Title) or ""
                        local Min_Value = tonumber(Setting.Min) or 0
                        local Max_Value = tonumber(Setting.Max) or 100
						local Precise = Setting.Precise or false
                        local DefaultValue = tonumber(Setting.Default) or 0
						local Callback = Callback or function() end

                        local SizeChia = 400;

                        local Callback = Callback or function() end

                        local SliderFrame = Instance.new("Frame")
                        local SliderCorner = Instance.new("UICorner")
                        local SliderBG = Instance.new("Frame")
                        local SliderBGCorner = Instance.new("UICorner")
                        local SliderTitle = Instance.new("TextLabel")
                        local SliderBar = Instance.new("Frame")
                        local SliderButton = Instance.new("TextButton")
                        local SliderBarCorner = Instance.new("UICorner")
                        local Bar = Instance.new("Frame")
                        local BarCorner = Instance.new("UICorner")
                        local Sliderboxframe = Instance.new("Frame")
                        local Sliderbox = Instance.new("UICorner")
                        local Sliderbox_2 = Instance.new("TextBox")

                        SliderFrame.Name = TitleText..'buda'
                        SliderFrame.Parent = Section
                        SliderFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        SliderFrame.BackgroundTransparency = 1.000
                        SliderFrame.Position = UDim2.new(0, 0, 0.208333328, 0)
                        SliderFrame.Size = UDim2.new(1, 0, 0, 50)

                        SliderCorner.CornerRadius = UDim.new(0, 4)
                        SliderCorner.Name = "SliderCorner"
                        SliderCorner.Parent = SliderFrame

                        SliderBG.Name = "SliderBG"
                        SliderBG.Parent = SliderFrame
                        SliderBG.AnchorPoint = Vector2.new(0.5, 0.5)
                        SliderBG.BackgroundColor3 = getgenv().UI_Color['Slider']['Background Color']
                        SliderBG.Position = UDim2.new(0.5, 0, 0.5, 0)
                        SliderBG.Size = UDim2.new(1, -10, 1, 0)
						if BackgroundVideo then
							SliderBG.BackgroundTransparency = GUITransparency
						end

                        SliderBGCorner.CornerRadius = UDim.new(0, 4)
                        SliderBGCorner.Name = "SliderBGCorner"
                        SliderBGCorner.Parent = SliderBG

                        SliderTitle.Name = "SliderTitle"
                        SliderTitle.Parent = SliderBG
                        SliderTitle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        SliderTitle.BackgroundTransparency = 1.000
                        SliderTitle.Position = UDim2.new(0, 10, 0, 0)
                        SliderTitle.Size = UDim2.new(1, -10, 0, 25)
                        SliderTitle.Font = Enum.Font.GothamBlack
                        SliderTitle.Text = TitleText
                        SliderTitle.TextColor3 = getgenv().UI_Color['Slider']['Title Color']
                        SliderTitle.TextSize = 14.000
                        SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

                        SliderBar.Name = "SliderBar"
                        SliderBar.Parent = SliderFrame
                        SliderBar.AnchorPoint = Vector2.new(.5, 0.5)
                        SliderBar.BackgroundColor3 = getgenv().UI_Color['Slider']['Barr Color']
                        SliderBar.Position = UDim2.new(.5, 0, 0.5, 14)
                        SliderBar.Size = UDim2.new(0, 400, 0, 6)

                        SliderButton.Name = "SliderButton "
                        SliderButton.Parent = SliderBar
                        SliderButton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        SliderButton.BackgroundTransparency = 1.000
                        SliderButton.Size = UDim2.new(1, 0, 1, 0)
                        SliderButton.Font = Enum.Font.GothamBold
                        SliderButton.Text = ""
                        SliderButton.TextColor3 = Color3.fromRGB(230, 230, 230)
                        SliderButton.TextSize = 14.000

                        SliderBarCorner.CornerRadius = UDim.new(1, 0)
                        SliderBarCorner.Name = "SliderBarCorner"
                        SliderBarCorner.Parent = SliderBar

                        Bar.Name = "Bar"
                        Bar.Parent = SliderBar
                        Bar.BackgroundColor3 = getgenv().UI_Color['Slider']['Bar Color']
                        Bar.Size = UDim2.new(0, 0, 1, 0)

                        BarCorner.CornerRadius = UDim.new(1, 0)
                        BarCorner.Name = "BarCorner"
                        BarCorner.Parent = Bar

                        Sliderboxframe.Name = "Sliderboxframe"
                        Sliderboxframe.Parent = SliderFrame
                        Sliderboxframe.AnchorPoint = Vector2.new(1, 0)
                        Sliderboxframe.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
                        Sliderboxframe.Position = UDim2.new(1, -10, 0, 5)
                        Sliderboxframe.Size = UDim2.new(0, 150, 0, 25)

                        Sliderbox.CornerRadius = UDim.new(0, 4)
                        Sliderbox.Name = "Sliderbox"
                        Sliderbox.Parent = Sliderboxframe

                        Sliderbox_2.Name = "Sliderbox"
                        Sliderbox_2.Parent = Sliderboxframe
                        Sliderbox_2.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
                        Sliderbox_2.BackgroundTransparency = 1.000
                        Sliderbox_2.Size = UDim2.new(1, 0, 1, 0)
                        Sliderbox_2.Font = Enum.Font.GothamBold
                        Sliderbox_2.Text = ""
                        Sliderbox_2.TextColor3 = getgenv().UI_Color['Slider']['Value Color']
                        Sliderbox_2.TextSize = 14.000

                        SliderButton.MouseEnter:Connect(function()
                            TweenService:Create(Bar,TweenInfo.new(.5),{BackgroundColor3 = getgenv().UI_Color['Slider']['Bar Active Color']}):Play()
                        end)

                        SliderButton.MouseLeave:Connect(function()
                            TweenService:Create(Bar,TweenInfo.new(.5),{BackgroundColor3 = getgenv().UI_Color['Slider']['Bar Color']}):Play()
                        end)

                        local mouse = game.Players.LocalPlayer:GetMouse()

                        if DefaultValue then 
							if DefaultValue <= Min_Value then DefaultValue = Min_Value elseif DefaultValue >= Max_Value then DefaultValue = Max_Value end
							Bar.Size = UDim2.new(1 - ((Max_Value - DefaultValue) / (Max_Value - Min_Value)),0, 0, 6)
							Sliderbox_2.Text = DefaultValue
							Callback(DefaultValue)
						end

                        SliderButton.MouseButton1Down:Connect(function()
                            local value = Precise and  tonumber(string.format("%.1f",(((tonumber(Max_Value) - tonumber(Min_Value)) / SizeChia) * Bar.AbsoluteSize.X) + tonumber(Min_Value))) or math.floor((((tonumber(Max_Value) - tonumber(Min_Value)) / SizeChia) * Bar.AbsoluteSize.X) + tonumber(Min_Value))

                            pcall(function()
                                Callback(value)
                                Sliderbox_2.Text = value
                            end)
                            Bar.Size = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X, 0, SizeChia), 0, 6)
                            moveconnection = mouse.Move:Connect(function()   
                                local value = Precise and  tonumber(string.format("%.1f",(((tonumber(Max_Value) - tonumber(Min_Value)) / SizeChia) * Bar.AbsoluteSize.X) + tonumber(Min_Value))) or math.floor((((tonumber(Max_Value) - tonumber(Min_Value)) / SizeChia) * Bar.AbsoluteSize.X) + tonumber(Min_Value))
                                pcall(function()
                                    Callback(value)
                                    Sliderbox_2.Text = value
                                end)
                                Bar.Size = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X, 0, SizeChia), 0, 6)
                            end)
                            releaseconnection = uis.InputEnded:Connect(function(Mouse)
                                if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                                    local value = Precise and  tonumber(string.format("%.1f",(((tonumber(Max_Value) - tonumber(Min_Value)) / SizeChia) * Bar.AbsoluteSize.X) + tonumber(Min_Value))) or math.floor((((tonumber(Max_Value) - tonumber(Min_Value)) / SizeChia) * Bar.AbsoluteSize.X) + tonumber(Min_Value))

                                    pcall(function()
                                        Callback(value)
                                        Sliderbox_2.Text = value
                                    end)
                                    Bar.Size = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X, 0, SizeChia), 0, 6)
                                    moveconnection:Disconnect()
                                    releaseconnection:Disconnect()
                                end
                            end)
                        end)

                        local function GetSliderValue(Value)
                            if tonumber(Value) <= Min_Value then
                                Bar.Size = UDim2.new(0,(0 * SizeChia), 0, 6)
                                Sliderbox_2.Text = Min_Value
                                Callback(tonumber(Min_Value))

                            elseif tonumber(Value) >= Max_Value then
                                Bar.Size = UDim2.new(0,(Max_Value  /  Max_Value * SizeChia), 0, 6)
                                Sliderbox_2.Text = Max_Value
                                Callback(tonumber(Max_Value))
                            else
                                Bar.Size = UDim2.new(1 - ((Max_Value - Value) / (Max_Value - Min_Value)),0, 0, 6)
                                Callback(tonumber(Value))
                            end
                        end


                        Sliderbox_2.FocusLost:Connect(function()
                            GetSliderValue(Sliderbox_2.Text)
                        end)


                        local slider_function = {}

                        function slider_function.SetValue(Value)
                            GetSliderValue(Value)
                        end

                        return slider_function


                    end


                return Section_Function

            end

        return Page_Function

    end

    return Main_Function


end



-- NaziNuclearToggle.SetStage(<bool>)


function vToK(tabl)
    local out = {}
    for k, v in pairs(tabl) do
        out[v] = k
    end
    return out
end
function ToTrueFalse(tabl, f)
    local out = {}
    for k, v in pairs(tabl) do
        if f then
            out[k] = f
        else
            out[k] = false
        end
    end

    return out
end
function ToST(tabl, s)
    local out = {}
    for k, v in pairs(tabl) do
       out[k]=s
    end

    return out
end
-----------------------------------------CODE----------------------------------
local LevelFarmVK = vToK(LevelFarm)
local FarmFieldList = ToST(LevelFarmVK,CurrentField)

local StopFarmVK = vToK(StopFarm)
local StopFarmList = ToST(StopFarmVK,false)

function CheckFarm(name) 
    local index = StopFarmVK[name]
    if index then 
        for i=index+1,#StopFarm do 
            if StopFarmList[StopFarm[i]] then 
                return false
            end
        end
        return true
    end
    return false
end

local TokenId = {
    ["Ticket"] = "rbxassetid://1674871631",
    ["Glue"] = "rbxassetid://2504978518",
    ["Pineapple"] = "rbxassetid://1952796032",
    ["Strawberry"] = "rbxassetid://1952740625",
    ["Blueberry"] = "rbxassetid://2028453802",
    ["SunflowerSeed"] = "rbxassetid://1952682401",
    ["Treat"] = "rbxassetid://2028574353",
    ["Gumdrop"] = "rbxassetid://1838129169",
    ["Red Extract"] = "2495935291",
    ["Blue Extract"] = "rbxassetid://2495936060",
    ["Oil"] = "2545746569",
    ["Glitter"] = "rbxassetid://2542899798",
    ["Enzymes"] = "rbxassetid://2584584968",
    ["TropicalDrink"] = "3835877932",
    ["Diamond Egg"] = "rbxassetid://1471850677",
    ["Gold Egg"] = "rbxassetid://1471849394",
    ["Mythic Egg"] = "4520739302",
    ["Star Treat"] = "rbxassetid://2028603146",
    ["Royal Jelly"] = "rbxassetid://1471882621",
    ["Star Jelly"] = "rbxassetid://2319943273",
    ["Moon Charm"] = "rbxassetid://2306224708"
}
local PrioritizeList = {
    ["Token Link"] = "1629547638",
    ["Inspire"] = "2000457501",
    ["Bear Morph"] = "177997841",
    ["Polen Bomb"] = "1442725244",
    ["Fuzz Bomb"] = "4889322534",
    ["Polen Haze"] = "4889470194",
    ["Triangulate"] = "4519523935",
    ["Inferno"] = "4519549299",
    ["Summon Frog"] = "4528414666",
    ["Tornado"] = "3582519526"
}
local ItemDonateList = {
    "Ticket",
    "Gumdrops",
    "Coconut",
    "Stinger",
    "Micro-Converter",
    "FieldDice",
    "JellyBeans",
    "RedExtract",
    "BlueExtract",
    "Glitter",
    "Glue",
    "Oil",
    "Enzymes",
    "TropicalDrink",
    "MagicBean",
    "CloudVial",
    "Box-O-Frogs",
    "AntPass",
    "Treat",
    "SunflowerSeed",
    "Strawberry",
    "Pineapple",
    "Blueberry",
    "Bitterberry",
    "Neonberry",
    "Moon Charm",
    "BasicEgg",
    "SilverEgg",
                "DiamondEgg",
    "RoyalJelly"
}
for k, v in pairs(TokenId) do
    PrioritizeList[k] = v
end


local PrioritizeListTF = ToTrueFalse(PrioritizeList)
PrioritizeListTF["Token Link"] = true
local NoSell = false

local AutoGum = false
local AutoCoco = false
local TypeFarming = "Walk"
local TypeSell = "TP"
local AutoDig = false

local StopMoreOne = false
local Valid = true
local InsValid = 26110

local AutoRare = false
local TokenIdByK = vToK(TokenId)
local TokenTrueFakse = ToTrueFalse(TokenId)
local TokenTrueFakse2 = ToTrueFalse(TokenId)
local PlantMagic = false
local HoneyPolen = {
    ["Honey"] = true,
    ["Pollen"] = true
}
local BarId = {
    ["Glue"] = "rbxassetid://2504978518",
    ["Oil"] = "rbxassetid://2545746569",
    ["Enzymes"] = "rbxassetid://2584584968",
    ["Tropical Drink"] = "3835877932",
    ["Blue Extract"] = "rbxassetid://2495936060",
    ["Red Extract"] = "rbxassetid://2495935291",
    ["Stinger"] = "2314214749"
}
local FieldIconID = {
    ["Sunflower Field"] = "rbxassetid://2908769405",
    ["Dandelion Field"] = "rbxassetid://2908769047",
    ["Strawberry Field"] = "rbxassetid://2908769330",
    ["Blue Flower Field"] = "rbxassetid://2908768899",
    ["Clover Field"] = "rbxassetid://2908768973",
    ["Mushroom Field"] = "rbxassetid://2908769124",
    ["Spider Field"] = "rbxassetid://2908769301",
    ["Bamboo Field"] = "rbxassetid://2908768829",
    ["Pineapple Patch"] = "rbxassetid://2908769153",
    ["Stump Field"] = "rbxassetid://2908769372",
    ["Cactus Field"] = "rbxassetid://2908768937",
    ["Pumpkin Patch"] = "rbxassetid://2908769220",
    ["Pine Tree Forest"] = "rbxassetid://2908769190",
    ["Rose Field"] = "rbxassetid://2908818982",
    ["Coconut Field"] = "rbxassetid://2908769010",
    ["Mountain Top Field"] = "rbxassetid://2908769086",
    ["Ant Field"] = "rbxassetid://2908768728",
    ["Pepper Patch"] = "3835712489"
}
local Sprinklers = {
    ["The Supreme Saturator"] = 1,
    ["Basic Sprinkler"] = 1,
    ["Silver Soakers"] = 2,
    ["Golden Gushers"] = 3,
    ["Diamond Drenchers"] = 4
}
local TimerMob = {
    ["Rhino Beetles"] = {"Rhino Bush", "Rhino Cave 1", "Rhino Cave 2", "Rhino Cave 3", "PineappleBeetle"},
    ["Spider"] = {"Spider Cave"},
    ["Werewol"] = {"WerewolfCave"},
    ["Scorpion"] = {"RoseBush", "RoseBush2"},
    ["Mantises"] = {"ForestMantis1", "ForestMantis2", "PineappleMantis1"},
    ["Ladybug"] = {"MushroomBush", "Ladybug Bush", "Ladybug Bush 2", "Ladybug Bush 3"}
}
local TimerKiet = ToTrueFalse(TimerMob, true)
local fieldlistpolar = {
    "Spider Field",
    "Mushroom Field",
    "Rose Field",
    "Strawberry Field",
    "Bamboo Field",
    "Pumpkin Patch",
    "Sunflower Field",
    "Cactus Field",
    "Blue Flower Field",
    "Clover Field",
    "Pineapple Patch",
    "Dandelion Field",
    "Pine Tree Forest"
}
local moblistpolar = {
    "Spider",
    "Scorpion",
    "Werewol",
    "Mantises",
    "Ladybug",
    "Rhino Beetles"
}
local MaskField = {
    ["White"] = {
        "Sunflower Field",
        "Dandelion Field",
        "Spider Field",
        "Pineapple Patch",
        "Pumpkin Patch",
        "Coconut Field"
    },
    ["Blue"] = {
        "Blue Flower Field",
        "Bamboo Field",
        "Pine Tree Forest",
        "Stump Field"
    },
    ["Red"] = {
        "Mushroom Field",
        "Clover Field",
        "Strawberry Field",
        "Cactus Field",
        "Rose Field",
        "Pepper Patch",
        "Mountain Top Field",
        "Ant Field"
    }
}
local ShopList = {
}
for _,v in pairs(game.Workspace.Shops:GetChildren()) do 
    table.insert(ShopList,v.Name)
end
for _, v in pairs(game.Workspace.Collectibles:GetChildren()) do
    local Black = Instance.new("IntValue")
    Black.Parent = v
    Black.Name = "Blacklisted"
end
local AutoSprout = false
local times = 0.2
local Running = true
local Invisible = false
local Particles = game.Workspace.Particles
local Folder2 = Particles.Folder2
local vu = game:GetService("VirtualUser")
local x = 0
local y = 0
local QuestF = game.Players.LocalPlayer.PlayerGui.ScreenGui.Menus.Children.Quests.Content
local MaskF = {
    ["White"] = "Gummy Mask",
    ["Red"] = "Demon Mask",
    ["Blue"] = "Diamond Mask"
}
game:GetService("Players").LocalPlayer.Idled:connect(
    function()
        vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        print("Afk 15m")
    end
)
for i, v in pairs(workspace.FieldDecos:GetChildren()) do
    v:Destroy()
end
function GetFieldByName(name)
    return game.Workspace.FlowerZones[name]
end



local maxx = 31
local maxy = 12
function mysplit(inputstr, sep)
    if sep == nil then
        sep = "%s"
    end
    local t = {}
    for str in string.gmatch(inputstr, "([^" .. sep .. "]+)") do
        table.insert(t, str)
    end
    return t
end
function GetFlower(field, x, y)
    local part = game.Workspace.Flowers:FindFirstChild(tostring(field) .. "-" .. tostring(x) .. "-" .. tostring(y))
    return part
end
function TpToXy(field, x, y)
    local part = GetFlower(field, x, y)
    if part then
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = part.CFrame * CFrame.new(0, 2, 0)
    end
end
function GetXY(part)
    local name = mysplit(part.name, "-")
    return unpack(name)
end
function IsValidPos(field, x, y)
    local flower = GetFlower(field,x,y)
    if flower then
        local validx = true
        local validy = true

        for i = 0, maxx do
            local fl = GetFlower(field, i, y)
           
            if fl and fl:FindFirstChild("FireParticles") then
               -- print(fl,1)
                validy = false
                break
            end
        end
        for i = 0, maxy do
            local fl = GetFlower(field, x, i)
            if fl and fl:FindFirstChild("FireParticles") then
               -- print(fl,2)
                validx = false
                break
            end
        end
        return (validx and validy), validx, validy
    end
end

function Check3() 
    for i,v in pairs(workspace.Toys["Ant Challenge"].Obstacles:GetChildren()) do
        if v:FindFirstChild("Root") then
            local root = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
            if (v.Root.Position-root.Position).magnitude <= 40  then
                local old = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame
               -- ValidAnt=false
               ValidAnt2=false
               game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(63.6603203, 31.9465809, 507.179993, 0.910263836, -3.83360472e-08, -0.414028674, 6.1910626e-08, 1, 4.35210374e-08, 0.414028674, -6.52484005e-08, 0.910263836)
                repeat wait()
                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(63.6603203, 31.9465809, 507.179993, 0.910263836, -3.83360472e-08, -0.414028674, 6.1910626e-08, 1, 4.35210374e-08, 0.414028674, -6.52484005e-08, 0.910263836)
                until not ((v.Root.Position-old.p).magnitude <= 40) or not v or not v.Parent
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = old
                ValidAnt2=true
            end
            
            
        end
    end
end
function Check2()
    local ray = Ray.new(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position, Vector3.new(0, -5, 0))
    local t = workspace:FindPartOnRayWithIgnoreList(ray, {game.Players.LocalPlayer.Character})
    if t then
        if string.match(t.Name, "FP") then
            local kiett, validx, validy = IsValidPos(GetXY(t))
            if kiett then
                --print("Valid")

            else
                local validposx = nil
                local validposy = nil
                local field, x, y = GetXY(t)
                x=tonumber(x)
                y=tonumber(y)
                if not validx and validy then
                    --print(1)
                    for i = x, maxx do
                       
                        if IsValidPos(field,i, y) then
                            validposx = i
                            validposy=y
                            break
                        end
                    end
                    if not validposx then
                        local i = x - 1
                        while i >= 0 do
                            if IsValidPos(field,i, y) then
                                validposx = i
                                validposy=y
                                break
                            end
                            i = i - 1
                        end
                    end
                end
                if not validy and validx then
                   -- print(2)
                    for i = y, maxy do
                        if IsValidPos(field,x, i) then
                            validposy = i
                            validposx=x
                            break
                        end
                    end
                    if not validposy then
                        local i = y - 1
                        while i >= 0 do
                            if IsValidPos(field,x, i) then
                                validposy = i
                                validposx=x
                                break
                            end
                            i = i - 1
                        end
                    end
                end
                if not validx and not validy then
                    --print(3)
                    local i = x
                    local j = y
                    while i <= maxx and j <= maxy do
                        if IsValidPos(field,i, j) then
                            validposx = i
                            validposy = j
                            break
                        end
                        j = j + 1
                        i = i + 1
                    end
                    local i = x - 1
                    local j = y - 1
                    if not validposx and not validposy then 
                        while i >= 0 and j >= 0 do
                            if IsValidPos(field,i, j) then
                                validposx = i
                                validposy = j
                                break
                            end
                            j = j - 1
                            i = i - 1
                        end
                    end
                    
                end
               -- print(validposx,validposy)
                if validposx and validposy then
                    ValidAnt=false
                    wait(.1)
                    TpToXy("FP15", validposx, validposy)
                    ValidAnt=true
                end
            end
        end
    end
end
function Conv2LayerTable(tab)
    local tabl = {}
    for k, v in pairs(tab) do
        for f, s in pairs(v) do
            tabl[s] = k
        end
    end
    return tabl
end
local MaskField2 = Conv2LayerTable(MaskField)
local ValidTB={}
function ValidFarm()
    if not CheckFarm("Farm") then return false end

    --for k,v in pairs(ValidTB) do if v then return false end end
    if StopMoreOne then
        if #game.Players:GetChildren() > 1 then
            return false
        end
    end

    -- if not ValidLeaf then return false end
    -- if not ValidAnt then return false end
    -- if not ValidDodg then return false end
    -- if Kiet1308 then
    --     return false
    -- end
    -- if not Valid2 then
    --     return false
    -- end
    -- if not Valid then return false end

    return true
end
--print(game.Workspace.Decorations.Misc)
for _, v in pairs(game.Workspace.Decorations.Misc:GetChildren()) do
    if string.match(v.Name, "Mushroom") or string.match(v.Name, "Blue Flower") then
        if v:IsA("Model") and #v:GetChildren() ~= 6 then
            for _, v in pairs(v:GetChildren()) do
                if v:IsA("Part") then
                    v.Transparency = 0.5
                    v.CanCollide = false
                end
            end
        end
    end
end
function CountTab(tab)
    local c = 0
    for k, v in pairs(tab) do
        c = c + 1
    end
    return c
end
function GetFieldColor(Field)
    local k = GetFieldByName(Field)
    if k:FindFirstChild("ColorGroup") then
        return k.ColorGroup.Value
    else
        return "Red"
    end
end
function GetCurrentFieldBoost()
    local tab = {}
    for k,v in pairs(ListTileGrid) do 
        local GUI = v
        for _, v in pairs(GUI:GetChildren()) do
            if v.Name == "IconTile" and v:FindFirstChild("BG") then
                for f, s in pairs(FieldIconID) do
                    if
                        v.BG:FindFirstChild("Icon") and v.BG:FindFirstChild("Text") and v.BG:FindFirstChild("Bar") and
                            v.BG.Icon.Image == s and
                            v.BG.Bar.BackgroundColor3 == Color3.fromRGB(255, 228, 81)
                     then
                        tab[f] = v.BG.Text.Text
                    end
                end
            end
        end
    end
    
    return tab
end
function IsAnyBoost()
    local t = GetCurrentFieldBoost()
    for k, v in pairs(t) do
        return true
    end
    return false
end
function IsBoostEnd(Field)
    for k,v in pairs(ListTileGrid) do 
        local GUI = v
    for _, v in pairs(GUI:GetChildren()) do
        if v.Name == "IconTile" and v:FindFirstChild("BG") then
            for f, s in pairs(FieldIconID) do
                if
                    v.BG:FindFirstChild("Icon") and v.BG:FindFirstChild("Text") and v.BG:FindFirstChild("Bar") and
                        v.BG.Icon.Image == s and
                        v.BG.Bar.BackgroundColor3 == Color3.fromRGB(255, 228, 81)
                 then
                    if f == Field then
                        return false
                    end
                end
            end
        end
    end
    end
    
    return true
end
function GetTunnel()
    for _, v in pairs(game.Workspace.Monsters:GetChildren()) do
        if string.match(v.Name, "Tunnel") then
            if v:FindFirstChild("Config") then
                if v:FindFirstChild("Hunter") then
                    if v.Hunter.Value == game.Players.LocalPlayer.Name then
                        return v
                    end
                end
            end
        end
    end
end
function GetKing()
    for _, v in pairs(game.Workspace.Monsters:GetChildren()) do
        if v.Name=="King Beetle (Lvl 7)" then
            if v:FindFirstChild("Config") then
                if v:FindFirstChild("Hunter") then
                    if v.Hunter.Value == game.Players.LocalPlayer.Name then
                        return v
                    end
                end
            end
        end
    end
end
function Tele(cf) 
    if plr.Character:FindFirstChild("HumanoidRootPart") then 
        plr.Character.HumanoidRootPart.CFrame=cf
    end
end
function GetMobIns(Mob)
    return game.Workspace.MonsterSpawners[Mob]
end
function GetAttach(Mob)
    local Att = Mob:FindFirstChild("Attachment")
    if Att then
        return Att
    else
        return Mob:FindFirstChild("TimerAttachment")
    end
end
function GetQuestMob(Quest)
    for k, v in pairs(moblistpolar) do
        if string.match(Quest, v) then
            --print(v)
            return v
        end
    end
end

function CheckMob(Mob)
    if TimerMob[Mob]==nil then return end
    for k, v in pairs(TimerMob[Mob]) do
        local t = GetMobIns(v)
        if GetAttach(t).TimerGui.TimerLabel.Visible == false then
            return t
        end
    end
end

function CheckCoco()
    local k = "CoconutCrab"
    local t = GetMobIns(k)
    if GetAttach(t).TimerGui.TimerLabel.Visible == false then
        return t
    end
end
function CheckSnail()
    local k = "StumpSnail"
    local t = GetMobIns(k)
    if GetAttach(t).TimerGui.TimerLabel.Visible == false then
        return t
    end
end
function CheckTunnel()
    local k = "TunnelBear"
    local t = GetMobIns(k)
    if GetAttach(t).TimerGui.TimerLabel.Visible == false then
        return t
    end
end
function CheckKing()
    local k = "King Beetle Cave"
    local t = GetMobIns(k)
    if GetAttach(t).TimerGui.TimerLabel.Visible == false then
        return t
    end
end
function CheckComando()
    local k = "Commando Chick"
    local t = GetMobIns(k)
    if GetAttach(t).TimerGui.TimerLabel.Visible == false then
        return t
    end
end

function GetCurrentAmountOfBee()
    local bee = 0
    for _, v in pairs(game.Workspace.Honeycombs:GetChildren()) do
        if tostring(v.Owner.Value) == game.Players.LocalPlayer.Name then
            for l, s in pairs(v.Cells:GetChildren()) do
                if s.CellType.Value ~= "Empty" and tostring(s.CellType.Value) ~= "nil" then
                    bee = bee + 1
                end
            end
        end
    end
    
    return bee
end
function SendHook(Url, HoneyPolen, TFItemHook)
    local HttpService = game:GetService("HttpService")
    -- local tb = {
    --     content = "Sent in: " .. tostring(os.date()),
    --     embeds = {
    --         {
    --             color = nil,
    --             fields = ListToField(HoneyPolen, TFItemHook),
    --             author = {
    --                 name = "Sea Hub Bee Swarm Simulator"
    --             }
    --         }
    --     }
    -- }
    local tb = {
        ["content"] = "@everyone",
        ["embeds"] = {{
            ["title"] = "Bee Swarm Simulator",
            ["description"] = "",
            ["type"] = "rich",
            ["color"] = tonumber(0xbdce44),
            ["fields"] = ListToField(HoneyPolen, TFItemHook),
            ["footer"] = {
                ["icon_url"] = "https://cdn.discordapp.com/attachments/832985237638086660/843786018892939284/turtle.png",
                ["text"] = "Sea Hub Premium (" .. os.date("%X") .. ")"
            }
        }}
    }
    local a =
        syn.request(
        {
            Url = Url,
            Method = "POST",
            Body = HttpService:JSONEncode(tb),
            Headers = {
                ["Content-Type"] = "application/json"
            }
        }
    )
    --print(a.Body)
    return a.Body
end

local NPCLV = {
    [1] = {
        "Black Bear",
        "Mother Bear",
        "Brown Bear",
        "Riley Bee",
        "Bucko Bee"
    },
    [5] = {
        "Panda Bear"
    },
    [10] = {
        "Science Bear"
    },
    [15] = {
        "Polar Bear",
        "Honey Bee"
    },
    [30] = {
        "Onett"
    },
    [35] = {
        "Spirit Bear"
    }

    
}
local FieldLV = {
    [1] = {
        "Mushroom Field",
        "Blue Flower Field",
        "Sunflower Field",
        "Dandelion Field"
    },
    [5]={
        "Strawberry Field",
        "Bamboo Field",
        "Spider Field"
    },
    [10] = {
        "Pineapple Patch",
        "Stump Field"
    },
    [15] = {
        "Rose Field",
        "Pine Tree Forest",
        "Pumpkin Patch"
    },
    [25] = {
        "Mountain Top Field"
    },
    [35] = {
        "Coconut Field",
        "Pepper Patch"
    }
}
function RedBlueWhite(bee)
    local FieldColor = {
        ["Red"] = "Strawberry Field",
        ["Blue"] = "Pine Tree Forest",
        ["White"] = "Pineapple Patch"
    }
    if bee < 5 then
        FieldColor["Red"] = "Mushroom Field"
        FieldColor["Blue"] = "Blue Flower Field"
        FieldColor["White"] = "Sunflower Field"
    else
        if bee >= 5 and bee < 15 then
            FieldColor["Red"] = "Strawberry Field"
            FieldColor["Blue"] = "Bamboo Field"
            FieldColor["White"] = "Spider Field"
        else
            if bee >= 15 then
                FieldColor["Red"] = "Rose Field"
                FieldColor["Blue"] = "Pine Tree Forest"
                FieldColor["White"] = "Pumpkin Patch"

                if bee >= 35 then
                    if not CheckCoco() then
                        FieldColor["White"] = "Coconut Field"
                    end
                    FieldColor["Red"] = "Pepper Patch"
                end
            end
        end
    end
    return FieldColor
end
local col = {"Red", "Blue", "White"}
local FieldColor = {
    ["Red"] = "Strawberry Field",
    ["Blue"] = "Pine Tree Forest",
    ["White"] = "Pineapple Patch"
}
local PanaBearQuest = {
    "Lesson on Ladybugs",
    "Rhino Rumble",
    "Beetle Battle",
    "Spider Slayer",
    "Ladybug Bonker",
    "Spider Slayer 2",
    "Rhino Wrecking",
    "Final Showdown",
    "Werewolf Hunter",
    "Skirmish with Scorpions",
    "Mantis Massacre",
    "The REAL Final Showdown",
    "Ant Arrival",
    "Winged Wack Attack",
    "Fire Fighter",
    "Army Ant Assault",
    "Colossal Combat",
    "Eager Exterminator",
    "Leaper Lickin'",
    "Colossal Combat 2",
    "Outrageous Onslaught",
    "Royal Rumble",
    "Ultimate Ant Annihilation 1",
    "Ultimate Ant Annihilation 2",
    "Ultimate Ant Annihilation 3",
    "Ultimate Ant Annihilation 4",
    "Ultimate Ant Annihilation 5"
}
local ScienceBearQuest = {
    "Preliminary Research",
    "Biology Study",
    "Proving The Hypothesis",
    "Bear Botany",
    "Kingdom Collection",
    "Defensive Adaptions",
    "Benefits Of Technology",
    "Spider Study",
    "Roses And Weeds",
    "Blue Review",
    "Ongoing Progress",
    "Red / Blue Duality",
    "Costs Of Computation",
    "Pollination Practice",
    "Optimizing Abilities",
    "Ready For Infrared"
}
local BlackBearQuest = {
    "Pumpkin Plower",
    "Sunflower Start",
    "Dandelion Deed",
    "Pollen Fetcher",
    "Red Request",
    "Into The Blue",
    "Variety Fetcher",
    "Bamboo Boogie",
    "Red Request 2",
    "Cobweb Sweeper",
    "Leisure Loot",
    "White Pollen Wrangler",
    "Pineapple Picking",
    "Pollen Fetcher 2",
    "Weed Wacker",
    "Red + Blue = Gold",
    "Colorless Collection",
    "Spirit Of Springtime",
    "Weed Wacker 2",
    "Pollen Fetcher 3",
    "Lucky Landscaping",
    "Azure Adventure",
    "Pink Pineapples",
    "Blue Mushrooms",
    "Cobweb Sweeper 2",
    "Rojo-A-Go-Go",
    "Rojo-A-Go-Go",
    "Pollen Fetcher 4",
    "Bouncing Around Biomes",
    "Blue Pineapples",
    "Rose Request",
    "Search For The White Clover",
    "Stomping Grounds",
    "Collecting Cliffside",
    "Mountain Meandering",
    "Quest Of Legends",
    "High Altitude",
    "Blissfully Blue",
    "Rouge Round-up",
    "White As Snow",
    "Solo On The Stump",
    "Colorful Craving",
    "Pumpkins, Please!",
    "Smorgasbord",
    "Pollen Fetcher 5",
    "White Clover Redux",
    "Strawberry Field Forever",
    "Tasting The Sky",
    "Whispy and Crispy",
    "Walk Through The Woods",
    "Get Red-y",
    "One Stop On The Tip Top",
    "Blue Mushrooms 2",
    "Pretty Pumpkins",
    "Black Bear, Why?",
    "Bee A Star",
    "Bamboo Boogie 2: Bamboo Boogaloo",
    "Rocky Red Mountain",
    "Can't Without Ants",
    "The 15 Bee Zone",
    "Bubble Trouble",
    "Sweet And Sour",
    "Rare Red Clover",
    "Low Tier Treck",
    "Okey-Pokey",
    "Pollen Fetcher 6",
    "Capsaicin Collector",
    "Mountain Mix",
    "You Blue It",
    "Variety Fetcher 2",
    "Getting Stumped",
    "Weed Wacker 3",
    "All-Whitey Then",
    "Red Delicacy",
    "Boss Battles",
    "Myth In The Making"
}
function FieldQuest(Quest)
    local Fiel = false
    local cl = false
    for k, v in pairs(GetListField()) do
        if string.match(Quest, v) then
            Fiel = true
            break
        end
    end
    for k, v in pairs(col) do
        if string.match(Quest, v) then
            cl = true
            break
        end
    end
    if not Fiel and not cl and string.match(Quest, "Collect") then
        return FarmFieldList[LevelFarm[#LevelFarm]]
    end
    for k, v in pairs(GetListField()) do
        if string.match(Quest, v) then
            --print(v)
            return v
        end
    end
    for k, v in pairs(col) do
        if string.match(Quest, v) then
            return RedBlueWhite(GetCurrentAmountOfBee())[v]
        end
    end
end
function CheckQuestReq(Field) 
    local curr = GetCurrentAmountOfBee()
    for k,v in pairs(NPCLV) do 
        if table.find(v,Field) then 
            --print(k>=curr)
            return curr>=k
        end
    end
   return false
end
function CheckFieldReq(Field) 
    local curr = GetCurrentAmountOfBee()
    for k,v in pairs(FieldLV) do 
        if table.find(v,Field) then 
            --print(k>=curr)
            return curr>=k
        end
    end
   return false
end
function GetPolarQuest()
    if QuestF:FindFirstChild("Frame") then
        for _, v in pairs(QuestF.Frame:GetChildren()) do
            if v:IsA("Frame") then
                if string.match(v.TitleBar.Text, "Polar") then
                    if string.match(v.TitleBar.Text, "Polar Bear's Beesmas Feast") then
                        --return v
                    else
                        return v
                    end
                -- print(v.TitleBar.Text)
                end
            end
        end
    end
end

--print("---")
function GetQuestListMD() 
    local v1 = require(game.ReplicatedStorage.Quests)
local v3 = require(game.ReplicatedStorage.ClientStatCache)
local v5 = require(game.ReplicatedStorage.NPCs)
    local ListQuest = {}

syn.set_thread_identity(2)
local v91 = v3:Get()
for v96, v97 in pairs(v91.Quests.Active) do
    local l__Name__98 = v97.Name
    local v99 = v1:Get(l__Name__98)
    if v99.Theme~="Xmas" and not v99.Hidden and (not v99.Expiration or require(game.ReplicatedStorage.OsTime)() < v99.Expiration) then
        local v101 = v1:Progress(l__Name__98, v91)
        local v102 = true
        --print(v99.NPC)
        local ListTask = {}
        for v103, v104 in ipairs(v99.Tasks) do
            --table.foreach(v104,print)

            local v58 = v104.Description
            if type(v58) ~= "string" then
                v58 = v58(v3:Get())
            end
            local Task = {
                Description = v58,
                IsCompleted = function()
                    local v102 = true
                    syn.set_thread_identity(2)

                    local v91 = v3:Get()
                    local v101 = v1:Progress(l__Name__98, v91)
                    if v101[v103][1] < 1 then
                        return false
                    end
                    syn.set_thread_identity(7)

                    return true
                end,
                Type = v104.Type,
                Zone = v104.Zone,
                Item = v104.Item,
                MonsterType = v104.MonsterType,
                Tag = v104.Tag,
                Color = v104.Color
            }
            table.insert(ListTask,Task)
            --warn(v58, v102)
        end
        ListQuest[v99.NPC]=ListTask
        --table.insert( ,ListTask)
    end
end
syn.set_thread_identity(7)
return ListQuest
end

function GetQuestNPC(npc) 
    local ListQuest = GetQuestListMD()
    for k,v in pairs(ListQuest) do 
        if k==npc then 
            return v
        end
    end
end
function GetQuestType(quest) 
    local type = ""
    --print(quest.Description)
    if quest.Type=="Collect Pollen" then 
        if quest.Zone then 
            type="Zone"
        elseif quest.Color then
            type="Color"
        else
            tpye="Pollen"
        end
    elseif quest.Type=="Defeat Monsters" then
        type="Kill"
    elseif quest.Type=="Use Items" then
        type="Use"
    elseif quest.Type=="Collect Tokens" then type="Token" 
    elseif quest.Type=="Collect Goo" then 
        if quest.Zone then type="Zone" else type="Goo" end
    end
    return type
end
function GetQuestTable(quest)
    local questtb = {}
    for k,v in pairs(quest) do
        local type = GetQuestType(v)
        if not questtb[type] then 
            questtb[type]={}
        end
        table.insert(questtb[type],v)
    end
    return questtb
end

function GetQuest(name)
    if QuestF:FindFirstChild("Frame") then
        for _, v in pairs(QuestF.Frame:GetChildren()) do
            if v:IsA("Frame") and v.BackgroundColor3~=Color3.fromRGB(208, 47, 29) then
                if name == "Black Bear" then
                    for f, s in pairs(BlackBearQuest) do
                        if string.match(string.lower(v.TitleBar.Text), string.lower(s)) or v.TitleBar.Text == s then
                            return v
                        end
                    end
                end
                if name=="Panda Bear" then 
                    for f,s in pairs(PanaBearQuest) do 
                        if string.match(string.lower(v.TitleBar.Text), string.lower(s)) or v.TitleBar.Text == s then
                            return v
                        end
                    end
                end
                if name=="Science Bear" then 
                    for f,s in pairs(ScienceBearQuest) do 
                        if string.match(string.lower(v.TitleBar.Text), string.lower(s)) or v.TitleBar.Text == s then
                            return v
                        end
                    end
                end
            end
        end
        for _, v in pairs(QuestF.Frame:GetChildren()) do
            if v:IsA("Frame") and v.BackgroundColor3~=Color3.fromRGB(208, 47, 29) then
                if string.match(v.TitleBar.Text, name) and not string.match(v.TitleBar.Text,"Honeyday") then
                    return v
                -- print(v.TitleBar.Text)
                end
            end
        end
    end
end
local PopStarAura = "5101328809"
function IsPopStar()
    for k,v in pairs(ListTileGrid) do 
        local PlGui = v
        for _,v in pairs(PlGui:GetChildren()) do 
            if v:FindFirstChild("BG") then 
                  if v.BG:FindFirstChild("Icon") then 
                        if string.match(v.BG.Icon.Image,PopStarAura) then return true end
                        --print(v.BG.Icon.Image)
                  end
            end
      
      end
    end
    
    return false
end
local nll = require(game:GetService("ReplicatedStorage").BlenderRecipes)
function GetItemListWithValue()
    local HttpService = game:GetService("HttpService")
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    local data = StatCache.Get()
    return data.Eggs
end
function CheckNguyenLieu(ng) 
local ind = nll.Get(ng)
local k = false
for k,v in pairs(ind.Ingredients) do 
local t = GetItemListWithValue()
if t[v.Type] and (t[v.Type]>= v.Amount) then 
else
    k=true
    break;
end
end
if not k then return true else return false end
end
local cls = require(game.ReplicatedStorage.ClientStatCache)
function Update() 
spawn(function() Update() end)
end
local StatCache = require(game.ReplicatedStorage.ClientStatCache)
local ostime=require(game.ReplicatedStorage.OsTime)
function GetCraftingStatus() 
local data = game:GetService("ReplicatedStorage").Events.RetrievePlayerStats:InvokeServer()
local blender = data.BlenderState

if not blender then return 0 end
local n = blender.Count
local Start = blender.StartTime

local v32 = data.PlaytimeAtLoad;
local v33 = data.LoadTime;
local v29 = blender

local v34 = v32 + (ostime() - v33) - v29.StartTime;
--print(v34)
local f = (60*n*5-v34)/60
--print(f)
if f<=0 then return 1,blender end
return 2,blender
end
function IsQuestDone(Quest)
    if Quest:FindFirstChild("Description") then
        if string.match(Quest.Description.Text, "Complete") then
            return true
        else
            return false
        end
    else
        return true
    end
end
function GetQuestField(Quest)
    for k, v in pairs(fieldlistpolar) do
        if string.match(Quest, v) then
            --print(v)
            return v
        end
    end
end
function God()
    local godded = Instance.new("BoolValue",plr.Character)
    local cam = workspace.CurrentCamera
    local cf = cam.CFrame
    local me = game.Players.LocalPlayer
    local c, h =
        (me.Character or workspace:FindFirstChild(me.Name)),
        me.Character:FindFirstChildOfClass("Humanoid")
    local nh = h:Clone()
    nh.Health = nh.MaxHealth
    me.Character = nil
    nh:SetStateEnabled(15, false)
    nh:SetStateEnabled(1, false)
    nh:SetStateEnabled(0, false)
    nh.Parent = c
    h:Destroy()
    me.Character, cam.CameraSubject = c, nh
    wait()
    cam.CFrame = cf
    local s = c:FindFirstChild("Animate")
    if s then
        s.Disabled = true
        wait()
        s.Disabled = false
    end
    delay(
        1,
        function()
            if nh then
                nh.Health = 256
            end
        end
    )
end
function GetItemListWithValue()
    local HttpService = game:GetService("HttpService")
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    local data = StatCache.Get()
    return data.Eggs
end
function GetItemList()
    local ks = GetItemListWithValue()
    local tb = {}
    for k, v in pairs(ks) do
        table.insert(tb, k)
    end
    return tb
end
function IsInstantValid(Instant)
    local replicatedstorage = game:GetService("ReplicatedStorage")
    local rep = replicatedstorage
    local r = require
    local player = game:GetService("Players").LocalPlayer

    local function getTimeSinceToyActivation(name)
        return r(rep.OsTime)() - r(rep.ClientStatCache):Get("ToyTimes")[name]
    end

    local function getTimeUntilToyAvailable(n)
        return workspace.Toys[n].Cooldown.Value - getTimeSinceToyActivation(n)
    end
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    local gt = StatCache.Get()
    local toy = gt["ToyTimes"]
    if toy[Instant] then
        return getTimeUntilToyAvailable(Instant) <= 0
    else
        return false
    end
end
function UseInstant(Instant)
    game.ReplicatedStorage.Events.ToyEvent:FireServer(Instant)
end
function IsAnyInstantValid()
    local Lis = GetInstantList()
    for k, v in pairs(Lis) do
        if IsInstantValid(v.Name) then
            return true
        end
    end
    return false
end
function UnGod()
    local cam = workspace.CurrentCamera
    local cf = cam.CFrame
    local me = game.Players.LocalPlayer
    local c, h =
        (me.Character or workspace:FindFirstChild(me.Name)),
        me.Character:FindFirstChildOfClass("Humanoid")
    local nh = h:Clone()
    nh.Health = nh.MaxHealth
    me.Character = nil
    nh:SetStateEnabled(15, true)
    nh:SetStateEnabled(1, true)
    nh:SetStateEnabled(0, true)
    nh.Parent = c
    h:Destroy()
    me.Character, cam.CameraSubject = c, nh
    wait()
    cam.CFrame = cf
    local s = c:FindFirstChild("Animate")
    if s then
        s.Disabled = false
        wait()
        s.Disabled = true
    end
    delay(
        1,
        function()
            if nh then
                nh.Health = 0
            end
        end
    )
end
function GetEquipSrinkler()
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    return StatCache["Get"]()["EquippedSprinkler"]
end
function GetListField()
    local tablee = {}
    for _, v in pairs(game.Workspace.FlowerZones:GetChildren()) do
        table.insert(tablee, v.Name)
    end
    return tablee
end

function GetListNpc()
    local tablee = {}
    for _, v in pairs(game.Workspace.NPCs:GetChildren()) do
        table.insert(tablee, v.Name)
    end
    return tablee
end
function GetFieldByText(text) 
    for k,v in pairs(GetListField()) do 
        if string.match(text,v) then return v end
    end
end
function GetNerestFieldByObject(Obj)
    local lis = GetListField()
    local old = "Sunflower Field"
    for k, v in pairs(lis) do
        if v then
            if
                (Obj.Position - GetFieldByName(v).Position).magnitude <
                    (Obj.Position - GetFieldByName(old).Position).magnitude
             then
                old = v
            end
        end
    end
    return old
end
function GetNpcByName(name)
    return game.Workspace.NPCs[name]
end
local ValidPos = {}

function IsValidTokenPos(token, Field)
    local kc = 60
    local Field = GetFieldByName(Field)
    if Field:FindFirstChild("Range") then kc=Field.Range.Value end
    local bool = false
    local Player = game:GetService("Players").LocalPlayer
    local Character = Player.Character
    local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    if (token.Position - Field.Position).magnitude < kc then
        bool = true
    end
    return bool
end
local ksf = nil
function ValidTokenRare(TempField)
    if SproutRare then
        local t = IsSprout()
        for _, v in pairs(Folder2:GetChildren()) do
            if v.Name == "Sprout" then
                if GetNerestFieldByObject(v) == TempField then
                    ksf = tick()
                    return true
                end
            end
        end
        if ksf then
            if tick() - ksf < 10 then
                return true
            else
                ksf = nil
            end
        end
        return false
    else
        return true
    end
end
function IsValidCharactPos(Field)
    local bool = false
    local Player = game:GetService("Players").LocalPlayer
    local Character = Player.Character
    local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    local Field = GetFieldByName(Field)
    local kc = 60
    if Field:FindFirstChild("Range") then kc=Field.Range.Value end

    if (Field.Position - HumanoidRootPart.Position).magnitude < kc then
        bool = true
    end
    return bool
end
function IsToken(token)
    if token == nil then
        return false
    end
    if not token.Parent then return false end
    if token then
        if token.Orientation.Z ~= 0 then
            return false
        end
        if token:FindFirstChild("FrontDecal") then
        else
            return false
        end
        if not token.Name == "C" then
            return false
        end
        if not token:IsA("Part") then
            return false
        end

        return true
    else
        return false
    end
end
function IsTokenBlacklist(token)
    local bool = false
    if token:FindFirstChild("Blacklisted") then
        bool = true
    end
    return bool
end
local HoneyTokenId="1472135114"
-- function GetNerestToken(Field,t)
--     local token = game.Workspace.Collectibles:FindFirstChild("C")
--     local Player = game:GetService("Players").LocalPlayer
--     local Character = Player.Character
--     local HumanoidRootPart =t or Character:WaitForChild("HumanoidRootPart")
--     local h = HumanoidRootPart.Position
--     for _, v in pairs(game.Workspace.Collectibles:GetChildren()) do
--         if v and token and v~=t then
--             if v and IsValidTokenPos(v, Field) and IsToken(v) and not IsTokenBlacklist(v) and isActiveTokens(v) then
--                 if string.match(v.FrontDecal.Texture, "1629547638") then
--                     return v
--                 end
--             end
--             if
--                 IsToken(v) and IsValidTokenPos(v, Field) and isActiveTokens(v) and not IsTokenBlacklist(v) and
--                     not (AutoRare and ValidTokenRare(Field))
--              then
--                 for k, ss in pairs(PrioritizeList) do
--                     if PrioritizeListTF[k] then
--                         if string.match(v.FrontDecal.Texture, ss) then
--                             return v
--                         end
--                     end
--                 end
--             end
--             if
--                 (h - v.Position).magnitude < (h - token.Position).magnitude and IsToken(v) and
--                     IsValidTokenPos(v, Field) and
--                     not IsTokenBlacklist(v) and
--                     not (IgnoreHoney and string.match(v.FrontDecal.Texture, "1472135114")) and
--                     isActiveTokens(v)
--              then
--                 if AutoRare and ValidTokenRare() then
--                     if TokenIdByK[v.FrontDecal.Texture] then
--                         if TokenTrueFakse[TokenIdByK[v.FrontDecal.Texture]] then
--                             token = v
--                         end
--                     end
--                 else
--                     token = v
--                 end
--             end
--         end
--     end
--     if v and token and AutoRare and ValidTokenRare() and IsToken(token) and isActiveTokens(v) then
--         if TokenIdByK[token.FrontDecal.Texture] then
--             if TokenTrueFakse[TokenIdByK[token.FrontDecal.Texture]] then
--                 return token
--             end
--         end
--     else
--         return token
--     end
-- end

function GetNerestToken(Field,t)
    local token
    local Player = game:GetService("Players").LocalPlayer
    local Character = Player.Character
    local HumanoidRootPart =t or Character:FindFirstChild("HumanoidRootPart")
    if not HumanoidRootPart then return end
    local h = HumanoidRootPart.Position
    local Piro = {}
    if ListAllToken[Field] then 
        local FieldTokens = ListAllToken[Field]
        for k, ss in pairs(FieldTokens) do
            if k~="None" then 
                local tok
                for k,v in ipairs(ss) do 
                    if IsToken(v) and IsValidTokenPos(v, Field) and isActiveTokens(v) and not IsTokenBlacklist(v) then 
                        if not tok then tok=v end
                        if (v.Position-h).magnitude < (tok.Position-h).magnitude then 
                            tok=v
                        end
                    end
                end
                if tok then 
                    Piro[tok]=(tok.Position-h).magnitude
                end
            end
        end
        local sml
        for k,v in pairs(Piro) do 
            if not sml then sml=k end
            if v<Piro[sml] then sml=k end
        end
        if sml then return sml end
        local tok
        if ListAllToken[Field].None then 
            for _,v in ipairs(ListAllToken[Field].None) do 
                if IsToken(v) and IsValidTokenPos(v, Field) and isActiveTokens(v) and not IsTokenBlacklist(v) then 
                    if not tok then tok=v end
                    if (v.Position-h).magnitude < (tok.Position-h).magnitude then 
                        tok=v
                    end
                end
            end
        end
        
        return tok
    else
        return nil
    end
end


function EyeAllSprout()
    if game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("LocalPartsInit") then 
        game:GetService("Players").LocalPlayer.PlayerScripts.LocalPartsInit:Destroy()
    end
    for _, v in pairs(Folder2:GetChildren()) do
        pcall(function() 
            if v.Name=="Sprout" then 
                v.Transparency = 0
            else
                v.Transparency = 0.85
            end
        end)
        if v:FindFirstChild("PointLight") then 
            v.PointLight.Enabled=true
        end
        if v:FindFirstChild("GuiPos") then 
            v.GuiPos.Gui.Enabled=true
        end
        if v:FindFirstChild("Sparkles") then 
            v.Sparkles.Enabled=true
        end
    end
end
function NoFire(token) 
    local ray = Ray.new(token.Position+Vector3.new(0,1,0), Vector3.new(0, -5, 0))
    local t = workspace:FindPartOnRayWithIgnoreList(ray, {token,game.Workspace.Bees,game.Players.LocalPlayer.Character})
    if t and t:FindFirstChild("FireParticles") then 
        return false
    end

end
function CheckPollenValid(pollen) 
    local name,x,y=GetXY(pollen)
    if not name or not x or not y then return end
    x=tonumber(x)
    y=tonumber(y)
    local token = pollen
    
    if token then 
        if not NoFire(token) then return false end
    end

    local token = GetFlower(name,x,y+1)
    if token then 
        if not NoFire(token) then return false end
    end
    

    local token = GetFlower(name,x,y-1)

    if token then 
        if not NoFire(token) then return false end
    end

    local token = GetFlower(name,x+1,y)

    if token then 
        if not NoFire(token) then return false end
    end

    local token = GetFlower(name,x-1,y)

    if token then 
        if not NoFire(token) then return false end
    end
    return true
end
function GetComandoMob()
    for k, v in pairs(game.Workspace.Monsters:GetChildren()) do
        if string.match(v.Name, "Commando") then
            if
                v:FindFirstChild("Target") and v:FindFirstChild("Humanoid") and
                    v:FindFirstChild("HumanoidRootPart")
             then
                if tostring(v.Target.Value) == game.Players.LocalPlayer.Name then
                    return v
                end
            end
        end
    end
end
local Last
function tpT(t, k,c)
    if Last then Last() Last=nil end
    if k == nil then
        k = 1
    end
    local plr = game:service "Players".LocalPlayer
    local tween_s = game:service "TweenService"
    local info =
        TweenInfo.new(
        (game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position - t.p).magnitude / k,
        Enum.EasingStyle.Linear
    )
    local tic_k = tick()
    --local params = {...};
    --local cframe = CFrame.new(params[1],params[2],params[3]);
    local cframe = t
    local tween, err =
        pcall(
        function()
            local tween =
                tween_s:Create(plr.Character:WaitForChild("HumanoidRootPart"), info, {CFrame = cframe})
            local done = false
            --print(done)
            local Stop = function() done=true end
            Last=Stop
            tween.Completed:Connect(
                function()
                    done = true
                end
            )
            tween:Play()
            while (done == false) do
                noclip = true
                if c then 
                    if (plr.Character.HumanoidRootPart.Position-t.p).magnitude<50 then 
                        plr.Character.HumanoidRootPart.CFrame=t
                        done=true
                        tween:Pause()
                    end
                end
                wait()
            end
            tween:Pause()
            noclip = false
        end
    )
  
    --syn.write_clipboard(err)
    --print(err)
    if not tween then
        return err
    end
     noclip = false
end
function OptTween(pos) 
    if plr.Character:FindFirstChild("HumanoidRootPart") then 
        if (plr.Character.HumanoidRootPart.Position-pos.p).magnitude<50 then 
            plr.Character.HumanoidRootPart.CFrame=pos
            return
        end
        tpT(pos,120,true)
    end
end
function Walkk(t, Call,token)
    local Players = game:GetService("Players")
    local Character = Players.LocalPlayer.Character
    local Humanoid = Character:WaitForChild("Humanoid")
    local stop = false
    Character:WaitForChild("Humanoid"):MoveTo(t.p)
    Character:WaitForChild("Humanoid").MoveToFinished:Connect(
        function()
            stop = true
        end
    )
    local a = tick()
    while (stop == false) do
        if Call then
            Call()
        end
        
        --print(token)
        wait()
        
        if (token and not IsToken(token)) then
           -- print("Not Find")
           Character:WaitForChild("Humanoid"):Move(Vector3.new(0, 0, 0))
            stop=true
            return
        end
        --Humanoid:MoveTo(t.p)
        if tick() - a >= 5  then
            Character:WaitForChild("Humanoid"):Move(Vector3.new(0, 0, 0))
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = t
            stop = true
        --wait(1)
        end
        if NearTP and (game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position-t.p).magnitude<=NearTPMag then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=t
            stop=true
        end
    end
end

function tp(t, k,token)
    if TypeFarming == "Fast Tween" then
        tpT(t, 100)
    else
        if TypeFarming == "Tween" then
            tpT(t, 40)
        else
            if TypeFarming == "TP" then
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = t
                wait(0.1)
            else
                if TypeFarming == "Walk" then
                    --game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(t.Position.X,t.Position.Y,t.Position.Z))
                    --game:GetService("Players").LocalPlayer.Character.Humanoid.MoveToFinished:Wait()
                    --WalkToHive(t)
                    Walkk(t,function() end,token)
                else
                    local Players = game:GetService("Players")
                    local Character = Players.LocalPlayer.Character
                    local Humanoid = Character:WaitForChild("Humanoid")
                    local speed = Humanoid.WalkSpeed
                    Walkk(
                        t,
                        function()
                            Humanoid.WalkSpeed = 100
                        end,token
                    )
                    Humanoid.WalkSpeed = speed
                end
            end
        end
    end
end

function TpToHive()
    local sp = game:GetService("Players").LocalPlayer.SpawnPos.Value.p
    local p = CFrame.new(sp.X, sp.Y, sp.Z, -0.996, 0, 0.02, 0, 1, 0, -0.02, 0, -0.9) + Vector3.new(0, 0, 8)
    Going = true
    if TypeSell == "TP" then
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = p
    else
        if TypeSell == "Tween" then
            tpT(p, 40)
        else
            tpT(p, 100)
        end
    end
    Going = false
end
function TpToField(Field)
    local p = GetFieldByName(Field).CFrame * CFrame.new(0, 0, 0) + Vector3.new(0, 8, 0)
    if TypeSell == "TP" then
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = p
    else
        if TypeSell == "Tween" then
            tpT(p, 40)
        else
            tpT(p, 100)
        end
    end
end
function IsBackPackFull()
    local bool = false
    local Player = game:GetService("Players").LocalPlayer
    local Character = Player.Character
    local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    if Player.CoreStats.Pollen.Value >= Player.CoreStats.Capacity.Value then
        bool = true
    end
    return bool
end
function DigOther()
    for k, v in pairs(game.Players:GetChildren()) do
        local chara = v.Character
        for f, s in pairs(chara:GetChildren()) do
            if s:IsA("Tool") then
                if s:FindFirstChild("ClickEvent") then
                    s.ClickEvent:FireServer()
                end
            end
        end
    end
end

function Dig()
    coroutine.wrap(
        function()
            local tool
            for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("Tool") and v:FindFirstChild("ClickEvent") then
                    tool = v
                    if tool:FindFirstChild("ClickEvent") then
                        v.ClickEvent:FireServer()
                    end
                end
            end
            local s, e =
                pcall(
                function()
                    if tool and getsenv and not is_sirhurt_closure and not PROTOSMASHER_LOADED then -- Sirhurt and proto argggg
                        local t = getsenv(tool.ClientScriptMouse).collectStart
                        t()
                    else
                        if tool then
                        tool.ClickEvent:FireServer()
                        end
                    end
                end
            )
            if e then
                pcall(
                    function()
                        if tool then
                        tool.ClickEvent:FireServer()
                        end
                    end
                )
            end
        end
    )()
    pcall(
        function()
            workspace.NPCs.Onett.Onett["Porcelain Dipper"].ClickEvent:FireServer()
            --DigOther()
        end
    )
end
function IsSprout()
    for k, v in pairs(Folder2:GetChildren()) do
        if v.Name == "Sprout" then
            return v
        end
    end
    return nil
end
function IsSproutInField(TempField)
    local s = false
    for k, v in pairs(Folder2:GetChildren()) do
        if v.Name == "Sprout" then
            if GetNerestFieldByObject(v) == TempField then
                s = true
            end
        end
    end
    return s
end
function GetCurrenItem(Item)
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    return StatCache.Get()["Eggs"][Item]
end
function GetCurrenMicro()
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    return StatCache.Get()["Eggs"]["Micro-Converter"]
end

function IsBuffOn(Buff)
    for k,v in pairs(ListTileGrid) do 
        local PlGui = v

        for k, v in pairs(PlGui:GetChildren()) do
            if v:FindFirstChild("BG") then
                if v.BG:FindFirstChild("Icon") then
                    if string.match(v.BG.Icon.Image, BarId[Buff]) then
                        return true
                    end
                --print(v.BG.Icon.Image)
                end
            end
        end
    end
    
    return false
end
function GetMemoList()
    local tab = {}
    for k, v in pairs(game.Workspace.Toys:GetChildren()) do
        if string.match(v.Name, "Memory Match") then
            table.insert(tab, v)
        end
    end
    return tab
end
function GetInstantList()
    local tab = {}
    for k, v in pairs(game.Workspace.Toys:GetChildren()) do
        if string.match(v.Name, "Instant Converter") then
            table.insert(tab, v)
        end
    end
    return tab
end
function ObjListTostring(tabl)
    local Tab = {}
    for k, v in pairs(tabl) do
        table.insert(Tab, v.Name)
    end
    return Tab
end
function ListToField(ListHoney, ListItem)
    local ListAll = GetItemListWithValue()
    local fields = {}

    for k, v in pairs(ListHoney) do
        if v then
            table.insert(
                fields,
                {
                    name = k,
                    value = ""..tostring(game:GetService("Players").LocalPlayer.CoreStats[k].Value).."",
                    inline=false
                }
            )
        end
    end

    for k, v in pairs(ListItem) do
        if v then
            table.insert(
                fields,
                {
                    name = k,
                    value = ""..tostring(ListAll[k]).."",
                    inline=false

                }
            )
        end
    end

    return fields
end
function CollectAllTokenInField()
    for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
        if
            IsToken(v) and
                IsValidTokenPos(v, GetNerestFieldByObject(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")))
         then
            tp(
                CFrame.new(
                    v.Position.X,
                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y,
                    v.Position.Z
                )
            )
        end
    end
end
function UseAnt()
    game.ReplicatedStorage.Events.ToyEvent:FireServer("Ant Challenge")
end
function NormalSell()
    local Player = game:GetService("Players").LocalPlayer
    local Character = Player.Character
    local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    local sangzboi = HumanoidRootPart.CFrame
    TpToHive()
    wait(.2)
    game:GetService("ReplicatedStorage").Events.PlayerHiveCommand:FireServer("ToggleHoneyMaking")
    wait(.5)
    repeat
        local tpos = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.ActivateButton
        if tpos.AbsolutePosition.Y ~= 4 then
            game:GetService("ReplicatedStorage").Events.PlayerHiveCommand:FireServer("ToggleHoneyMaking")
            TpToHive()
            wait(.5)
        end
        if string.match(tpos.TextBox.Text, "Stop") then
        else
            if string.match(tpos.TextBox.Text, "Collect") then
            else
                if string.match(tpos.TextBox.Text, "Talk") then
                else
                    game:GetService("ReplicatedStorage").Events.PlayerHiveCommand:FireServer(
                        "ToggleHoneyMaking"
                    )
                end
            end
        end
        wait()
    until (function() if Settings.ConvertBallon then 
    if GetHiveBallon() then return false end
    end 
    if Player.CoreStats.Pollen.Value <= 0 then return true end
end)() or not Farm or not Running or not ValidFarm()
    wait(3)
end
local plr = game.Players.LocalPlayer
local speaker=plr
local FloatName=math.random(1,100000)
function CreateTweenFloat()
    if not plr.Character.HumanoidRootPart:FindFirstChild(FloatName) then
        local BV = Instance.new("BodyVelocity",plr.Character.HumanoidRootPart)
        BV.Name = tostring(FloatName)
        BV.MaxForce = Vector3.new(100000, 100000, 100000)
        BV.Velocity = Vector3.new(0, 0, 0)
    end
end


game:GetService("RunService").Stepped:connect(
    function()
        if noclip then
           CreateTweenFloat()
           for _, child in pairs(speaker.Character:GetDescendants()) do
            if child:IsA("BasePart") and child.CanCollide == true then
                child.CanCollide = false
            end
            end
          --  print("Yes")
        else
           -- print("No")
            if plr.Character.HumanoidRootPart:FindFirstChild(tostring(FloatName)) then 
                plr.Character.HumanoidRootPart:FindFirstChild(tostring(FloatName)):Destroy()
            end
        end
    end
)
function ListToOb(tabl, tf)
    local out = {}
    for k, v in pairs(tabl) do
        if tf then
            out[v] = true
        else
            out[v] = false
        end
    end
    return out
end

function GetCurrentFieldMask()
    local nr = GetNerestFieldByObject(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))
    if IsValidTokenPos(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), nr) then
        local Colour = MaskField2[tostring(nr)]
        local Mask = MaskF[Colour]
        return Mask
    end
end
function EquipMaskByField()
    local A_1 = "Equip"
    local A_2 = {
        ["Mute"] = true,
        ["Type"] = GetCurrentFieldMask(),
        ["Category"] = "Accessory"
    }
    local Event = game:GetService("ReplicatedStorage").Events.ItemPackageEvent
    Event:InvokeServer(A_1, A_2)
end
function EquipAtt()
    local A_1 = "Equip"
    local A_2 = {
        ["Mute"] = true,
        ["Type"] = AttackMask,
        ["Category"] = "Accessory"
    }
    local Event = game:GetService("ReplicatedStorage").Events.ItemPackageEvent
    Event:InvokeServer(A_1, A_2)
end



function GetSortedToken(Field)
    local token = {}
    local sortedtoken = {}
    for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
        if v and IsValidTokenPos(v, Field) and IsToken(v) and not IsTokenBlacklist(v) and isActiveTokens(v) and (v.Position - game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).magnitude < 60 then
            local booll = false
            for k, ss in pairs(PrioritizeList) do
                if PrioritizeListTF[k] then
                    if string.match(v.FrontDecal.Texture, ss) then

                        table.insert(sortedtoken,v)
                        booll=true
                        break
                    end
                end
            end
            if not bool and
            not (IgnoreHoney and string.match(v.FrontDecal.Texture, "1472135114")) then
            table.insert(token, v)
            end
        end
    end
    

    local function Por(p)
        local nr
        local kk = 0
        for k, v in pairs(token) do
            if not nr then
                nr = v
                kk = k
            end
            
            if (v.Position - p.Position).magnitude < (nr.Position - p.Position).magnitude then
                nr = v
                kk = k
            end
        
        end
        if nr then
            table.insert(sortedtoken, nr)
            table.remove(token, kk)
            Por(nr)
        end
    end
    Por(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))

    return sortedtoken
end
function GetValidAntPos() 
    local mid=CFrame.new(93.422752380371, 31.946582794189, 553.12829589844)
    local left=CFrame.new(93.422752380371, 31.946582794189, 553.12829589844)
    local right = CFrame.new(92.35001373291, 31.946582794189, 532.30163574219)

    local tb = {
        mid=CFrame.new(93.422752380371, 31.946582794189, 553.12829589844),
        left=CFrame.new(89.871429443359, 31.946582794189, 571.10089111328),
        right= CFrame.new(86.353813171387, 31.946582794189, 527.67553710938)
    }
    local fk = {}
    for k,v in pairs(tb) do fk[k]=false end
    local has = false
    for i,v in pairs(workspace.Toys["Ant Challenge"].Obstacles:GetChildren()) do
        if v:FindFirstChild("Root") then
            local root = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if root then 
                if true  then
                    has=true
                    local vpos = v.Root.Position
                    local near,ractvk = nil
                    for k,v in pairs(tb) do 
                        if not ractvk then ractvk = k end
                        if (v.p-vpos).magnitude< (tb[ractvk].p-vpos).magnitude then 
                            --near=v
                            ractvk=k
                        end
                    end
                    if ractvk then 
                       -- print("Con cac con",ractvk)
                        fk[ractvk]=true
                    end
                end
            end
        end
    end
    if has then 
        for k,v in pairs(fk) do 
           -- print(k,v)
            if not v then return tb[k] end
        end
    end
    
    return tb["mid"]

end
function CheckNear(pos,mob) 
    for k,v in pairs(game.Workspace.Monsters:GetChildren()) do 
        if string.match(v.Name,mob) then 
            if v:FindFirstChild("Torso") then 
                if (v.Torso.Position-pos.p).magnitude<20 then 
                    return true
                end
            end
        end
    end
    return false
end
function GetPuffRoomLevel(v) 
--    game:GetService("Workspace").Happenings.Puffshrooms.PuffballMushroomModelCommon["Puffball Top"].Attachment.Gui.NameRow.TextLabel
    local level = 25
    if v:FindFirstChild("Puffball Top") then 
        while level>0 do 
            if v["Puffball Top"].Attachment.Gui.NameRow.TextLabel.Text:find(tostring(level)) then 
                return level
            end
            level=level-1
        end
    end
    return 0
end
local Field = {"Pine Tree Forest","Cactus Field","Pumpkin Patch"}
local FieldTf=ToTrueFalse(Field,true)
function PiroField(v,f) 
    for k,v in pairs(v) do 
        if v:FindFirstChild("Puffball Stem") and FieldTf[GetNerestFieldByObject(v["Puffball Stem"])] then 
            return v
        end
    end
    
    if f then return end

    local Nearest
    for k,v in pairs(v) do 
        if not Nearest and v:FindFirstChild("Puffball Stem") then Nearest=v end
        if plr.Character:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Puffball Stem") then 
            if (plr.Character.HumanoidRootPart.Position-v["Puffball Stem"].Position).magnitude<(plr.Character.HumanoidRootPart.Position-Nearest["Puffball Stem"].Position).magnitude then 
                Nearest=v
            end
        end
    end
    return Nearest
end
function GetHiveBallon()
    for i,hive in next, game:GetService("Workspace").Honeycombs:GetChildren() do
        if hive:FindFirstChild("Owner") and hive:FindFirstChild("SpawnPos") then
            if tostring(hive.Owner.Value) == game.Players.LocalPlayer.Name then
                for e,balloon in next, game:GetService("Workspace").Balloons.HiveBalloons:GetChildren() do
                    if balloon:FindFirstChild("BalloonRoot") then
                        if (balloon.BalloonRoot.Position-hive.SpawnPos.Value.Position).magnitude < 30 then
                            return ballon
                        end
                    end
                end
            end
        end
    end
    return
end
function GetNearestPushroom(Field)
    -- Mythic > Legendary > Epic > Level 10+ > Rare > Highest Level
    local ListPuff = {}
    for k,v in pairs(game:GetService("Workspace").Happenings.Puffshrooms:GetChildren()) do 
        table.insert(ListPuff,v)
    end

    -- Mythic > Legendary > Epic
    local BestRaity = {"Mythic","Legendary","Epic"}
    local ReturnList = {}
    local Check=false
    for k,v in pairs(BestRaity) do 
        for k2,v2 in pairs(ListPuff) do 
            if string.match(v2.Name,v) then table.insert(ReturnList,v2) Check=true end
        end
        if Check then break end
    end
    if Check then 
        return PiroField(ReturnList)
    end

    -- Level 10+

    local ReturnList = {}

    local Check=false
    for k,v in pairs(ListPuff) do 
        if GetPuffRoomLevel(v)>10 then 
            table.insert(ReturnList,v)
            Check=true
        end
    end

    if Check then 
        return PiroField(ReturnList)
    end

    -- Rare

    local BestRaity = {"Rare"}
    local ReturnList = {}
    local Check=false
    for k,v in pairs(BestRaity) do 
        for k2,v2 in pairs(ListPuff) do 
            if string.match(v2.Name,v) then table.insert(ReturnList,v2) Check=true end
        end
        if Check then break end
    end
    if Check then 
        return PiroField(ReturnList)
    end

    -- Piro Field
    local piro = PiroField(ListPuff,true)
    if piro then 
        return piro
    end

    -- Highest
    local Highest
    for k,v in pairs(ListPuff) do 
        if v:FindFirstChild("Puffball Stem") then 
            if not Highest then Highest=v end
            if GetPuffRoomLevel(v)>GetPuffRoomLevel(Highest) then Highest=v end
        end
        
    end
    return Highest
end
function GetSortedBubble(Field)
    local token = {}
    local sortedtoken = {}
    for k, v in pairs(game.Workspace.Particles:GetChildren()) do
        if v:IsA("Part") then
            if v.Name == "Bubble" then
                if IsValidTokenPos(v, Field) and ValidFarm() and Farm then
                    table.insert(token,v)
                end
            end
        end
    end
    

    local function Por(p)
        local nr
        local kk = 0
        for k, v in pairs(token) do
            if not nr then
                nr = v
                kk = k
            end
            
            if (v.Position - p.Position).magnitude < (nr.Position - p.Position).magnitude then
                nr = v
                kk = k
            end
        
        end
        if nr then
            table.insert(sortedtoken, nr)
            table.remove(token, kk)
            Por(nr)
        end
    end
    Por(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))
    
    return sortedtoken
end
function GetSortedCrossHair(Field)
    local token = {}
    local sortedtoken = {}
    for k, v in pairs(game.Workspace.Particles:GetChildren()) do
        if v:IsA("MeshPart") then
            if v.Name == "Crosshair" then
                if IsValidTokenPos(v, Field) and ValidFarm() and Farm and (v.Color==Color3.fromRGB(144,119,87) or v.Color==Color3.fromRGB(119, 85, 255)) then
                    table.insert(token,v)
                end
            end
        end
    end
    

    local function Por(p)
        local nr
        local kk = 0
        for k, v in pairs(token) do
            if not nr then
                nr = v
                kk = k
            end
            
            if (v.Position - p.Position).magnitude < (nr.Position - p.Position).magnitude then
                nr = v
                kk = k
            end
        
        end
        if nr then
            table.insert(sortedtoken, nr)
            table.remove(token, kk)
            Por(nr)
        end
    end
    Por(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))
    
    return sortedtoken
end
function GetSortedFlame(Field)
    local token = {}
    local sortedtoken = {}
    for k, v in pairs(game.Workspace.Particles:GetChildren()) do
        if v:IsA("Part") then
            if v.Name == "FlamePart" then
                if
                    IsValidTokenPos(v, Field) and ValidFarm() and
                        v:FindFirstChild("Fire") and
                        Farm
                 then
                  table.insert(token,v)
                end
            end
        end
    end
    

    local function Por(p)
        local nr
        local kk = 0
        for k, v in pairs(token) do
            if not nr then
                nr = v
                kk = k
            end
            
            if (v.Position - p.Position).magnitude < (nr.Position - p.Position).magnitude then
                nr = v
                kk = k
            end
        
        end
        if nr then
            table.insert(sortedtoken, nr)
            table.remove(token, kk)
            Por(nr)
        end
    end
    Por(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))

    return sortedtoken
end

function GetSortedCoconut(Field)
    local token = {}
    local sortedtoken = {}
    for d, f in pairs(game.Workspace.Particles:GetChildren()) do
        if f.Name == "WarningDisk" then
            if f:FindFirstChild("Mesh") then
                if IsValidTokenPos(f, Field) and Farm and Running and ValidFarm() then
                    if f.Size == Vector3.new(30, 0.4, 30) then
                        table.insert(token,f)
                    end
                end
            end
        end
    end
    

    local function Por(p)
        local nr
        local kk = 0
        for k, v in pairs(token) do
            if not nr then
                nr = v
                kk = k
            end
            
            if (v.Position - p.Position).magnitude < (nr.Position - p.Position).magnitude then
                nr = v
                kk = k
            end
        
        end
        if nr then
            table.insert(sortedtoken, nr)
            table.remove(token, kk)
            Por(nr)
        end
    end
    Por(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))

    return sortedtoken
end

game.Workspace.Collectibles.ChildAdded:Connect(function(v)
    if v:FindFirstChild("FrontDecal") then 
        
        if IgnoreHoney then 
            if string.match(v.FrontDecal.Texture,HoneyTokenId) then return end
        end
    end

    local field = GetNerestFieldByObject(v)
    if not ListAllToken[field] then 
        ListAllToken[field]={}
    end
    local Token
    if v:FindFirstChild("FrontDecal") then 
        for k,val in pairs(PrioritizeList) do 
            if PrioritizeListTF[k] then 
                if string.match(v.FrontDecal.Texture,val) then
                    Token=k
                    break; 
                end
            end
            
        end
    end
    if Token then 
        if not ListAllToken[field][Token] then 
            ListAllToken[field][Token]={}
        end
        table.insert(ListAllToken[field][Token],v)     
    else
        if not ListAllToken[field]["None"] then 
            ListAllToken[field]["None"]={}
        end
        table.insert(ListAllToken[field]["None"],v)    
    end
end)

game.Workspace.Collectibles.ChildRemoved:Connect(function(v) 
    local field = GetNerestFieldByObject(v)
    if not ListAllToken[field] then 
        ListAllToken[field]={}
    end
    local index=0
    for k,val in pairs(ListAllToken[field]) do 
        for k,val2 in pairs(val) do 
            if val2==v then 
                table.remove(val,k)
                break;
            end
        end
    end
end)





local ks = {}
for k, v in pairs(GetInstantList()) do
    ks[v.Name] = v.Platform.CFrame
end
local Snail = false
local AutoSaveSettings = false
local QuestTF = ListToOb(QuestList, true)
local AutoTunnel2=false
local AutoTunnel = false
local Crab = false
local AntMethod = ""
local AutoBoost = false
local memo = false
local AutoQuest = false
local AutoDispenser = false
local KickWhen = false
local AutoQ = false
local AutoMob = false
local BubbleBloat = false
local AutoBadge = false
local Speed = false
local SmartSp = false
local AutoBuffItem = false
local AutoMob = false
local KillVici = false
local TpRare = false
local Jump = false
local CollectBubble = false
local DonateItem = "Ticket"
local AutoDonate = false
local WebHookTime = 120
local DonateAmount = 1
local SpeedTy = 70
local JumpTy = 70
local AutoPolar = false
local WebHook = false
local KillWindy = false
local AutoMondo = false
local BringIns = false
local AutoInstant = false
local AutoMicro = false
local AutoAntPass = false
local AutoFAnt = false
local AutoEquipSpark = false
local AutoComando = false
local GatherFlame = false
local AutoBoostOnly = false
local WebHookUrl = ""
local AutoKing = false
local AutoDodge = false
local EquipMaskBy = false
local BuyAnt = false
local AutoFarmBoost = false

local ListBuff = {"Blue Extract", "Red Extract", "Oil", "Enzymes", "Glue", "Tropical Drink", "Stinger"}
local ListFieldBoost = {"Red Field Booster", "Blue Field Booster", "Field Booster","Coconut Dispenser"}
local TFListFieldBoost = ListToOb(ListFieldBoost, false)
local FarmBuffList = {
    ["Blue Extract"] = false,
    ["Red Extract"] = false,
    ["Oil"] = false,
    ["Enzymes"] = false,
    ["Glue"] = false,
    ["Tropical Drink"] = false,
    ["Stinger"] = false
}
--local FarmBuffList = ToTrueFalse(ListBuff)
local TFItemHook = ListToOb(GetItemList())
local ShowS = false
local UntilGif = false
local ToggleBoostFPS = false
-- default settings
local DefaultConfig = {
    ToggleBoostFPS=ToggleBoostFPS,
    BubbleBloat=BubbleBloat,
    AutoDig=AutoDig,
    KickWhen=KickWhen,
    Farm = Farm,
    NearTP=NearTP,
    NearTPMag=NearTPMag,
    WebHookUrl = WebHookUrl,
    WebHookTime = WebHookTime,
    HoneyPolen = HoneyPolen,
    TFItemHook = TFItemHook,
    AutoSaveSettings = AutoSaveSettings,
    CurrentField = CurrentField,
    TypeFarming = TypeFarming,
    TypeSell = TypeSell,
    CollectCoco = CollectCoco,
    StopMoreOne = StopMoreOne,
    CollectBubble = CollectBubble,
    GatherFlame = GatherFlame,
    SmartSp = SmartSp,
    AutoMicro = AutoMicro,
    AutoInstant = AutoInstant,
    AutoAntPass = AutoAntPass,
    IgnoreHoney = IgnoreHoney,
    AutoRare = AutoRare,
    AutoSprout = AutoSprout,
    AutoMob = AutoMob,
    AutoQ = AutoQ,
    AutoFarmBoost = AutoFarmBoost,
    AutoQuest = AutoQuest,
    AutoBadge = AutoBadge,
    AutoDispenser = AutoDispenser,
    AutoGum = AutoGum,
    AutoCoco = AutoCoco,
    memo = memo,
    BringIns = BringIns,
    BuyAnt = BuyAnt,
    EquipMaskBy = EquipMaskBy,
    EquipAttack = EquipAttack,
    AutoBoost = AutoBoost,
    TFListFieldBoost = TFListFieldBoost,
    TokenTrueFakse2 = TokenTrueFakse2,
    KillCrab = KillCrab,
    Snail = Snail,
    KillVici = KillVici,
    KillWindy = KillWindy,
    AutoTunnel = AutoTunnel,
    AutoComando = AutoComando,
    AutoMondo = AutoMondo,
    AutoBoostOnly = AutoBoostOnly,
    TokenTrueFakse = TokenTrueFakse,
    SproutRare = SproutRare,
    QuestTF = QuestTF,
    TimerKiet = TimerKiet,
    CollectType = CollectType,
    PrioritizeListTF = PrioritizeListTF,
    MaskF = MaskF,
    AttackMask = AttackMask,
    AutoSaveSettings = AutoSaveSettings,
    AutoKing=AutoKing,
    Settings=Settings
}

local HttpService = game:GetService("HttpService")
local SaveFileName = game.Players.LocalPlayer.Name.."_BeeSwarmSimulator.json" -- name

if AutoSave then
if not isfolder("Sea Hub Premium") then
    makefolder("Sea Hub Premium")
end
if
    not pcall(
        function()
            readfile("Sea Hub Premium/" .. SaveFileName)
        end
    )
 then
    writefile("Sea Hub Premium/" .. SaveFileName, HttpService:JSONEncode(DefaultConfig))
end
function SaveSettings()
    writefile("Sea Hub Premium/" .. SaveFileName, HttpService:JSONEncode(S))
end
local S
function k()
   local s,e = pcall(
        function()
            S = HttpService:JSONDecode(readfile("Sea Hub Premium/" .. SaveFileName))
        end
    )
    if e then 
        writefile("Sea Hub Premium/" .. SaveFileName, HttpService:JSONEncode(DefaultConfig))
        k()
    end
end

k()
    
--pcall(
    --function()
    ToggleBoostFPS=S.ToggleBoostFPS
        if S.BubbleBloat then BubbleBloat = S.BubbleBloat end
        if S.AutoDig then AutoDig = S.AutoDig end
        if S.KickWhen then KickWhen=S.KickWhen end
        if S.NearTP then NearTP=S.NearTP end
        if S.NearTPMag then NearTPMag=S.NearTPMag end
        if S.Farm then  Farm = S.Farm end
        if S.Settings then 
            for k,v in pairs(S.Settings) do 
                Settings[k]=v
            end
        end
        BringIns = S.BringIns
        GatherFlame = S.GatherFlame
        AutoSaveSettings = S.AutoSaveSettings
        AutoCoco = S.AutoCoco
        AutoQ = S.AutoQ
        AutoSprout = S.AutoSprout
        AutoAntPass = S.AutoAntPass
        SmartSp = S.SmartSp
        AutoBoost = S.AutoBoost
        CollectCoco = S.CollectCoco
        SproutRare = S.SproutRare
        TokenTrueFakse2 = S.TokenTrueFakse2
        StopMoreOne = S.StopMoreOne
        AutoFarmBoost = S.AutoFarmBoost
        AutoRare = S.AutoRare
        memo = S.memo
        KillCrab = S.KillCrab
        AttackMask = S.AttackMask
        EquipMaskBy = S.EquipMaskBy
        AutoDispenser = S.AutoDispenser
        MaskF = S.MaskF
        IgnoreHoney = S.IgnoreHoney
        AutoBoostOnly = S.AutoBoostOnly
        KillVici = S.KillVici
        CollectType = S.CollectType
        TimerKiet = S.TimerKiet
        AutoBadge = S.AutoBadge
        AutoInstant = S.AutoInstant
        TFListFieldBoost = S.TFListFieldBoost
        for k,v in pairs(S.QuestTF) do 
            QuestTF[k]=v
        end
        --QuestTF = S.QuestTF
        TokenTrueFakse = S.TokenTrueFakse
        CollectBubble = S.CollectBubble
        AutoMicro = S.AutoMicro
        EquipAttack = S.EquipAttack
        AutoComando = S.AutoComando
        AutoTunnel = S.AutoTunnel
        KillWindy = S.KillWindy
        PrioritizeListTF = S.PrioritizeListTF
        TypeSell = S.TypeSell
        AutoMob = S.AutoMob
        AutoMondo = S.AutoMondo
        BuyAnt = S.BuyAnt
        AutoQuest = S.AutoQuest
        CurrentField = S.CurrentField
        AutoGum = S.AutoGum
        TypeFarming = S.TypeFarming
        Snail = S.Snail
        if S.WebHookUrl then
            WebHookUrl = S.WebHookUrl
        end
        if S.HoneyPolen then
            HoneyPolen = S.HoneyPolen
        end
        if S.TFItemHook then
            TFItemHook = S.TFItemHook
        end
        if S.WebHookTime then
            WebHookTime = S.WebHookTime
        end
        if S.AutoKing then AutoKing = S.AutoKing end
    --end
--)
    end
-- save settings function
function SaveSettings()
    local DefaultConfig = {
        ToggleBoostFPS=ToggleBoostFPS,
        BubbleBloat=BubbleBloat,
        AutoDig=AutoDig,
        KickWhen=KickWhen,
        Farm=Farm,
        NearTP=NearTP,
        NearTPMag=NearTPMag,
        WebHookTime = WebHookTime,
        WebHookUrl = WebHookUrl,
        HoneyPolen = HoneyPolen,
        TFItemHook = TFItemHook,
        AutoSaveSettings = AutoSaveSettings,
        CurrentField = CurrentField,
        TypeFarming = TypeFarming,
        TypeSell = TypeSell,
        CollectCoco = CollectCoco,
        StopMoreOne = StopMoreOne,
        CollectBubble = CollectBubble,
        GatherFlame = GatherFlame,
        SmartSp = SmartSp,
        AutoMicro = AutoMicro,
        AutoInstant = AutoInstant,
        AutoAntPass = AutoAntPass,
        IgnoreHoney = IgnoreHoney,
        AutoRare = AutoRare,
        AutoSprout = AutoSprout,
        AutoMob = AutoMob,
        AutoQ = AutoQ,
        AutoFarmBoost = AutoFarmBoost,
        AutoQuest = AutoQuest,
        AutoBadge = AutoBadge,
        AutoDispenser = AutoDispenser,
        AutoGum = AutoGum,
        AutoCoco = AutoCoco,
        memo = memo,
        BringIns = BringIns,
        BuyAnt = BuyAnt,
        EquipMaskBy = EquipMaskBy,
        EquipAttack = EquipAttack,
        AutoBoost = AutoBoost,
        TFListFieldBoost = TFListFieldBoost,
        TokenTrueFakse2 = TokenTrueFakse2,
        KillCrab = KillCrab,
        Snail = Snail,
        KillVici = KillVici,
        KillWindy = KillWindy,
        AutoTunnel = AutoTunnel,
        AutoComando = AutoComando,
        AutoMondo = AutoMondo,
        AutoBoostOnly = AutoBoostOnly,
        TokenTrueFakse = TokenTrueFakse,
        SproutRare = SproutRare,
        QuestTF = QuestTF,
        TimerKiet = TimerKiet,
        CollectType = CollectType,
        PrioritizeListTF = PrioritizeListTF,
        MaskF = MaskF,
        AttackMask = AttackMask,
        AutoKing=AutoKing,
        Settings=Settings
    }

    local HttpService = game:GetService("HttpService")
    local SaveFileName = game.Players.LocalPlayer.Name.."_BeeSwarmSimulator.json" -- name

    if not isfolder("Sea Hub Premium") then
        makefolder("Sea Hub Premium")
    end

    writefile("Sea Hub Premium/" .. SaveFileName, HttpService:JSONEncode(DefaultConfig))
end
spawn(
    function()
        while wait(1) do
            if AutoSaveSettings then
                SaveSettings()
            end
        end
    end
)
spawn(
    function()
        while wait(1) do
            Con = {
                ToggleBoostFPS=ToggleBoostFPS,
                BubbleBloat=BubbleBloat,
                AutoDig=AutoDig,
                KickWhen=KickWhen,
                Farm = Farm,
                NearTP=NearTP,
                NearTPMag=NearTPMag,
                HoneyPolen = HoneyPolen,
                TFItemHook = TFItemHook,
                AutoSaveSettings = AutoSaveSettings,
                CurrentField = CurrentField,
                TypeFarming = TypeFarming,
                TypeSell = TypeSell,
                CollectCoco = CollectCoco,
                StopMoreOne = StopMoreOne,
                CollectBubble = CollectBubble,
                GatherFlame = GatherFlame,
                SmartSp = SmartSp,
                AutoMicro = AutoMicro,
                AutoInstant = AutoInstant,
                AutoAntPass = AutoAntPass,
                IgnoreHoney = IgnoreHoney,
                AutoRare = AutoRare,
                AutoSprout = AutoSprout,
                AutoMob = AutoMob,
                AutoQ = AutoQ,
                AutoFarmBoost = AutoFarmBoost,
                AutoQuest = AutoQuest,
                AutoBadge = AutoBadge,
                AutoDispenser = AutoDispenser,
                AutoGum = AutoGum,
                AutoCoco = AutoCoco,
                memo = memo,
                BringIns = BringIns,
                BuyAnt = BuyAnt,
                EquipMaskBy = EquipMaskBy,
                EquipAttack = EquipAttack,
                AutoBoost = AutoBoost,
                TFListFieldBoost = TFListFieldBoost,
                TokenTrueFakse2 = TokenTrueFakse2,
                KillCrab = KillCrab,
                Snail = Snail,
                KillVici = KillVici,
                KillWindy = KillWindy,
                AutoTunnel = AutoTunnel,
                AutoComando = AutoComando,
                AutoMondo = AutoMondo,
                AutoBoostOnly = AutoBoostOnly,
                TokenTrueFakse = TokenTrueFakse,
                SproutRare = SproutRare,
                QuestTF = QuestTF,
                TimerKiet = TimerKiet,
                CollectType = CollectType,
                PrioritizeListTF = PrioritizeListTF,
                MaskF = MaskF,
                AttackMask = AttackMask,
                Settings=Settings
            }
        end
    end
)






Main = Library.CreateMain({Title = 'Bee Swarm Simulator', Desc = ''})


Page1 = Main.CreatePage({Page_Name = 'Farming', Page_Title = 'Farming'})

Section11 = Page1.CreateSection('Main')
Section11.CreateDropdown({Title = 'Sellect Field', List = GetListField(), Search = true, Selected = false, Default = CurrentField}, function(v)
    FarmFieldList["CurrentField"] = v
    CurrentField=v
end)
Section11.CreateDropdown({Title = 'Sellect Mode', List = {"Walk", "Tween", "Fast Tween", "TP"}, Search = true, Selected = false, Default = TypeFarming}, function(v)
    local tx =tostring(v)
    TypeFarming = tostring(v)
end)
Section11.CreateDropdown({Title = 'Go to Hive Mode', List = {"Tween", "Fast Tween", "TP"}, Search = true, Selected = false, Default = TypeSell}, function(v)
    local tx =tostring(v)
    TypeSell = tostring(v)
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm', Desc = nil, Default = Farm}, function(v)
    Farm=v
    TempField=Field
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Dig', Desc = nil, Default = AutoDig}, function(v)
    AutoDig=v
    spawn(
                    
                    function()
                        while wait(.1) and Running and AutoDig do
                            if AutoDig then
                                Dig()
                            end
                        end
                    end
                )
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'NoSell', Desc = nil, Default = Settings.NoSell}, function(v)
    print(v)
    Settings.NoSell=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Convert Ballon', Desc = nil, Default = Settings.ConvertBallon}, function(v)
    Settings.ConvertBallon=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Sprout', Desc = nil, Default = AutoSprout}, function(v)
    AutoSprout=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Mob', Desc = nil, Default = AutoMob}, function(v)
    AutoMob=v
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Field Boost', Desc = nil, Default = AutoFarmBoost}, function(v)
    AutoFarmBoost=v
end)
Section11 = Page1.CreateSection('Extras')
-- NaziNuclearToggle = Section11.CreateToggle({Title = 'Avoid Mob', Desc = nil, Default = Settings.AvoidMob}, function(v)
--     Settings.AvoidMob=v
-- end)

-- Script generated by TurtleSpy, made by Intrer#0421

NaziNuclearToggle = Section11.CreateToggle({Title = 'Instant Tp When Near Token', Desc = nil, Default = NearTP}, function(v)
    NearTP=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Bubble Bloat', Desc = "When Bubble Bloat is activated, it will start collect bubble", Default = BubbleBloat}, function(v)
    BubbleBloat=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Collect Coconut', Desc = nil, Default = CollectCoco}, function(v)
    CollectCoco=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Collect CrossHair', Desc = nil, Default = Settings.CrossHair}, function(v)
    Settings.CrossHair=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Stop Farm when >1 player in server', Desc = nil, Default = StopMoreOne}, function(v)
    StopMoreOne=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Collect Bubble', Desc = nil, Default = CollectBubble}, function(v)
    CollectBubble=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Gather Flame', Desc = nil, Default = GatherFlame}, function(v)
    GatherFlame=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Smart Auto Sprinkler', Desc = nil, Default = SmartSp}, function(v)
    SmartSp=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto use Micro Converter', Desc = nil, Default = AutoMicro}, function(v)
    AutoMicro=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto use Instant Converter', Desc = nil, Default = AutoInstant}, function(v)
    AutoInstant=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto use Ant Pass', Desc = nil, Default = AutoAntPass}, function(v)
    AutoAntPass=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Ignore Honey Token', Desc = nil, Default = IgnoreHoney}, function(v)
    IgnoreHoney=v
end)

Page1 = Main.CreatePage({Page_Name = 'Auto Quest', Page_Title = 'Auto Quest'})

Section11 = Page1.CreateSection('Main')

NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Quest', Desc = nil, Default = AutoQ}, function(v)
    AutoQ=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Accept Quest', Desc = nil, Default = AutoQuest}, function(v)
    AutoQuest=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Ignore Honey Bee Quest', Desc = nil, Default =  Settings.IgnoreHoneyBee}, function(v)
    Settings.IgnoreHoneyBee=v
end)
Section11 = Page1.CreateSection('Settings')

Section11.CreateDropdown({Title = 'Quest List', List = QuestTF, Search = false, Selected = true, Default = nil}, function(k,v)
    if k and v then 
       -- if k=="Other NPC (Not fully supported)"
        QuestTF[k]=v
    end
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Go Ant Challenge when rage token quest', Desc = nil, Default = Settings.RageAnt}, function(v)
    Settings.RageAnt=v
end)
Page1 = Main.CreatePage({Page_Name = 'Extras', Page_Title = 'Extras'})


Section11 = Page1.CreateSection('Main')


NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Recive Badge', Desc = nil, Default = AutoBadge}, function(v)
    AutoBadge=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Get Stocking', Desc = nil, Default = Settings.Stocking}, function(v)
    Settings.Stocking=v
end)
spawn(function() 
    while wait() do 
        if Settings.Stocking and CheckFarm("Stocking") then 
            local pos = Vector3.new(232.93347167969, 35.397228240967, 235.30931091309)
            game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer("Stockings")
            for k,v in ipairs(game.Workspace.Collectibles:GetChildren()) do 
                if IsToken(v) then 
                    if (v.Position-pos).magnitude<20 and CheckFarm("Stocking") then 
                        ValidTB["Stock"] = true
                        StopFarmList["Stocking"] = true
                        wait(.3)
                        OptTween(v.CFrame)
                    end
                end
            end
            ValidTB["Stock"]=false
            StopFarmList["Stocking"] = false
        end
    end
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Use Dispenser', Desc = nil, Default = AutoDispenser}, function(v)
    AutoDispenser=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Use Gumdrop', Desc = nil, Default = AutoGum}, function(v)
    AutoGum=v
    spawn(
                    function()
                        while wait(2) and AutoGum do
                            if AutoGum then
                                local A = {
                                    ["Name"] = "Gumdrops"
                                }
                                local Event = game:GetService("ReplicatedStorage").Events.PlayerActivesCommand
                                Event:FireServer(A)
                            end
                        end
                    end
                )
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Use Coconut', Desc = nil, Default = AutoCoco}, function(v)
    AutoCoco=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Memory Match Cheat', Desc = nil, Default = memo}, function(v)
    memo=v
    spawn(
                    function()
                        while wait() and memo do
                            if memo then
                                for i, v in pairs(
                                    game.Players.LocalPlayer.PlayerGui.ScreenGui:WaitForChild("MinigameLayer"):GetChildren(

                                    )
                                ) do
                                    for k, q in pairs(v:WaitForChild("GuiGrid"):GetDescendants()) do
                                        if q.Name == "ObjContent" or q.Name == "ObjImage" then
                                            q.Visible = true
                                        end
                                    end
                                end
                            end
                        end
                    end
                )
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Bring Instant Converter', Desc = nil, Default = BringIns}, function(v)
    BringIns=v
    spawn(
                    function()
                        while wait() and BringIns do
                            if BringIns and BringInsValid and BringInsValidQ then
                                local x = GetInstantList()
                                for k, v in pairs(x) do
                                    if IsInstantValid(v.Name) and GetCurrenItem("Ticket") > 0 then
                                        local x = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position
                                        v.Platform.CFrame =
                                            CFrame.new(
                                            x.X,
                                            x.Y - 7,
                                            x.Z,
                                            2.11000443e-05,
                                            0.0596015155,
                                            0.998222232,
                                            -1,
                                            2.11000443e-05,
                                            1.9878149e-05,
                                            -1.9878149e-05,
                                            -0.998222232,
                                            0.0596014857
                                        )
                                        break
                                    else
                                        v.Platform.CFrame = ks[v.Name]
                                    end
                                end
                            else
                                for k, v in pairs(GetInstantList()) do
                                    v.Platform.CFrame = ks[v.Name]
                                end
                            end
                        end
                        --if not BringIns then
                        for k, v in pairs(GetInstantList()) do
                            -- print("Bring back")
                            v.Platform.CFrame = ks[v.Name]
                        end
                        --end
                    end
                )
end)
-- NaziNuclearToggle = Section11.CreateToggle({Title = 'Disable Game Render (Huge FPS Boost)', Desc = nil, Default = ToggleBoostFPS}, function(v)
--     game:GetService("RunService"):Set3dRenderingEnabled(not v)
-- end)
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local WindowFocusReleasedFunction = function()
    if getgenv().BoostedFPS then
        RunService:Set3dRenderingEnabled(false)
    end
    return
end
local WindowFocusedFunction = function()
    if getgenv().BoostedFPS then
        RunService:Set3dRenderingEnabled(true)
    end
    return
end
function Initialize()
    UserInputService.WindowFocusReleased:Connect(WindowFocusReleasedFunction)
    UserInputService.WindowFocused:Connect(WindowFocusedFunction)
    return
end
Initialize()
Section11.CreateToggle({Title = 'Boost FPS', Default = ToggleBoostFPS}, function(v)
    ToggleBoostFPS=v
    getgenv().toggleboostfps = v
    spawn(function()
        if v then
            if not getgenv().BoostedFPS then
                getgenv().BoostedFPS = true
                game:GetService("RunService"):Set3dRenderingEnabled(true)
                local Lighting = game:GetService("Lighting")
                local Terrain = workspace:FindFirstChildOfClass("Terrain")
                sethiddenproperty(game.Lighting, "Technology", 0)
                settings().Rendering.QualityLevel = 1
                pcall(function()
                    Terrain.WaterWaveSize = 0
                    Terrain.WaterWaveSpeed = 0
                    Terrain.WaterReflectance = 0
                    Terrain.WaterTransparency = 0
                end)
                for i, v in pairs(Lighting:GetDescendants()) do
                    if v:IsA("BlurEffect")
                    or v:IsA("SunRaysEffect")
                    or v:IsA("BloomEffect")
                    or v:IsA("DepthOfFieldEffect") then
                        v.Enabled = false
                    end
                end
                wait(1)
                for i, v in pairs(workspace:GetDescendants()) do
                    if v:IsA("Part")
                    or v:IsA("SpawnLocation")
                    or v:IsA("WedgePart")
                    or v:IsA("Terrain")
                    or v:IsA("UnionOperation")
                    or v:IsA("CornerWedgePart")
                    or v:IsA("TrussPart") then
                        v.Material = "Plastic"
                        v.Reflectance = 0
                    elseif v:IsA("MeshPart") then
                        v.Material = "Plastic"
                        v.Reflectance = 0
                        v.TextureID = ""
                    elseif v.ClassName == "Decal"
                    or v.ClassName == "Texture" then
                        v.Transparency = 1
                    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                        v.Lifetime = NumberRange.new(0)
                    elseif v:IsA("Explosion") then
                        v.BlastPressure = 1
                        v.BlastRadius = 1
                    end
                end
            end
        end
    end)
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Buy Ant Pass', Desc = nil, Default = BuyAnt}, function(v)
    BuyAnt=v
    spawn(
                    function()
                        while wait(.5) and BuyAnt do
                            if BuyAnt then
                                if GetCurrenItem("AntPass") == 0 and GetCurrenItem("Ticket") >= 10 then
                                    game.ReplicatedStorage.Events.ToyEvent:FireServer("Ant Pass Dispenser")
                                end
                            end
                        end
                    end
                )
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Plant Magic Bean', Desc = nil, Default = PlantMagic}, function(v)
    PlantMagic=v
    spawn(
                    function()
                        while wait(.5) and PlantMagic do
                            if PlantMagic then
                                game.ReplicatedStorage.Events.PlayerActivesCommand:FireServer({["Name"] = "Magic Bean"})
                            end
                        end
                    end
                )
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Leaves', Desc = nil, Default = Leaf}, function(v)
    Leaf=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Equip Mask', Desc = nil, Default = EquipMaskBy}, function(v)
    EquipAttack=v
    EquipMaskBy=v
end)
--REMOVE

NaziNuclearToggle = Section11.CreateToggle({Title = 'Eye All Sprout', Desc = nil, Default = Settings.Eye}, function(v)
   Settings.Eye=v
end)
spawn(function() 
    while wait() do 
        if Settings.Eye then 
            EyeAllSprout()
        end
    end
end)
TodoList = {
    ['Join DDD'] = false,
    ['Sleep with your best friend mom'] = false,
    ['Joe biden'] = false,
    ['Sea Hub auto farm no work :sob:'] = false,
}
Section11.CreateDropdown({Title = 'Auto Use Item', List = FarmBuffList, Search = false, Selected = true, Default = nil}, function(i, v)
    if i and v then 
        FarmBuffList[i]=v

    end
end)
AutoBoost=true
Section11.CreateDropdown({Title = 'Auto Use Field Boost', List = TFListFieldBoost, Search = false, Selected = true, Default = nil}, function(i, v)
    if i and v then 
        TFListFieldBoost[i]=v
    end
end)
spawn(
                    function()
                        while true and wait(3) do
                            --print(IsAnyBoost())
                            if AutoBoost then
                                
                                for k, v in pairs(ListFieldBoost) do
                                    if TFListFieldBoost[v] and not (AutoBoostOnly and IsAnyBoost()) and AutoBoost then
                                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                                        Event:FireServer(v)
                                        wait(3)
                                    end
                                end
                            end
                        end
                    end
                )

                NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Puffroom', Desc = "Auto Farm Puffroom (Auto Farm must been enabled)", Default = Settings.Pushroom}, function(v)
                    Settings.Pushroom=v
                    
                    --game:GetService("Workspace").Happenings.Puffshrooms.PuffballMushroomModelCommon
                end)
                local puffpart = Instance.new("Part")
                puffpart.Anchored=true
                puffpart.CanCollide=false
                puffpart.Transparency=1
                puffpart.Name="Sea Hub Winning Field"
                puffpart.CFrame=CFrame.new(10000,1000,1000)
                local Range = Instance.new("IntValue",puffpart)
                Range.Name="Range"
                Range.Value=20
                if game.Workspace.FlowerZones:FindFirstChild("Sea Hub Winning Field") then 
                    game.Workspace.FlowerZones:FindFirstChild("Sea Hub Winning Field"):Destroy()
                end
                puffpart.Parent=game.Workspace.FlowerZones
                spawn(function() 
                    while wait() do 
                        if Settings.Pushroom then 
                            local v = GetNearestPushroom()
                            if v then 
                                if v:FindFirstChild("Puffball Stem") and Settings.Pushroom then 
                                   -- ValidTB["Puff"]=true
                                    repeat wait() 
                                        if v:FindFirstChild("Puffball Stem") and plr.Character:FindFirstChild("HumanoidRootPart") then 
                                            --local nr = GetNerestFieldByObject(v["Puffball Stem"])
                                            puffpart.CFrame=v["Puffball Stem"].CFrame
                                            FarmFieldList["Pushroom"]="Sea Hub Winning Field"
                                        end
                                         until not v.Parent or not v:FindFirstChild("Puffball Stem") or not Settings.Pushroom
                                       
                                         if Settings.Pushroom then
                                         wait(3)
                                         end
                                        -- ValidTB["Puff"]=false
                                         --noclip=false
                                end
                            end
                        end
                        if not Settings.Pushroom then 
                        FarmFieldList["Pushroom"] = FarmFieldList[LevelFarm[LevelFarmVK["Pushroom"]-1]]
                        else
                            if (#game:GetService("Workspace").Happenings.Puffshrooms:GetChildren())==0 then 
                                FarmFieldList["Pushroom"] = FarmFieldList[LevelFarm[LevelFarmVK["Pushroom"]-1]]
                            end
                        end
                    end
                end)
                NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Snowflake', Desc = nil, Default = Settings.SnowFlake}, function(v)
                    Settings.SnowFlake=v
                end)
-- Section11.CreateButton({Title = 'Get Full Item + Slot'}, function()
--     game:GetService("ReplicatedStorage").Events.SelectNPCOption:FireServer("ChooseWhiteTeam")
-- end)
Section11 = Page1.CreateSection('Checking Stuff')
Section11.CreateButton({Title = 'Check Vicious Bee'}, function()

    if game.workspace.Particles:FindFirstChild("Vicious") then 
        Library_Function.CreateNoti({
            Title = nil,
            Desc = 'Found Vicious Bee',
            ShowTime = 5,
        })
    else
        Library_Function.CreateNoti({
            Title = nil,
            Desc = 'Not Found Vicious Bee',
            ShowTime = 5,
        })
    end
end)
Section11.CreateButton({Title = 'Check Windy Bee'}, function()
    if game.workspace.NPCBees:FindFirstChild("Windy") then 
        Library_Function.CreateNoti({
            Title = nil,
            Desc = 'Found Windy Bee',
            ShowTime = 5,
        })
    else
        Library_Function.CreateNoti({
            Title = nil,
            Desc = 'Not Found Windy Bee',
            ShowTime = 5,
        })
    end
end)
Section11.CreateButton({Title = 'Check CSKC'}, function()
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
            local data = StatCache.Get()
            local CSKC = tostring(data.StartOfDayTotals.Totals.CSKC)
            Library_Function.CreateNoti({
                Title = nil,
                Desc = 'Your CSKC: '..CSKC,
                ShowTime = 5,
            })
                
end)
Section11.CreateButton({Title = 'Check Shadow Ban'}, function()
    local StatCache = require(game.ReplicatedStorage.ClientStatCache)
    local data = StatCache.Get()
   -- local CSKC = tostring(data.StartOfDayTotals.Totals.CSKC)
    
if(data.Eggs.CheaterFlag==nil) then 
    Library_Function.CreateNoti({
        Title = nil,
        Desc = 'Your account is safe',
        ShowTime = 5,
    })
else
    Library_Function.CreateNoti({
        Title = nil,
        Desc = 'Your account has been shadow banned',
        ShowTime = 5,
    })
end
end)


Page1 = Main.CreatePage({Page_Name = 'Auto Kill', Page_Title = 'Extras'})
Section11 = Page1.CreateSection('Main')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Coconut Crab', Desc = nil, Default = KillCrab}, function(v)
    KillCrab=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Stump Snail', Desc = nil, Default = Snail}, function(v)
    Snail=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Vicious Bee', Desc = nil, Default = KillVici}, function(v)
    KillVici=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Windy Bee', Desc = nil, Default = KillWindy}, function(v)
    KillWindy=v
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill King Beetle', Desc = nil, Default = AutoKing}, function(v)
    AutoKing=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Tunnel Bear', Desc = nil, Default = AutoTunnel}, function(v)
    AutoTunnel=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Commando Chick', Desc = nil, Default = AutoComando}, function(v)
    AutoComando=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Mondo Chick', Desc = nil, Default = AutoMondo}, function(v)
    AutoMondo=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Kill Snow Bear', Desc = nil, Default =  Settings.SnowBear}, function(v)
    Settings.SnowBear=v
end)
Section11 = Page1.CreateSection('Stuff')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Hop Server', Desc = nil, Default = Settings.HopServer}, function(v)
    Settings.HopServer=v
end)
spawn(function() 
    while wait() do 
        if Settings.HopServer then 
            
            local a = false
            if KillVici then 
                if game.workspace.Particles:FindFirstChild("Vicious") then 
                    a=true
                end
            end
            if KillWindy then 
                if game.workspace.NPCBees:FindFirstChild("Windy") then 
                    a=true
                end
            end
            if a==false then 
                Hop()
            end
        end
    end
end)
Page1 = Main.CreatePage({Page_Name = 'Extras 2', Page_Title = 'Extras 2'})
Section11 = Page1.CreateSection('Auto Feed')
local Item2Feed = "Treat"
local FeedAmout = 1
local AutoFeed = false
Section11.CreateBox({Title = 'X', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    x = tonumber(v)
end)
Section11.CreateBox({Title = 'Y', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    y = tonumber(v)
end)
Section11.CreateBox({Title = 'Amount', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    FeedAmout = tonumber(v)
end)
Section11.CreateDropdown({Title = 'Sellect Item', List = {
    "Blueberry",
    "Strawberry",
    "Pineapple",
    "SunflowerSeed",
    "Bitterberry",
    "Neonberry",
    "MoonCharm",
    "AtomicTreat",
    "Treat"
}, Search = true, Selected = false, Default = nil}, function(v)
     if not v then
                    return
                end
                Item2Feed = tostring(v)
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Feed', Desc = nil, Default = false}, function(v)
    AutoFeed = v
    spawn(
        function()
            while AutoFeed and wait() do
                if AutoFeed then
                    local DoEvent = game.ReplicatedStorage.Events.ConstructHiveCellFromEgg
                    DoEvent:InvokeServer(x, y, Item2Feed, FeedAmout)
                    wait()
                    if UntilGif then
                        local k = game.Players.LocalPlayer.PlayerGui.ScreenGui.BeePopUp.TypeName
                        if string.match(k.Text, "Gif") then
                            AutoFeed=false
                        end
                        k.Text = ""
                    end
                end
            end
        end
    )
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Stop When Gifted', Desc = nil, Default = false}, function(v)
    UntilGif=v
end)
local JellyT =""
local x = 0
local y = 0
Section11 = Page1.CreateSection('Auto Gifted Basic Bee')
Section11.CreateBox({Title = 'X', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    x = tonumber(v)
end)
Section11.CreateBox({Title = 'Y', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    y = tonumber(v)
end)
Section11.CreateDropdown({Title = 'Sellect Jelly', List = listjelly, Search = true, Selected = false, Default = nil}, function(v)
    if not v then
        return
    end
    JellyT = tostring(v)
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Gifted Basic', Desc = nil, Default = false}, function(v)
    GiftBasic=v

end)
local hive
spawn(function() 
    while wait() do 
        if GiftBasic then 
            if not hive then 
                for k,v in pairs(game.Workspace.Honeycombs:GetChildren()) do 
                    if v.Owner.Value==game.Players.LocalPlayer then 
                        hive=v
                        break
                    end
                end
            end
            local HiveC = "C"..tostring(x)..","..tostring(y)
            if hive and hive.Cells:FindFirstChild(HiveC) then 
                if not (hive.Cells[HiveC].CellType.Value=="BasicBee" and hive.Cells[HiveC]:FindFirstChild("GiftedCell")) then
                    game.ReplicatedStorage.Events.ConstructHiveCellFromEgg:InvokeServer(x,y,JellyT,1)
            game.ReplicatedStorage.Events.ConstructHiveCellFromEgg:InvokeServer(x,y,"Basic",1)
                end
            end
            
        end
    end

    _G.OnB = true -- Nếu muốn dừng thì set = false
local x = 3 -- Nằm ở ô nào trong hàng ngang
local y = 10 -- Nằm ở ô nào trong hàng dọc
local Jelly = "RoyalJelly" -- Có thể đổi thành Event bee jelly nếu có
local k = 0
function OpenThing(x,y,z)
    game.ReplicatedStorage.Events.ConstructHiveCellFromEgg:InvokeServer(x,y,z,1)
end
local t = game.Players.LocalPlayer.PlayerGui
while _G.OnB do
OpenThing(x,y,Jelly)
local k = t:WaitForChild("ScreenGui"):WaitForChild("BeePopUp")
local s = k.TypeName.Text;
OpenThing(x,y,"Basic",1)

if k.TypeName.Text == s then _G.OnB = false end
if string.match(k.TypeName.Text,"Gifted Basic") then _G.OnB = false end
end
end)
Section11 = Page1.CreateSection('Auto Donate')

Section11.CreateDropdown({Title = 'Sellect Item', List = ItemDonateList, Search = true, Selected = false, Default = nil}, function(v)
    if not v then
        return
    end
    DonateItem = tostring(v)
end)
Section11.CreateBox({Title = 'Amount', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    DonateAmount = tonumber(v)
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Donate', Desc = nil, Default = false}, function(v)
    AutoDonate = v
end)


Page1 = Main.CreatePage({Page_Name = 'Auto Ant', Page_Title = 'Auto Ant'})
Section11 = Page1.CreateSection('Main')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Ant', Desc = nil, Default = AutoFAnt}, function(v)
    AutoFAnt=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Equip Sparkel Staff', Desc = nil, Default = Settings.AutoEquipSpark}, function(v)
    AutoEquipSpark=v
end)
Page1 = Main.CreatePage({Page_Name = 'Auto Stick Bug', Page_Title = 'Auto Stick Bug'})
Section11 = Page1.CreateSection('Main')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Stick Bug', Desc = "Auto Stick Bug (Must Enable with Godmode and Auto Farm)", Default = Settings.StickBug}, function(v)
    Settings.StickBug=v
end)
Section11 = Page1.CreateSection('Settings')

NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Farm Totem', Desc = nil, Default =  Settings.FarmTotem}, function(v)
    Settings.FarmTotem=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Start Stick Bug', Desc = nil, Default =  Settings.AutoStart}, function(v)
    Settings.AutoStart=v
end)
local Sel = -1;
Page1 = Main.CreatePage({Page_Name = 'Auto Craft', Page_Title = 'Auto Craft'})
Section11 = Page1.CreateSection('Main')
local CraftItem = ""
local CraftAmmount = 0
local AutoCraft = false
local ListCraft = { "RedExtract", "BlueExtract", "Enzymes", "Oil", "Glue", "TropicalDrink", "Gumdrops", "MoonCharm", "Glitter", "StarJelly", "PurplePotion", "SuperSmoothie" };
local tb = {}
local tbk = {}

local todolist = Section11.CreateDropdown({Title = 'Todo List', List = tbk, Search = false, Selected = false, Default = nil}, function(v,k)
    Sel=k
end)
Section11.CreateDropdown({Title = 'Sellect Item To Craft', List = ListCraft, Search = true, Selected = false, Default = nil}, function(v)
    CraftItem=v
end)
Section11.CreateBox({Title = 'Craft Amount', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then return end
    CraftAmmount=tonumber(v)
end)
Section11.CreateButton({Title = 'Add to list'}, function()
    if CraftAmmount and CraftAmmount>0 and CraftItem~="" and CraftItem then 
        table.insert(tb,{
            Item=CraftItem,
            Amount=CraftAmmount
        })
        table.insert(tbk,"x"..CraftAmmount.." "..CraftItem)
        local list = {}
        for k,v in pairs(tb) do 
         --   table.insert(list,"x"..v.Amount.." "..v.Item)
        end
        todolist.rf()
    end
    
   -- todolist:GetNewList(list)
end)
Section11.CreateButton({Title = 'Remove Sellected From List'}, function()
   table.remove(tbk,Sel)
   table.remove(tb,Sel)

   todolist.rf()
end)


NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Craft', Desc = nil, Default = AutoCraft}, function(v)
    if v then 
        game:GetService("ReplicatedStorage").Events.BlenderCommand:InvokeServer("StopOrder")
    end
    AutoCraft = v
end)
local lb = Section11.CreateLabel({Title = "Crafting Status:"})


spawn(function() 
    while wait(1) do
      --  Update()
     -- require(game.ReplicatedStorage.ClientStatCache):Get("BlenderState")
        local t,b = GetCraftingStatus()
        if t ==0 then 
            lb.SetText("Blender Status: Crafting nil")
            if AutoCraft then
                if #tb>0 then 
                  --  print(tb[1].Item,tb[1].Amount)
-- Script generated by TurtleSpy, made by Intrer#0421

game:GetService("ReplicatedStorage").Events.BlenderCommand:InvokeServer("PlaceOrder",{["Recipe"] = tb[1].Item,["Count"] = tb[1].Amount})                 
end
                end 
        end
        if t==2 then 
            lb.SetText("Blender Status: Crafting x"..b.Count.." "..b.Recipe)
        end
        if t==1 then 
            lb.SetText("Blender Status: Crafted x"..b.Count.." "..b.Recipe)
            if AutoCraft then 
                wait(.5)
                game:GetService("ReplicatedStorage").Events.BlenderCommand:InvokeServer("StopOrder")
                wait(.5)
                if #tb >0 then 
                    
                    table.remove(tb,1)
                    table.remove(tbk,1)

                end
            end
        end
    end
end)
Page1 = Main.CreatePage({Page_Name = 'Web Hook', Page_Title = 'Web Hook'})
Section11 = Page1.CreateSection('Main')
Section11.CreateBox({Title = 'Web Hook Url', Placeholder = 'Type here', Number_Only = false, Default = nil}, function(v)
    if not v then
        return
    end
    WebHookUrl = v
end)
Section11.CreateBox({Title = 'Web Hook Time', Placeholder = 'Type here', Number_Only = true, Default = nil}, function(v)
    if not v then
        return
    end
    WebHookTime = tonumber(v)
end)
Section11.CreateButton({Title = 'Test Web Hook'}, function()
    SendHook(WebHookUrl, HoneyPolen, TFItemHook)
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Web Hook', Desc = nil, Default = false}, function(v)
    WebHook = v
end)
Section11 = Page1.CreateSection('Settings')

Section11.CreateDropdown({Title = 'Core Stat Notification', List = HoneyPolen, Search = true, Selected = true, Default = nil}, function(i,v)
 if i and v then 
    HoneyPolen[i]=v
end
end)
Section11.CreateDropdown({Title = 'Item Notification', List = TFItemHook, Search = true, Selected = true, Default = nil}, function(i,v)
    if i and v then 
    TFItemHook[i]=v
    end
end)
Page1 = Main.CreatePage({Page_Name = 'Teleport', Page_Title = 'Teleport'})
Section11 = Page1.CreateSection('Main')

Section11.CreateDropdown({Title = 'TP Field', List = GetListField(), Search = true, Selected = false, Default = nil}, function(v)
    if v then 
       -- game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = GetFieldByName(v).CFrame
       tpT(GetFieldByName(v).CFrame,100)
    end
end)
Section11.CreateDropdown({Title = 'TP NPC', List = GetListNpc(), Search = true, Selected = false, Default = nil}, function(v)
    if v then 
        local cf = GetNpcByName(v).Platform.Position
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(cf.X, cf.Y + 3, cf.Z)
    end
end)
Section11.CreateDropdown({Title = 'TP Shop', List = ShopList, Search = true, Selected = false, Default = nil}, function(v)
    if v then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game.Workspace.Shops[v].Floor.Value.CFrame*CFrame.new(0,5,0)

    end
end)
local ListIns = GetInstantList()

Section11.CreateDropdown({Title = 'TP Instant Converter', List =  ObjListTostring(ListIns), Search = true, Selected = false, Default = nil}, function(v)
    if v then 
        for k, s in pairs(ListIns) do
            if s.Name == v then
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                    CFrame.new(s.Platform.Position.X, s.Platform.Position.Y + 3, s.Platform.Position.Z)
            end
        end
    end
end)
local ListMemo = GetMemoList()
Section11.CreateDropdown({Title = 'TP Memory Match', List = ObjListTostring(ListMemo), Search = true, Selected = false, Default = nil}, function(v)
    if v then 
        for k, s in pairs(ListMemo) do
            if s.Name == v then
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                    CFrame.new(s.Platform.Position.X, s.Platform.Position.Y + 3, s.Platform.Position.Z)
            end
        end
    end
end)
Section11.CreateButton({Title = 'Tp To Hive'}, function()
    local sp = game:GetService("Players").LocalPlayer.SpawnPos.Value
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = sp
end)
Page1 = Main.CreatePage({Page_Name = 'Local Player', Page_Title = 'Local Player'})
Section11 = Page1.CreateSection('Humanoid Settings')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Change WalkSpeed', Desc = nil, Default = false}, function(v)
    Speed = v
end)

Section11.CreateSlider({Title = 'WalkSpeed', Min = 16, Max = 200, Default = 70, Precise = false}, function(v)
    -- print(v)
    if v then 
        SpeedTy = tonumber(v)
    end
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Change Jump Power', Desc = nil, Default = false}, function(v)
    Jump = v
end)

Section11.CreateSlider({Title = 'JumpPower', Min = 16, Max = 400, Default = 70, Precise = false}, function(v)
    -- print(v)
    if v then 
        JumpTy = tonumber(v)
    end
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Invisible', Desc = nil, Default = nil}, function(v)
    
    if v==nil then return end
    Invisible = v
    while Invisible do 
        wait()
        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:FindFirstChild("LowerTorso") then

        local old = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,-1600,0)
        local Toroso = game.Players.LocalPlayer.Character.LowerTorso
        Toroso:Destroy()
        
        --wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=old
        end

    end
    if not Invisible and Invisible~=nil then 
       
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
       
    
    end
end)

NaziNuclearToggle = Section11.CreateToggle({Title = 'Godmode', Desc = nil, Default = nil}, function(v)
    if v==nil then return end
    if v then
      
        God()
    else
      
        UnGod()
    end
end)
Section11 = Page1.CreateSection('Player')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Rejoin', Desc = nil, Default = KickWhen}, function(v)
    KickWhen=v
end)
NaziNuclearToggle = Section11.CreateToggle({Title = 'Change Glider', Desc = nil, Default = ChangeGlider}, function(v)
    ChangeGlider=v
end)
Section11.CreateDropdown({Title = 'Sellect Glider', List = {"Parachute","Glider","DebugGlider"}, Search = false, Selected = false, Default = nil}, function(v)
    Glider=v
end)
Page1 = Main.CreatePage({Page_Name = 'Settings', Page_Title = 'Settings'})
Section11 = Page1.CreateSection('Auto Use Field Boost Settings')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Only Enable When There Is No Boost', Desc = nil, Default = AutoBoostOnly}, function(v)
    AutoBoostOnly=v
end)

Section11 = Page1.CreateSection('Auto Kill Mob Settings')
Section11.CreateDropdown({Title = 'Mob List', List = TimerKiet, Search = false, Selected = true, Default = nil}, function(k,v)
    if k and v then
        TimerKiet[k]=v
    end
end)

Section11 = Page1.CreateSection('Auto Farm Settings')
Section11.CreateDropdown({Title = 'Collect Token Type', List = {"Optimize", "Normal"}, Search = true, Selected = false, Default = nil}, function(v)
    if not v then return end
    if v== "Optimize" then 
        CollectType=v
    elseif v=="Normal" then CollectType=v
    end
end)
Section11.CreateDropdown({Title = 'Prioritize Token', List = PrioritizeListTF, Search = true, Selected = true, Default = nil}, function(k,v)

    if not k or not v then return end
    PrioritizeListTF[k]=v
end)

Section11.CreateSlider({Title = 'Instant Tp Distance', Min = 1, Max = 10, Default = 3, Precise = false}, function(v)
    -- print(v)
    if not v then return end
    NearTPMag=tonumber(v)
end)
Section11 = Page1.CreateSection('Auto Equip Mask Settings')
Section11.CreateDropdown({Title = 'White Mask', List = {"Gummy Mask", "Demon Mask", "Diamond Mask", "Honey Mask", "Bubble Mask", "Fire Mask"}, Search = true, Selected = false, Default =  MaskF["White"]}, function(v)
    if not v then
        return
    end
    MaskF["White"] = v
end)
Section11.CreateDropdown({Title = 'Red Mask', List ={"Gummy Mask", "Demon Mask", "Diamond Mask", "Honey Mask", "Bubble Mask", "Fire Mask"}, Search = true, Selected = false, Default = MaskF["Red"]}, function(v)
    if not v then
        return
    end
    MaskF["Red"] = v
end)
Section11.CreateDropdown({Title = 'Blue Mask', List = {"Gummy Mask", "Demon Mask", "Diamond Mask", "Honey Mask", "Bubble Mask", "Fire Mask"}, Search = true, Selected = false, Default = MaskF["Blue"]}, function(v)
    if not v then return end
    MaskF["Blue"] = v
end)
Section11.CreateDropdown({Title = 'Attack Mask', List = {"Demon Mask", "Fire Mask"}, Search = true, Selected = false, Default = AttackMask}, function(v)
    if not v then return end
    AttackMask=v
end)
Section11 = Page1.CreateSection('Script Settings')
NaziNuclearToggle = Section11.CreateToggle({Title = 'Auto Save Settings', Desc = nil, Default = AutoSaveSettings}, function(v)
    AutoSaveSettings=v
    if not v then
        SaveSettings()
    end
end)
local GUISettingSection = Section11

TimerLabel = GUISettingSection.CreateLabel({Title = "Timer"})
spawn(function()
	while wait(.25) do
		local PlayTime = game.workspace.DistributedGameTime
		local Sec = PlayTime % 60
		local Min = math.floor(PlayTime / 60 % 60)
		local Hour = math.floor(PlayTime / 3600)
		TimerLabel.SetText(string.format('Timer: %.0fh %.0fm %.0fs', Hour, Min, Sec))
	end
end)
GUISettingSection.CreateBind({Title = 'Toggle GUI', Key = Enum.KeyCode.RightControl}, function()
	Library_Function.ToggledUI()
end)
if getgenv().Key == nil then
    GUISettingSection.CreateButton({Title = 'Destroy GUI'}, function()
	    Library_Function.Destroy()
    end)
end
-- local CustomColorUI = Library.CreateCustomColor()

-- local CCMain = CustomColorUI.CreateSection("Main")
-- CCMain.CreateColorPicker({Title = "Border Color", Type = "maingui", Default = Color3.fromRGB(131, 181, 255)}, function(v)
-- end)
-- CCMain.CreateColorPicker({Title = "Click Effect Color", Type = "buttoneffect", Default = Color3.fromRGB(230, 230, 230)}, function(v)
-- end)
-- CCMain.CreateBox({Title = 'Logo', Placeholder = 'URL Here (PNG only), Recommended 128x128', Number = false, Default = nil}, function(x)
--     for i, v in pairs(getgenv().Occho) do
--         if v.Name == "Ruafimg" then
--             v.Image = Library_Function.GetIMG(x)
--             print(v.Image)
--         end
--     end
-- end)

-- local CCSearch = CustomColorUI.CreateSection("Search")
-- CCSearch.CreateColorPicker({Title = "Search Icon Color", Type = "SearchIcon", Default = Color3.fromRGB(255, 255, 255)}, function(v)
--     getgenv().UIColor["Search Icon"] = v
-- end)
-- CCSearch.CreateColorPicker({Title = "Search Icon Highlight Color", Type = nil, Default = Color3.fromRGB(131, 181, 255)}, function(v)
--     getgenv().UIColor["Search Icon Highlight"] = v
-- end)

-- local CCText = CustomColorUI.CreateSection("Text")
-- CCText.CreateColorPicker({Title = "GUI Text Color", Type = "main text color", Default = Color3.fromRGB(230, 230, 230)}, function(v)
--     getgenv().UIColor["GUI Text Color"] = v
-- end)
-- CCText.CreateColorPicker({Title = "Text Color", Type = "text color", Default = Color3.fromRGB(230, 230, 230)}, function(v)
--     getgenv().UIColor["Text Color"] = v
-- end)
-- CCText.CreateColorPicker({Title = "Placeholder Text Color", Type = "placeholder text color", Default = Color3.fromRGB(178, 178, 178)}, function(v)
--     getgenv().UIColor["Placeholder Text Color"] = v
-- end)
spawn(function() 
    while wait() do 
        if Settings.AutoStart then 
        -- Script generated by TurtleSpy, made by Intrer#0421

            game.ReplicatedStorage.Events.SelectNPCOption:FireServer("StartFreeStickBugEvent")
            --game.ReplicatedStorage.Events.SelectNPCOption:FireServer("StartPaidStickBugEvent")
        end
        if Settings.StickBug and CheckFarm("Stick") then 
            for k,v in pairs(game.Workspace.Monsters:GetChildren()) do 
                if string.match(v.Name,"Stick Bug") and CheckFarm("Stick") then 
                    if Settings.StickBug and v.Parent and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health>0 then 
                        ValidTB["StickBug"] = true
                        StopFarmList["Stick"]=true
                        noclip=true
                       repeat wait()
                        if plr.Character:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health>0 and CheckFarm("Stick") then 
                            local txt = plr.PlayerGui.ScreenGui.ChallengeInfo.SBChallengeInfo.TargetValue.Text
                            if Settings.FarmTotem and game.Workspace.Particles:FindFirstChild("StickBugTotem") then
                                ValidTB["StickBug"]=false
                                noclip=false
                                wait(.1)
                                if game.Workspace.Particles:FindFirstChild("StickBugTotem") then 
                                    local nr = GetNerestFieldByObject(game.Workspace.Particles.StickBugTotem.Part)
                                    FarmFieldList["StickBug"] = nr
                                end
                            else
                                if v.Immune.Value==true then
                                    ValidTB["StickBug"]=false
                                    noclip=false
                                    wait(.1)
                                  
                                    FarmFieldList["StickBug"] = GetFieldByText(txt)
    
                                else
                                    ValidTB["StickBug"]=true
                                    noclip=true
                                    local constick=v
                                    for k,v in pairs(game.Workspace.Collectibles:GetChildren()) do 
                                        local tf = Vector3.new(v.Position.X,0,v.Position.Z)
                                        local tf2 = Vector3.new(plr.Character.HumanoidRootPart.Position.X,0,plr.Character.HumanoidRootPart.Position.Z)
                                        if constick.Parent and IsToken(v) and (tf-tf2).magnitude<20 and not IsTokenBlacklist(v) then 
                                            plr.Character.HumanoidRootPart.CFrame=v.CFrame
                                            wait(.2)
                                        end
                                    end
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=v.HumanoidRootPart.CFrame
    
                                end
                            end
                            
                        end
                        until not (v.Parent and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health>0 and Settings.StickBug) or not  CheckFarm("Stick")
                        ValidTB["StickBug"] = false
                        StopFarmList["Stick"]=false
                        noclip=false
                    end
                end
            end
        end
        if Settings.StickBug and plr.PlayerGui.ScreenGui.ChallengeInfo.Visible==true then 
        else
            FarmFieldList["StickBug"] = FarmFieldList[LevelFarm[LevelFarmVK["StickBug"]-1]]
            StopFarmList["Stick"]=false
        end
    end
end)


spawn(
            function()
                while wait() do
                    if AutoDonate then
                        game.ReplicatedStorage.Events.WindShrineDonation:InvokeServer(DonateItem, DonateAmount)
                        --wait(2)
                        game.ReplicatedStorage.Events.WindShrineTrigger:FireServer()
                        --wait(2)
                        for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
                            if IsToken(v) then
                                local win = game:GetService("Workspace").NPCs["Wind Shrine"].Platform
                                if (win.Position - v.Position).magnitude < 30 then
                                    Valid2 = false
                                    wait(.5)
                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                        v.CFrame
                                end
                            end
                        end
                        wait(.5)
                        Valid2 = true
                    end
                end
            end
        )
        spawn(function() 
            while wait() do 
                if AutoDodge and Farm and ValidFarm() then 
                    for _,v in pairs(game.Workspace.Monsters:GetChildren()) do 
                        if v:FindFirstChild("Head") and v:FindFirstChild("Humanoid") and v.Humanoid.Health >0 and (game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position-v.Head.Position).magnitude<30 then 
                            ValidDodg = false
                            noclip=true
                            repeat wait()
                                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = v.Head.CFrame * CFrame.new(25,0,0)    
                            
                            until not v or not v.Parent or not v:FindFirstChild("Humanoid") or v.Humanoid.Health==0  or not v:FindFirstChild("Head") or not ((game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position-v.Head.Position).magnitude<30) or not AutoDodge or not Farm
                            noclip=false
                            ValidDodg=true
                        end
                    end
                end
            end
        end)
        spawn(
            function()
                while wait() do
                    if WebHook then
                        local s, e =
                            pcall(
                            function()
                                SendHook(WebHookUrl, HoneyPolen, TFItemHook)
                            end
                        )
                        --print(e)

                        local tic = tick()
                        repeat
                            wait()
                        until (tick() - tic) > WebHookTime or not WebHook
                    end
                end
            end
        )
        spawn(
            function()
                while (wait(2)) do
                    for k, v in pairs(ListBuff) do
                        if FarmBuffList[v] == true then
                            if not IsBuffOn(v) then
                                local Event = game:GetService("ReplicatedStorage").Events.PlayerActivesCommand

                                local A = {
                                    ["Name"] = v
                                }
                                Event:FireServer(A)
                            end
                        end
                    end
                    
                    
                end
            end
        )
        
        -- spawn(
        --     function()
        --         while wait(3) do
        --             --print(IsAnyBoost())
        --             if AutoBoost then
        --                 for k, v in pairs(ListFieldBoost) do

        --                     if TFListFieldBoost[v] and not(AutoBoostOnly and IsAnyBoost()) and AutoBoost then
        --                         local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
        --                         Event:FireServer(v)
        --                         wait(3)
        --                     end
        --                 end
        --             end
        --         end
        --     end
        -- )
        -- spawn(
        --     function()
        --         while wait() do
        --             if BringIns and BringInsValid and BringInsValidQ then
        --                 local x = GetInstantList()
        --                 for k, v in pairs(x) do
        --                     if IsInstantValid(v.Name) and GetCurrenItem("Ticket") > 0 then
        --                         local x = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        --                         v.Platform.CFrame =
        --                             CFrame.new(
        --                             x.X,
        --                             x.Y - 7,
        --                             x.Z,
        --                             2.11000443e-05,
        --                             0.0596015155,
        --                             0.998222232,
        --                             -1,
        --                             2.11000443e-05,
        --                             1.9878149e-05,
        --                             -1.9878149e-05,
        --                             -0.998222232,
        --                             0.0596014857
        --                         )
        --                         break
        --                     else
        --                         v.Platform.CFrame = ks[v.Name]
        --                     end
        --                 end
        --             else
        --                 for k, v in pairs(GetInstantList()) do
        --                     v.Platform.CFrame = ks[v.Name]
        --                 end
        --             end
        --         end
        --     end
        -- )
        spawn(
            function()
                while wait() do
                    if EquipAttack and Killing then
                        EquipAtt()
                    else
                        if EquipMaskBy and ValidEquip then
                            EquipMaskByField()
                        end
                    end
                    local Humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                    if Speed and Humanoid then
                        
                        Humanoid.WalkSpeed = SpeedTy
                    end
                    if Jump and Humanoid then
                      
                        Humanoid.JumpPower = JumpTy
                    end
                end
            end
        )
        function IsInArr(it, arr)
            for k, v in pairs(arr) do
                if v == it then
                    return true
                end
            end
            return false
        end
        spawn(function()
            while wait(1) do 
                if KickWhen then 
                    if game.CoreGui.RobloxPromptGui.promptOverlay:FindFirstChild("ErrorPrompt") then
                        while wait() do
                            game.TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId)
                        end
                    end
                end
            end
        end)
        local Blacklist = {"Gummy Bear", "Ant Challenge Info", "Bubble Bee Man 2", "Stick Bug"}
        spawn(
            function()
                while wait(2) do
                    if AutoQuest and not Selling then
                        for _, v in pairs(game.Workspace.NPCs:GetChildren()) do
                            if v:FindFirstChild("Platform") and v.Platform.AlertPos.AlertGui.ImageLabel.ImageTransparency == 0 and not IsInArr(v.Name, Blacklist) and CheckQuestReq(v.Name) and (function() 
                                if (Settings.IgnoreHoneyBee) then
                            if v.Name=="Honey Bee" then return false end
                            end
                            return true
                        end)() then
                                if true and not Selling then
                                    
                                    if true then
                                        --ValidTB["Quest"] = true
                                        wait(1)
                                        local cf = v.Platform.CFrame
                                        --Tele(CFrame.new(cf.X,cf.Y+3,cf.Z))
                                        local old = v.Platform.CFrame
                                        v.Platform.CanCollide = false
                                        BringInsValidQ = false
                                        local x = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position
                                        v.Platform.CFrame =
                                            CFrame.new(
                                            x.X,
                                            x.Y - 7,
                                            x.Z,
                                            2.11000443e-05,
                                            0.0596015155,
                                            0.998222232,
                                            -1,
                                            2.11000443e-05,
                                            1.9878149e-05,
                                            -1.9878149e-05,
                                            -0.998222232,
                                            0.0596014857
                                        )

                                        wait(.3)
                                        if
                                            string.match(
                                                game.Players.LocalPlayer.PlayerGui.ScreenGui.ActivateButton.TextBox.Text,
                                                "Talk"
                                            )
                                         then
                                            local x = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position
                                            v.Platform.CFrame =
                                            CFrame.new(
                                            x.X,
                                            x.Y - 7,
                                            x.Z,
                                            2.11000443e-05,
                                            0.0596015155,
                                            0.998222232,
                                            -1,
                                            2.11000443e-05,
                                            1.9878149e-05,
                                            -1.9878149e-05,
                                            -0.998222232,
                                            0.0596014857
                                        )
                                            -- for i, v in pairs(
                                            --     getconnections(
                                            --         game.Players.LocalPlayer.PlayerGui.ScreenGui.ActivateButton.MouseButton1Click
                                            --     )
                                            -- ) do
                                            --    -- getrenv().require=getgenv().require
                                            --     v:Fire()
                                            -- end
                                            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, false, nil)
                                        end
                                        wait(.3)
                                        repeat
                                            
                                            wait()
                                           
                                            game:GetService("Players").LocalPlayer.PlayerGui.Camera.Controllers.NPC.IncrementDialogue:Invoke()
                                        until game.Players.LocalPlayer.PlayerGui.ScreenGui.NPC.Visible == false
                                        wait(1)
                                        BringInsValidQ = true
                                        v.Platform.CFrame=old
                                        ValidTB["Quest"] = false
                                    end
                                end
                            end
                        end
                    end
                    if AutoDispenser then
                        -- Script generated by TurtleSpy, made by Intrer#0421
-- Script generated by TurtleSpy, made by Intrer#0421

                        game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer("Beesmas Feast")
                        game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer("Gingerbread House")
                        local A_1 = "Glue Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Wealth Clock"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Strawberry Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Treat Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Free Ant Pass Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Blueberry Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Honey Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                        local A_1 = "Free Royal Jelly Dispenser"
                        local Event = game:GetService("ReplicatedStorage").Events.ToyEvent
                        Event:FireServer(A_1)
                    end
                    if AutoBadge then
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pepper")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Coconut")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Playtime")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Honey")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Quest")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Battle")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Ability")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Goo")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Sunflower")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Dandelion")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Mushroom")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Blue Flower")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Clover")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Spider")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Bamboo")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Strawberry")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pineapple")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pumpkin")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Cactus")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Rose")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pine Tree")
                        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Stump")
                    end
                end
            end
        )
        -- spawn(
        --     function()
        --         while wait(2) and Running do
        --             if AutoGum then
        --                 local A = {
        --                     ["Name"] = "Gumdrops"
        --                 }
        --                 local Event = game:GetService("ReplicatedStorage").Events.PlayerActivesCommand
        --                 Event:FireServer(A)
        --             end
        --         end
        --     end
        -- )
        -- spawn(
        --     function()
        --         while wait() do
        --             if memo then
        --                 for i, v in pairs(
        --                     game.Players.LocalPlayer.PlayerGui.ScreenGui:WaitForChild("MinigameLayer"):GetChildren()
        --                 ) do
        --                     for k, q in pairs(v:WaitForChild("GuiGrid"):GetDescendants()) do
        --                         if q.Name == "ObjContent" or q.Name == "ObjImage" then
        --                             q.Visible = true
        --                         end
        --                     end
        --                 end
        --             end
        --         end
        --     end
        -- )
        -- spawn(
        --     function()
        --         while wait(3) and Running do
        --             if AutoCoco then
        --                 local A = {
        --                     ["Name"] = "Coconut"
        --                 }
        --                 local Event = game:GetService("ReplicatedStorage").Events.PlayerActivesCommand
        --                 Event:FireServer(A)
        --             end
        --         end
        --     end
        -- )
        -- spawn(
        --     function()
        --         while wait() and Running do
        --             if AutoDig then
        --                 Dig()
        --             end
        --         end
        --     end
        -- )
        local RunSp = 0
        spawn(function() 
        while wait() do 
            
            if AutoSprout and Farm and ValidFarm() then
                local Sprout = IsSprout()
                if Sprout ~= nil then
                    local Fieldname = GetNerestFieldByObject(Sprout)
                    if  CheckFieldReq(Fieldname) then 
                        FarmFieldList["Sprout"] = Fieldname
                        while (wait() and Farm and AutoSprout) do
                            local t = IsSprout()
                            FarmFieldList["Sprout"] = Fieldname
                            if t then
                                if t.Position ~= Sprout.Position then
                                    break
                                end
                            else
                                break
                            end
                        end
                        wait(20)
                    end
                    
                else
                end
            end
            FarmFieldList["Sprout"] = FarmFieldList[LevelFarm[LevelFarmVK["Sprout"]-1]] 
        end
        end)

        spawn(function() 
            while wait(1) do 
                if Leaf and CheckFarm("Leaf") then 
                    

                    for _,v in pairs(game.Workspace.Flowers:GetChildren()) do
                   
                        if v:FindFirstChild("LeafBurst") and CheckFarm("Leaf") then
                            StopFarmList["Leaf"]=true
                            --if ValidLeaf then ValidLeaf=false wait(.1) end
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame=v.CFrame
                                wait(1)
                        end    
                        
                    end
                    ValidLeaf=true
                    StopFarmList["Leaf"]=false
                end
                if SparkF then 
                    
                    for _,v in pairs(game.workspace.Flowers:GetDescendants()) do
                        if string.find(v.Name,"Sparkles") then
                            if ValidLeaf then ValidLeaf=false wait(.1) end
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = v.Parent.CFrame
                            wait(1)
                            for _,v in pairs(workspace.Collectibles:GetChildren()) do
                                if IsToken(v) and IsValidTokenPos(v,GetNerestFieldByObject( game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))) then 
                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(v.Position.x,game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y,v.Position.z)
            
                                end
                                
                                
                            end
                        end
                    end
                      --  wait(1)
                       
                    ValidLeaf=true
                end
                

                StopFarmList["Leaf"]=false
            end
        end)

        -- Auto Quest Pollen
        spawn(function() 
            while wait() do 

                for k,v in pairs(QuestTF) do 
                    local rac = k
                    if v and AutoQ then 
                        local QuestNPC = GetQuestNPC(k)
                        if QuestNPC then 
                            local QuestTb = GetQuestTable(QuestNPC)
                            if QuestTb["Color"] then 
                               -- print("A")
                                for k,v in pairs(QuestTb["Color"]) do
                                    if not v.IsCompleted() then
                                        repeat wait()
                                            FarmFieldList["QuestPollen"] = RedBlueWhite(GetCurrentAmountOfBee())[v.Color]
                                        until v.IsCompleted() or not AutoQ or not QuestTF[rac]
                                    end
                                    
                                end
                            end
                            
                        end
                    end
                end
                FarmFieldList["QuestPollen"] = FarmFieldList[LevelFarm[LevelFarmVK["QuestPollen"]-1]] 
            end
        end)

        -- Auto Quest Field

        spawn(function() 
            while wait() do 
                for k,v in pairs(QuestTF) do 
                    local rac = k
                    if v and AutoQ then 
                        local QuestNPC = GetQuestNPC(k)
                        if QuestNPC then 
                            local QuestTb = GetQuestTable(QuestNPC)
                            if QuestTb["Zone"] then 
                                for k,v in pairs(QuestTb["Zone"]) do 
                                    if not v.IsCompleted() then 
                                        repeat wait()
                                            FarmFieldList["QuestField"] = v.Zone
                                        until v.IsCompleted() or not AutoQ or not QuestTF[rac]
                                    end
                                    
                                end
                            end
                            
                        end
                    end
                end
                FarmFieldList["QuestField"] = FarmFieldList[LevelFarm[LevelFarmVK["QuestField"]-1]] 
            end
        end)

        -- Auto Quest Mob
        spawn(function() 
            while wait() do 
                for k,v in pairs(QuestTF) do 
                    local rac = k
                    if v and AutoQ then 
                        local QuestNPC = GetQuestNPC(k)
                        if QuestNPC then 
                            local QuestTb = GetQuestTable(QuestNPC)
                            if QuestTb["Kill"] then 
                                for k,v in pairs(QuestTb["Kill"]) do 
                                    if not v.IsCompleted() then 
                                        if v.MonsterType then 
                                            if not string.match(v.MonsterType,"Ant") then 
                                                local mob = CheckMob(v.MonsterType)
                                                if mob and GetAttach(mob) then
                                                    local t = tick() 
                                                    repeat wait()
                                                        FarmFieldList["QuestMob"] = GetNerestFieldByObject(mob)
                                                    until v.IsCompleted() or not AutoQ or not QuestTF[rac] or GetAttach(mob).TimerGui.TimerLabel.Visible ==true or tick()-t > 20
                                                    if AutoQ and QuestTF[rac] then 
                                                        wait(4)
                                                    end
                                                end
                                            else
                                                if GetCurrenItem("AntPass") > 0 then
                                                    AutoFAnt2=true
                                                    repeat wait() AutoFAnt2=true until v.IsCompleted() or not AutoQ or not QuestTF[rac] 
                                                    AutoFAnt2=false
                                                   end
                                            end
                                        end
                                        
                                    end
                                    
                                end
                            end
                            if QuestTb["Use"] then 
                                for k,v in pairs(QuestTb["Use"]) do 
                                    if not v.IsCompleted() and (v.Item=="Blueberry" or v.Item=="Strawberry") then 
                                        local DoEvent = game.ReplicatedStorage.Events.ConstructHiveCellFromEgg
                                        local v91, v92, v93, v94, v95=  DoEvent:InvokeServer(1, 1, v.Item, 1)
                                        if v92 then
                                            u1:Set({ "Eggs", v.Item }, v91);
                                            u1:Set("DiscoveredBees", v94);
                                            u1:Set("Honeycomb", v93);
                                            u1:Set({ "Totals", "EggUses" }, v95);
                                        end;
                                    end
                                end
                            end                            
                        end
                    end
                end

                FarmFieldList["QuestMob"] = FarmFieldList[LevelFarm[LevelFarmVK["QuestMob"]-1]] 
            end
        end)
        -- Old Auto Quest
        -- spawn(
        --     function()
        --         while (false) do
        --             if AutoMob and Farm and ValidFarm() then
        --                 for k, v in pairs(TimerMob) do
        --                     if TimerKiet[k] then
        --                         local mob = CheckMob(k)
        --                         if mob and GetAttach(mob) then
        --                             FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
                                    
        --                             while wait() and AutoMob do
        --                                 local t = tick()
        --                                 FarmFieldList["Quest"] = GetNerestFieldByObject(mob)

        --                                 if GetAttach(mob).TimerGui.TimerLabel.Visible == true or tick() - t > 20 then
        --                                     break
        --                                 end
        --                             end
        --                             if AutoMob then
        --                                 wait(4)
        --                             end
        --                         end
        --                     end
        --                 end
        --                 FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
                        
        --             end
        --             if AutoQ then
        --                 if Farm and ValidFarm() then
        --                     if QuestTF["Polar Bear"] then
        --                         local t = GetPolarQuest()
        --                         --print(t)
        --                         if t then
        --                             for k, v in pairs(t:GetChildren()) do
        --                                 if v:IsA("Frame") then
        --                                     if v:FindFirstChild("Description") then
        --                                         if not IsQuestDone(v) then
        --                                             if string.match(v.Description.Text, "Collect") then
        --                                                 local field = GetQuestField(v.Description.Text)
        --                                                 --print(v.Description.Text)
        --                                                 if field then
                                                            
        --                                                     FarmFieldList["Quest"] = field
        --                                                     while (AutoQ and QuestTF["Polar Bear"] and
        --                                                         IsQuestDone(v) == false and
        --                                                         Farm and
        --                                                         ValidFarm()) do
                                                                
        --                                                         FarmFieldList["Quest"] = field
        --                                                         wait()
        --                                                     end
        --                                                 end
        --                                             else
        --                                                 if
        --                                                     string.match(v.Description.Text, "Defeat") and
        --                                                         not IsQuestDone(v)
        --                                                  then
        --                                                     local mob = CheckMob(GetQuestMob(v.Description.Text))
        --                                                     if mob and GetAttach(mob) then
                                                                
        --                                                         FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
        --                                                         while wait() and AutoQ and QuestTF["Polar Bear"] do
        --                                                             local t = tick()
        --                                                             FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
                                                                    
        --                                                             if
        --                                                                 GetAttach(mob).TimerGui.TimerLabel.Visible ==
        --                                                                     true or
        --                                                                     tick() - t > 20 or
        --                                                                     IsQuestDone(v) or
        --                                                                     not AutoQ and not QuestTF["Polar Bear"]
        --                                                              then
        --                                                                 break
        --                                                             end
        --                                                         end
        --                                                         if AutoQ and QuestTF["Polar Bear"] then
        --                                                             wait(4)
        --                                                         end
        --                                                     end
        --                                                 end
        --                                             end
        --                                         end
        --                                     end
        --                                 end
        --                             end
        --                         end
        --                         FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                     end


        --                     if QuestTF["Panda Bear"] then
        --                         local t = GetQuest("Panda Bear")
        --                         --print(t)
        --                         if t then
        --                             for k, v in pairs(t:GetChildren()) do
        --                                 if v:IsA("Frame") then
        --                                     if v:FindFirstChild("Description") then
        --                                         if not IsQuestDone(v) then
        --                                             if string.match(v.Description.Text, "Collect") then
        --                                                 local field = GetQuestField(v.Description.Text)
        --                                                 --print(v.Description.Text)
        --                                                 if field then
                                                            
        --                                                     FarmFieldList["Quest"] = field
        --                                                     while (AutoQ and QuestTF["Panda Bear"] and
        --                                                         IsQuestDone(v) == false and
        --                                                         Farm and
        --                                                         ValidFarm()) do
                                                                
        --                                                         FarmFieldList["Quest"] = field
        --                                                         wait()
        --                                                     end
        --                                                 end
        --                                             else
        --                                                 if
        --                                                     string.match(v.Description.Text, "Defeat") and
        --                                                         not IsQuestDone(v)
        --                                                  then

        --                                                     if string.match(v.Description.Text,"King") then
        --                                                         if CheckKing() then 
                                                                    
        --                                                             repeat wait() AutoKing2=true until IsQuestDone(v) or not AutoQ or not QuestTF["Panda Bear"] or not CheckKing()
        --                                                             AutoKing2=false
        --                                                         end 
        --                                                     elseif string.match(v.Description.Text,"Tunnel") then
        --                                                         if CheckTunnel() then 
        --                                                             repeat wait() AutoKing2=true until IsQuestDone(v) or not AutoQ or not QuestTF["Panda Bear"] or not CheckTunnel()
        --                                                             AutoKing2=false
        --                                                         end
        --                                                     elseif string.match(v.Description.Text,"Ant") then
        --                                                         if GetCurrenItem("AntPass") > 0 then
        --                                                         AutoFAnt2=true
        --                                                         repeat wait() AutoFAnt2=true until IsQuestDone(v) or not AutoQ or not QuestTF["Panda Bear"]
        --                                                         AutoFAnt2=false
        --                                                         end
        --                                                     else

        --                                                         local mob = CheckMob(GetQuestMob(v.Description.Text))
        --                                                         if mob and GetAttach(mob) then
                                                                    
        --                                                             FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
        --                                                             while wait() and AutoQ and QuestTF["Panda Bear"] do
        --                                                                 local t = tick()
        --                                                                 FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
                                                                        
        --                                                                 if
        --                                                                     GetAttach(mob).TimerGui.TimerLabel.Visible ==
        --                                                                         true or
        --                                                                         tick() - t > 20 or
        --                                                                         IsQuestDone(v) or
        --                                                                         not AutoQ and not QuestTF["Panda Bear"]
        --                                                                  then
        --                                                                     break
        --                                                                 end
        --                                                             end
        --                                                             if AutoQ and QuestTF["Polar Bear"] then
        --                                                                 wait(4)
        --                                                             end
        --                                                         end
        --                                                     end
                                                            


                                                            
        --                                                 end
        --                                             end
        --                                         end
        --                                     end
        --                                 end
        --                             end
        --                         end
        --                         FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                     end

        --                     if QuestTF["Brown Bear"] then
        --                         local Quest = GetQuest("Brown Bear")
        --                         if Quest then
        --                             for k, v in pairs(Quest:GetChildren()) do
        --                                 if v:IsA("Frame") then
        --                                     if v:FindFirstChild("Description") then
        --                                         if not IsQuestDone(v) then
        --                                             if string.match(v.Description.Text, "Collect") then
        --                                                 local field = FieldQuest(v.Description.Text)
        --                                                 if field then
        --                                                     FarmFieldList["Quest"] = field

        --                                                     while (AutoQ and QuestTF["Brown Bear"] and
        --                                                         IsQuestDone(v) == false and
        --                                                         Farm and
        --                                                         ValidFarm()) do
                                                                
        --                                                             FarmFieldList["Quest"] = field
        --                                                         wait()
        --                                                     end
        --                                                 end
        --                                             end
        --                                         end
        --                                     end
        --                                 end
        --                             end
        --                             FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                         end
        --                     end
        --                     if QuestTF["Science Bear"] then 
        --                         local Quest = GetQuest("Science Bear")
        --                         if Quest then
        --                             for k, v in pairs(Quest:GetChildren()) do
        --                                 if v:IsA("Frame") then
        --                                     if v:FindFirstChild("Description") then
        --                                         if not IsQuestDone(v) then
        --                                             if string.match(v.Description.Text, "Collect") then
        --                                                 local field = FieldQuest(v.Description.Text)
        --                                                 if field then
        --                                                     while (AutoQ and QuestTF["Science Bear"] and
        --                                                         IsQuestDone(v) == false and
        --                                                         Farm and
        --                                                         ValidFarm()) do
                                                               
        --                                                             FarmFieldList["Quest"] = field
        --                                                         wait()
        --                                                     end
        --                                                 end
        --                                             else
        --                                                 if
        --                                                     string.match(v.Description.Text, "Defeat") and
        --                                                         not IsQuestDone(v)
        --                                                  then
        --                                                     local mob = CheckMob(GetQuestMob(v.Description.Text))
        --                                                     if mob and GetAttach(mob) then
                                                                
        --                                                         FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
        --                                                         while wait() and AutoQ and QuestTF["Science Bear"] do
        --                                                             local t = tick()
        --                                                             FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
                                                                    
        --                                                             if
        --                                                                 GetAttach(mob).TimerGui.TimerLabel.Visible ==
        --                                                                     true or
        --                                                                     tick() - t > 20 or
        --                                                                     IsQuestDone(v) or
        --                                                                     not AutoQ and not QuestTF["Science Bear"]
        --                                                              then
        --                                                                 break
        --                                                             end
        --                                                         end
        --                                                         if AutoQ and QuestTF["Science Bear"] then
        --                                                             wait(4)
        --                                                         end
        --                                                     end
        --                                                 end
        --                                             end
        --                                         end
        --                                     end
        --                                 end
        --                             end
        --                             FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                         end
        --                     end
        --                     if QuestTF["Black Bear"] then
        --                         local Quest = GetQuest("Black Bear")
        --                         if Quest then
        --                             for k, v in pairs(Quest:GetChildren()) do
        --                                 if v:IsA("Frame") then
        --                                     if v:FindFirstChild("Description") then
        --                                         if not IsQuestDone(v) then
        --                                             if string.match(v.Description.Text, "Collect") then
        --                                                 local field = FieldQuest(v.Description.Text)
        --                                                 if field then
        --                                                     while (AutoQ and QuestTF["Black Bear"] and
        --                                                         IsQuestDone(v) == false and
        --                                                         Farm and
        --                                                         ValidFarm()) do
                                                               
        --                                                             FarmFieldList["Quest"] = field
        --                                                         wait()
        --                                                     end
        --                                                 end
        --                                             end
        --                                         end
        --                                     end
        --                                 end
        --                             end
        --                             FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                         end
        --                     end

        --                     if QuestTF["Bucko Bee"] then
        --                        -- print("Have")
        --                         local Quest = GetQuest("Bucko Bee")
                                
        --                         if Quest then
        --                            -- print("Have2")
        --                             for k, v in pairs(Quest:GetChildren()) do
        --                                 if v:IsA("Frame") then
        --                                     if v:FindFirstChild("Description") then
        --                                         if not IsQuestDone(v) then
        --                                             local ques =v.Description.Text

        --                                             if Settings.RageAnt and not  IsQuestDone(v) and (string.match(ques:lower(), "rage")) and GetCurrenItem("AntPass") > 0 then
        --                                                 if GetCurrenItem("AntPass") > 0 then
        --                                                     AutoFAnt2=true
        --                                                     repeat wait() AutoFAnt2=true until IsQuestDone(v) or not(AutoQ and QuestTF["Bucko Bee"])
        --                                                     AutoFAnt2=false
        --                                                    end
        --                                             elseif not IsQuestDone(v) and (string.match(ques, "tokens") or string.match(ques, "Tokens")) then
        --                                                 --  while (AutoQ and QuestTF["Riley Bee"] and IsQuestDone(v) == false and Farm and ValidFarm()) do
        --                                                 --      FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"] - 1]]
        --                                                 --      wait()
        --                                                 --  end
        --                                              elseif not IsQuestDone(v) and string.match(ques,"Ant") and GetCurrenItem("AntPass") > 0 then
        --                                                 if GetCurrenItem("AntPass") > 0 then
        --                                                  AutoFAnt2=true
        --                                                  repeat wait() AutoFAnt2=true until IsQuestDone(v) or not(AutoQ and QuestTF["Bucko Bee"])
        --                                                  AutoFAnt2=false
        --                                                 end
        --                                             elseif not IsQuestDone(v) and string.match(ques,"Use") then
                                                    

        --                                             game.ReplicatedStorage.Events.ToyEvent:FireServer("Blue Field Booster")
        --                                             elseif not IsQuestDone(v) and string.match(ques,"Blueberries") then 
        --                                                 local DoEvent = game.ReplicatedStorage.Events.ConstructHiveCellFromEgg
        --                                                 repeat wait()
        --                                                     local v91, v92, v93, v94, v95=  DoEvent:InvokeServer(1, 1, "Blueberry", 5)
        --                                                     if v92 then
		-- 	u1:Set({ "Eggs", "Blueberry" }, v91);
		-- 	u1:Set("DiscoveredBees", v94);
		-- 	u1:Set("Honeycomb", v93);
		-- 	u1:Set({ "Totals", "EggUses" }, v95);
		-- 	--require(game.ReplicatedStorage.GateManager).UpdateGateColors();
		-- end;
        --                                                 until IsQuestDone(v) or not(AutoQ and QuestTF["Bucko Bee"])
                                                        
                                                        
        --                                             elseif not IsQuestDone(v) and string.match(v.Description.Text, "Defeat") then
        --                                                 local mob = CheckMob(GetQuestMob(v.Description.Text))
        --                                                 if mob and GetAttach(mob) then
        --                                                     FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
        --                                                     while wait() and AutoQ and QuestTF["Bucko Bee"] do
        --                                                         local t = tick()
        --                                                         FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
                                                    
        --                                                         if
        --                                                             GetAttach(mob).TimerGui.TimerLabel.Visible == true or tick() - t > 20 or IsQuestDone(v) or
        --                                                                 not AutoQ and not QuestTF["Bucko Bee"]
        --                                                          then
        --                                                             break
        --                                                         end
        --                                                     end
        --                                                     if AutoQ and QuestTF["Bucko Bee"] then
        --                                                         wait(4)
        --                                                     end
        --                                                 end
        --                                             elseif not IsQuestDone(v) and string.match(ques,"Collect") then
        --                                                 local field = FieldQuest(v.Description.Text)
        --                                                 if field then
        --                                                     FarmFieldList["Quest"] = field

        --                                                     while (AutoQ and QuestTF["Bucko Bee"] and
        --                                                         IsQuestDone(v) == false and
        --                                                         Farm and
        --                                                         ValidFarm()) do
                                                                
        --                                                             FarmFieldList["Quest"] = field
        --                                                         wait()
        --                                                     end
        --                                                     FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 

        --                                                 end 
        --                                             end
                                                    


                                                   
        --                                         end
        --                                     end
        --                                 end
        --                             end
        --                             FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                         end
        --                     end



        --                     if QuestTF["Riley Bee"] then
        --                         -- print("Have")
        --                          local Quest = GetQuest("Riley Bee")
                                 
        --                          if Quest then
        --                             -- print("Have2")
        --                              for k, v in pairs(Quest:GetChildren()) do
        --                                  if v:IsA("Frame") then
        --                                      if v:FindFirstChild("Description") then
        --                                          if not IsQuestDone(v) then
        --                                              local ques =v.Description.Text
        --                                             if Settings.RageAnt and not  IsQuestDone(v) and (string.match(ques:lower(), "rage")) and GetCurrenItem("AntPass") > 0 then
        --                                                 if GetCurrenItem("AntPass") > 0 then
        --                                                     AutoFAnt2=true
        --                                                     repeat wait() AutoFAnt2=true until IsQuestDone(v) or not(AutoQ and QuestTF["Riley Bee"])
        --                                                     AutoFAnt2=false
        --                                                    end
        --                                             elseif not IsQuestDone(v) and (string.match(ques, "tokens") or string.match(ques, "Tokens")) then
        --                                                 --  while (AutoQ and QuestTF["Riley Bee"] and IsQuestDone(v) == false and Farm and ValidFarm()) do
        --                                                 --      FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"] - 1]]
        --                                                 --      wait()
        --                                                 --  end
        --                                              elseif not IsQuestDone(v) and string.match(ques,"Ant") and GetCurrenItem("AntPass") > 0 then
        --                                                 if GetCurrenItem("AntPass") > 0 then
        --                                                  AutoFAnt2=true
        --                                                  repeat wait() AutoFAnt2=true until IsQuestDone(v) or not(AutoQ and QuestTF["Riley Bee"])
        --                                                  AutoFAnt2=false
        --                                                 end
        --                                              elseif not IsQuestDone(v) and string.match(ques,"Use") then
                                                     
 
        --                                              game.ReplicatedStorage.Events.ToyEvent:FireServer("Red Field Booster")
        --                                             elseif not IsQuestDone(v) and string.match(ques,"Strawberries") then 
        --                                                 local DoEvent = game.ReplicatedStorage.Events.ConstructHiveCellFromEgg
        --                                                 repeat wait()
                                                           
        --                                                     local v91, v92, v93, v94, v95=  DoEvent:InvokeServer(1, 1, "Strawberry", 5)
        --                                                     if v92 then
		-- 	u1:Set({ "Eggs", "Strawberries" }, v91);
		-- 	u1:Set("DiscoveredBees", v94);
		-- 	u1:Set("Honeycomb", v93);
		-- 	u1:Set({ "Totals", "EggUses" }, v95);
		-- 	--require(game.ReplicatedStorage.GateManager).UpdateGateColors();
		-- end;
        --                                                 until IsQuestDone(v) or not(AutoQ and QuestTF["Riley Bee"])
                                                         
        --                                              elseif not IsQuestDone(v) and string.match(v.Description.Text, "Defeat") then
        --                                                  local mob = CheckMob(GetQuestMob(v.Description.Text))
        --                                                  if mob and GetAttach(mob) then
        --                                                      FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
        --                                                      while wait() and AutoQ and QuestTF["Riley Bee"] do
        --                                                          local t = tick()
        --                                                          FarmFieldList["Quest"] = GetNerestFieldByObject(mob)
                                                     
        --                                                          if
        --                                                              GetAttach(mob).TimerGui.TimerLabel.Visible == true or tick() - t > 20 or IsQuestDone(v) or
        --                                                                  not AutoQ and not QuestTF["Riley Bee"]
        --                                                           then
        --                                                              break
        --                                                          end
        --                                                      end
        --                                                      if AutoQ and QuestTF["Riley Bee"] then
        --                                                          wait(4)
        --                                                      end
        --                                                  end
        --                                              elseif not IsQuestDone(v) and string.match(ques,"Collect") then
        --                                                  local field = FieldQuest(v.Description.Text)
        --                                                  if field then
        --                                                      FarmFieldList["Quest"] = field
 
        --                                                      while (AutoQ and QuestTF["Riley Bee"] and
        --                                                          IsQuestDone(v) == false and
        --                                                          Farm and
        --                                                          ValidFarm()) do
                                                                 
        --                                                              FarmFieldList["Quest"] = field
        --                                                          wait()
        --                                                      end
        --                                                      FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
 
        --                                                  end 
        --                                              end
                                                     
 
 
                                                    
        --                                          end
        --                                      end
        --                                  end
        --                              end
        --                              FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
        --                          end
        --                      end



        --                 end
        --             end
        --             FarmFieldList["Quest"] = FarmFieldList[LevelFarm[LevelFarmVK["Quest"]-1]] 
                   
        --         end
                
        --     end
        -- )
        
        spawn(
            function()
                while wait() do
                    if AutoFarmBoost then
                        for k, v in pairs(GetCurrentFieldBoost()) do
                            --Field = k
                            FarmFieldList["FieldBoost"] = k
                            repeat
                                wait()
                                FarmFieldList["FieldBoost"] = k
                            until IsBoostEnd(k) or not AutoFarmBoost
                            
                        end
                    end
                    FarmFieldList["FieldBoost"] = FarmFieldList[LevelFarm[LevelFarmVK["FieldBoost"]-1]] 
                end
            end
        )
        -- spawn(
        --     function()
        --         while wait(.5) do
        --             if BuyAnt then
        --                 if GetCurrenItem("AntPass") == 0 and GetCurrenItem("Ticket") >= 10 then
        --                     game.ReplicatedStorage.Events.ToyEvent:FireServer("Ant Pass Dispenser")
        --                 end
        --             end
        --         end
        --     end
        -- )
        spawn(
            function()
                while wait() do
                    --wait(.3)
                    if Settings.SnowFlake and CheckFarm("Snowflake") then
                        for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
                            if IsToken(v) and (string.match(v.FrontDecal.Texture,"6087969886") or string.match(v.FrontDecal.Texture,"6087969914")) and  isActiveTokens(v) then
                                if Settings.SnowFlake and not IsTokenBlacklist(v) and CheckFarm("Snowflake") then
                                    Kiet1308 = true
                                    StopFarmList["Snowflake"] = true
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(v.Position.X, v.Position.Y, v.Position.Z)*CFrame.new(0,20,0)
                                        local Black = Instance.new("IntValue")
                                        Black.Parent = v
                                        Black.Name = "Blacklisted"
                                        wait(1)
                                end
                            end
                        end
                    end
                    StopFarmList["Snowflake"] = false
                    Kiet1308 = false
                end
            end
        )
        spawn(function() 
            while wait(.8) do 
                if Settings.AvoidMob then 
                    local ismob = false
                    for k,v in ipairs(game:GetService("Workspace").Monsters:GetChildren()) do 
                        if v:FindFirstChild("Torso") then 
                            if plr.Character:FindFirstChild("HumanoidRootPart") then 
                                if (plr.Character.HumanoidRootPart.Position-v.Torso.Position).magnitude<60 then 
                                    ismob=true
                                    break;
                                end
                            end
                        end
                    end
                    if plr.Character:FindFirstChild("Humanoid") then 
                        if ismob then 
                            plr.Character.Humanoid.Jump=true
                        end
                    end
                end
            end
        end)
        spawn(function() 
            
            while wait() do 
                if (AutoFAnt or AutoFAnt2) and CheckFarm("Ant") then 
                    if not game:GetService("Workspace").Toys["Ant Challenge"].Busy.Value then 
                        if GetCurrenItem("AntPass") > 0 then
                            StopFarmList["Ant"] = true
                            ValidAnt=false
                            wait(.1)
                            UseAnt()
                            local k = tick()
                            repeat wait() until game:GetService("Workspace").Toys["Ant Challenge"].Busy.Value ==true or tick()-k >5 or not (AutoFAnt or AutoFAnt2) or not CheckFarm("Ant")
                           -- wait(1)
                            if game:GetService("Workspace").Toys["Ant Challenge"].Busy.Value ==true then
                                
                                local old = ""
                                repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                                wait(1)
                               -- if AntMethod=="Filing" then 
                                    noclip=true
                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(92.6141205, 45.4476166, 547.385254, -1, -4.76778114e-05, 8.39982658e-06, -6.96244262e-09, 0.173648417, 0.98480773, -4.84120937e-05, 0.98480773, -0.173648417)
                                    for _,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                                        if v:IsA("Tool") then 
                                            old=v.Name
                                        end
                                    end
                                    if AutoEquipSpark then 
                                        game.ReplicatedStorage.Events.ItemPackageEvent:InvokeServer("Equip",{["Mute"] = false,["Type"] = "Spark Staff",["Category"] = "Collector"})
    
                                    end
                                    game.ReplicatedStorage.Events.PlayerActivesCommand:FireServer(
                                        {["Name"] = "Sprinkler Builder"}
                                    )
                              --  end
                                -- FarmFieldList["Mob"] = "Ant Field"
                                -- wait(.1)
                               
                                -- spawn(function() 
                                --     repeat wait() Check3() until not game:GetService("Workspace").Toys["Ant Challenge"].Busy.Value or not (AutoFAnt or AutoFAnt2)
    
                                -- end)
                                repeat wait()
                                   local validpos = GetValidAntPos()
                                   local yup = 56
                                    local ydown =32
                                    local cac
                                    if CheckNear(validpos,"Ant") then 
                                        cac=CFrame.new(validpos.X,yup,validpos.Z)
                                    else
                                        cac=CFrame.new(validpos.X,ydown,validpos.Z)
                                    end
                                    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then 
                                        plr.Character.HumanoidRootPart.CFrame=cac
                                    end
                                    for k,token in pairs(game.Workspace.Collectibles:GetChildren()) do
                                        local v = token
                                        if v:FindFirstChild("FrontDecal") then
                                            if
                                                v.FrontDecal.Texture == "rbxassetid://1629547638"  or -- token link
                                                    v.FrontDecal.Texture == "rbxassetid://2319083910"  or -- stinger
                                                    v.FrontDecal.Texture == "rbxassetid://1442700745"  or -- rage
                                                    v.FrontDecal.Texture == "rbxassetid://1629649299"
                                             then -- focus
                                                if IsValidTokenPos(token, "Ant Field") and IsToken(token) and
                                                not IsTokenBlacklist(token) and AutoFAnt and token and CheckNear(token.CFrame,"Ant") then 
                                                    local passed = true
                                                    local ray = Ray.new(token.Position+Vector3.new(0,1,0), Vector3.new(0, -5, 0))
                                                    local t = workspace:FindPartOnRayWithIgnoreList(ray, {token})
                                                    if t and CheckPollenValid(t) then 
                                                        passed=false
                                                    end
                                                    if passed then
                                                        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = token.CFrame
                                                        wait(.2)
                                                        --game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(92.6141205, 45.4476166, 547.385254, -1, -4.76778114e-05, 8.39982658e-06, -6.96244262e-09, 0.173648417, 0.98480773, -4.84120937e-05, 0.98480773, -0.173648417)
                                                    end
                                                   
        
                                                end
                                            end
                                        end
                                        
                                        
                                    end
    
                                    
                                until not game:GetService("Workspace").Toys["Ant Challenge"].Busy.Value or not (AutoFAnt or AutoFAnt2) or not CheckFarm("Ant")
                                game.ReplicatedStorage.Events.ItemPackageEvent:InvokeServer("Equip",{["Mute"] = false,["Type"] = old,["Category"] = "Collector"})
    
                                noclip=false
                                ValidAnt=true
                            end
                           
                        end
                    end
                end
                StopFarmList["Ant"] = false
            end

        end)

        spawn(function() 
            while wait() do 
                if Snail then
                    if CheckSnail() and CheckFarm("Snail") then
                        local old = Valid
                        
                        Killing = true
                        while Snail and CheckSnail() and CheckFarm("Snail") do
                            StopFarmList["Snail"] = true
                            local uTorso =
                                workspace:WaitForChild(game.Players.LocalPlayer.Name):WaitForChild(
                                "HumanoidRootPart"
                            )
                            OptTween(CFrame.new(405, 72.7, -176))
                          --  uTorso.CFrame = CFrame.new(405, 72.7, -176)
                            noclip = true
                            wait()
                        end
                        Killing = false

                        local uTorso =
                            workspace:WaitForChild(game.Players.LocalPlayer.Name):WaitForChild("HumanoidRootPart")
                        uTorso.CFrame = GetFieldByName("Stump Field").CFrame
                        wait(.4)
                        noclip = false
                       
                    end
                    
                end
                StopFarmList["Snail"] = false
            end
        end)
        spawn(
            function()
                while wait() do
                    if KillVici then
                        local plr = game.Players.LocalPlayer
                        for i, v in pairs(game.workspace.Particles:GetChildren()) do
                            if string.find(v.Name, "Vicious") and CheckFarm("Kill") then
                                local nrf = GetNerestFieldByObject(v.CFrame)
                                if CheckFieldReq(nrf) then 
                                    Valid = false
                                    v.Name = "KillingViciousBee"
                                    OptTween(v.CFrame)
                                   -- plr.Character:WaitForChild("HumanoidRootPart").CFrame = v.CFrame
                                    wait(.1)
                                    OptTween(CFrame.new(v.Position.x, v.Position.y + 20, v.Position.z))
                                    -- plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                    --     CFrame.new(v.Position.x, v.Position.y + 20, v.Position.z)
                                    wait(.5)
                                    Killing = true
                                    repeat
                                        StopFarmList["Kill"] = true
                                        wait()
                                        if noclip == false then
                                            noclip = true
                                        end
                                        -- plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                        --     CFrame.new(v.Position.x, v.Position.y + 10, v.Position.z)
                                            OptTween(   CFrame.new(v.Position.x, v.Position.y + 10, v.Position.z))
                                        for k, v in pairs(game.workspace.Collectibles:GetDescendants()) do
                                            if v.Name == "C" then
                                                if v:FindFirstChild("FrontDecal") then
                                                    if
                                                        v.FrontDecal.Texture == "rbxassetid://1629547638" and
                                                            (v.Position -
                                                                plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                20 or -- token link
                                                            v.FrontDecal.Texture == "rbxassetid://2319083910" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20 or -- stinger
                                                            v.FrontDecal.Texture == "rbxassetid://1442700745" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20 or -- rage
                                                            v.FrontDecal.Texture == "rbxassetid://1629649299" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20
                                                     then -- focus
                                                        plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                                            CFrame.new(v.Position) + Vector3.new(0, 3, 0)
                                                        wait(.2)
                                                    end
                                                end
                                            end
                                        end
                                    until not game.workspace.Particles:FindFirstChild("KillingViciousBee") or not KillVici or not CheckFarm("Kill")
                                    Killing = false
                                    Valid = true
                                    if noclip == true then
                                        noclip = false
                                    end
                                    wait(1)
                                end
                                
                            end
                        end
                    end
                    if KillWindy then
                        if game.Workspace.NPCBees:FindFirstChild("Windy") and CheckFarm("Kill") then
                            local nr = GetNerestFieldByObject(game.Workspace.NPCBees:FindFirstChild("Windy"))
                            if CheckFieldReq(nr) then 
                                if IsValidTokenPos(game.Workspace.NPCBees:FindFirstChild("Windy"), nr) then
                                    noclip = true
                                    Valid = false
                                    --wait(.5)
                                    StopFarmList["Kill"] = true

                                    local plr = game.Players.LocalPlayer
                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                        game.Workspace.NPCBees.Windy.CFrame
                                    --wait(.5)
                                    noclip = false
                                    Valid = true
                                end
                            end
                        end
                        for i, v in pairs(game.Workspace.Monsters:GetChildren()) do
                            if (string.find(v.Name, "Windy") or v.Name == "KillingWindyBee") and v:FindFirstChild("Torso") and KillWindy and CheckFarm("Kill") then
                                local nrf = GetNerestFieldByObject(v.Torso)
                                if CheckFieldReq(nrf) then 
                                    v.Name = "KillingWindyBee"
                                    local plr = game.Players.LocalPlayer
                                    Valid = false
                                    Killing = true
                                    repeat
                                        local plr = game.Players.LocalPlayer
                                        wait()
                                        if v:FindFirstChild("Torso") then
                                            if noclip == false then
                                                noclip = true
                                            end
                                            StopFarmList["Kill"] = true

                                            plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                                CFrame.new(v.Torso.Position.x, v.Torso.Position.y + 20, v.Torso.Position.z)
                                            for k, v in pairs(game.workspace.Collectibles:GetDescendants()) do
                                                if v.Name == "C" then
                                                    if v:FindFirstChild("FrontDecal") then
                                                        if
                                                            v.FrontDecal.Texture == "rbxassetid://1629547638" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20 or -- token link
                                                                v.FrontDecal.Texture == "rbxassetid://2319083910" and
                                                                    (v.Position -
                                                                        plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                        20 or -- stinger
                                                                v.FrontDecal.Texture == "rbxassetid://1442700745" and
                                                                    (v.Position -
                                                                        plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                        20 or -- rage
                                                                v.FrontDecal.Texture == "rbxassetid://1629649299" and
                                                                    (v.Position -
                                                                        plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                        20
                                                         then -- focus
                                                            plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                                                CFrame.new(v.Position) + Vector3.new(0, 3, 0)
                                                            wait(.2)
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    until not game.workspace.Monsters:FindFirstChild("KillingWindyBee") or
                                        KillWindy == false or not CheckFarm("Kill")
                                    Killing = false
                                    if noclip == true then
                                        noclip = false
                                    end
                                                                        

                                    wait(2)
                                                                        
                                                                 
                                    StopFarmList["Kill"] = false
                                    if Farm and ValidFarm() and CheckFarm("Kill") then
                                        local nre = GetNerestFieldByObject(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))
                                        if IsValidTokenPos(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), nre) then
                                            local plr = game.Players.LocalPlayer
                                            
                                            FarmFieldList["Mob"] = nre
                                            Valid = true
                                            wait(10)
                                            Valid = false
                                            FarmFieldList["Mob"] = FarmFieldList[LevelFarm[LevelFarmVK["Mob"]-1]] 
                                            NoChange = false
                                        end
                                    end
                                end
                          
                            --CollectAllTokenInField()
                            end
                        end
                        for i, v in pairs(game.workspace.Monsters:GetChildren()) do
                            if not string.find(v.Name, "Windy") and not game.workspace.NPCBees:FindFirstChild("Windy") then
                                Valid = true
                                NoSell = false
                            end
                        end
                        Valid = true
                        NoSell = false
                    end
                    if KillCrab then
                        if CheckCoco() and CheckFarm("Kill") then
                            local old = Valid
                            Valid = false
                            OptTween(CFrame.new(
                                -367.055786,
                                111.078384,
                                536.868652,
                                0.967295885,
                                -1.81630276e-06,
                                0.253650427,
                                -9.20609364e-06,
                                1,
                                4.22681369e-05,
                                -0.253650427,
                                -4.32209345e-05,
                                0.967295885
                            ))
                           -- game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                
                            wait(1.5)
                            if KillCrab == true then
                                noclip = true
                                Killing = true
                                while CheckCoco() and wait() and KillCrab and CheckFarm("Kill") do
                                    StopFarmList["Kill"] = true
                                    -- game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                    --     CFrame.new(-261.811249, 115.952774, 503.228455, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                                    noclip = true
                                        OptTween(CFrame.new(-261.811249, 115.952774, 503.228455, 1, 0, 0, 0, 1, 0, 0, 0, 1))
                                end
                                Killing = false

                                noclip = false

                                if KillCrab and Farm and CheckFarm("Kill") then
                                    NoChange = true
                                    wait(5)
                                    Valid = old
                                  
                                    FarmFieldList["Mob"] = "Coconut Field"
                                    for i = 1, 20 do
                                        StopFarmList["Kill"] = false
                                        wait(1)
                                        FarmFieldList["Mob"] = "Coconut Field"
                                        if not KillCrab then
                                            break
                                        end
                                    end
                                    FarmFieldList["Mob"] = FarmFieldList[LevelFarm[LevelFarmVK["Mob"]-1]] 
                                    NoChange = false
                                end
                            else
                                Valid = old
                            end
                        end
                        Valid = true
                    end

                    
                    
                    ValidAnt=true
                    
                    
                    if (AutoTunnel or AutoTunnel2) and CheckFarm("Kill") then

                        local tunnel = CheckTunnel()
                        if tunnel  then
                            local old = Valid
                            Valid = false
                            -- game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                            --     CFrame.new(
                            --     516.041992,
                            --     6.46273232,
                            --     -46.5097466,
                            --     -0.438616902,
                            --     -3.91755606e-08,
                            --     -0.89867413,
                            --     2.49588794e-08,
                            --     1,
                            --     -5.57743292e-08,
                            --     0.89867413,
                            --     -4.68934651e-08,
                            --     -0.4386169020
                            -- )
                            StopFarmList["Kill"] = true

                            OptTween(CFrame.new(405, 72.7, -176))
                            local k = tick()
                            local target
                            local st = true
                            while wait() and CheckFarm("Kill") and tick() - k < 30 and (AutoTunnel or AutoTunnel2) and st do
                                if GetTunnel() then
                                    break
                                end
                            end
                            wait(5)
                            
                            if (AutoTunnel or AutoTunnel2) and CheckFarm("Kill") then
                                Killing = true
                                local ticcc=tick()
                                repeat
                                    StopFarmList["Kill"] = true
                                    local tun = GetTunnel()
                                    wait()
                                    if tun and tun:FindFirstChild("HumanoidRootPart") then
                                        noclip = true
                                        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                            tun.HumanoidRootPart.CFrame + Vector3.new(0, 20, 0)
                                    end
                                until not CheckTunnel() or not (AutoTunnel or AutoTunnel2) or tick() - ticcc > 60 or not CheckFarm("Kill")
                                Killing = false
                            end
                            noclip = false
                            wait(2)
                            if (AutoTunnel or AutoTunnel2) then
                                for i = 1, 3 do
                                    for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
                                        if
                                            (v.Position - game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).magnitude <
                                                40 and CheckFarm("Kill")
                                         then
                                            tp(
                                                CFrame.new(
                                                    v.Position.X,
                                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y,
                                                    v.Position.Z
                                                )
                                            )
                                        end
                                    end
                                end
                            end
                            Valid = old
                        end
                        Valid = true
                    end
                    if AutoMondo and CheckFarm("Kill") then
                        for i, v in pairs(game.Workspace.Monsters:GetChildren()) do
                            if string.find(v.Name, "Mondo Chick") then
                                if true then
                                    v.Name = "KillingMondo Chick"
                                    Valid = false
                                    Killing = true
                                    repeat
                                        StopFarmList["Kill"] = true
                                        wait()
                                        local plr = game.Players.LocalPlayer
                                        noclip = true
                                        if v:FindFirstChild("Head") then
                                            plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                                CFrame.new(v.Head.Position.x + 25, 176.4, v.Head.Position.z + 25)
                                        --wait(.2)
                                        end
                                        for k, v in pairs(game.workspace.Collectibles:GetDescendants()) do
                                            if v.Name == "C" then
                                                if v:FindFirstChild("FrontDecal") then
                                                    if
                                                        v.FrontDecal.Texture == "rbxassetid://1629547638" and
                                                            (v.Position -
                                                                plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                20 or -- token link
                                                            v.FrontDecal.Texture == "rbxassetid://2319083910" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20 or -- stinger
                                                            v.FrontDecal.Texture == "rbxassetid://1442700745" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20 or -- rage
                                                            v.FrontDecal.Texture == "rbxassetid://1629649299" and
                                                                (v.Position -
                                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                    20
                                                     then -- focus
                                                        -- plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                                        --     CFrame.new(v.Position) + Vector3.new(0, 3, 0)
                                                            OptTween( CFrame.new(v.Position) + Vector3.new(0, 3, 0))
                                                        wait(.2)
                                                    end
                                                end
                                            end
                                        end
                                    until not game.workspace.Monsters:FindFirstChild("KillingMondo Chick") or
                                        not AutoMondo or not CheckFarm("Kill")
                                    Killing = false
                                    
                                    noclip = false
                                    wait(1)
                                    if Farm and AutoMondo and CheckFarm("Kill") then
                                        StopFarmList["Kill"] = false
                                        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                            GetFieldByName("Mountain Top Field").CFrame
                                        NoChange = true
                                        NoSell=true
                                        wait(.2)
                                        Valid = true
                                        FarmFieldList["Mob"] = "Mountain Top Field"
                                        for i = 1, 20 do
                                            FarmFieldList["Mob"] = "Mountain Top Field"
                                            if not Farm or not AutoMondo then
                                                break
                                            end
                                            wait(1)
                                        end
                                        FarmFieldList["Mob"] = FarmFieldList[LevelFarm[LevelFarmVK["Mob"]-1]] 
                                        NoChange = false
                                        NoSell=false
                                    end
                                    Valid = true
                                end
                            end
                        end
                    end
                    if AutoComando and CheckFarm("Kill") then
                        if CheckComando() then
                            Valid = false
                            local ToPos =
                                CFrame.new(
                                510.769714,
                                46.2348976,
                                164.753113,
                                0.510934234,
                                -4.59572291e-08,
                                -0.859619498,
                                2.90317903e-08,
                                1,
                                -3.62065649e-08,
                                0.859619498,
                                -6.45711751e-09,
                                0.510934234
                            )
                            repeat
                                StopFarmList["Kill"] = true
                                wait()
                              --  game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = ToPos
                              OptTween(ToPos)
                            until GetComandoMob() or not CheckComando() or not AutoComando or not CheckFarm("Kill")
                            wait(1)
                            local plr = game.Players.LocalPlayer
                            Killing = true
                            while wait() and CheckFarm("Kill") do
                                StopFarmList["Kill"] = true

                                local plr = game.Players.LocalPlayer
                                if not CheckComando() or not AutoComando then
                                    break
                                end
                                local comman = GetComandoMob()
                                if comman then
                                    noclip = true
                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                        comman.HumanoidRootPart.CFrame + Vector3.new(0, 15, 0)
                                    for k, v in pairs(game.workspace.Collectibles:GetDescendants()) do
                                        if v.Name == "C" then
                                            if v:FindFirstChild("FrontDecal") then
                                                if
                                                    v.FrontDecal.Texture == "rbxassetid://1629547638" and
                                                        (v.Position -
                                                            plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                            25 or -- token link
                                                        v.FrontDecal.Texture == "rbxassetid://2319083910" and
                                                            (v.Position -
                                                                plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                25 or -- stinger
                                                        v.FrontDecal.Texture == "rbxassetid://1442700745" and
                                                            (v.Position -
                                                                plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                25 or -- rage
                                                        v.FrontDecal.Texture == "rbxassetid://1629649299" and
                                                            (v.Position -
                                                                plr.Character:WaitForChild("HumanoidRootPart").CFrame.Position).magnitude <=
                                                                25
                                                 then -- focus
                                                    plr.Character:WaitForChild("HumanoidRootPart").CFrame =
                                                        CFrame.new(v.Position) + Vector3.new(0, 3, 0)
                                                    wait(.1)
                                                    v.Name = "CollectedToken"
                                                end
                                            end
                                        end
                                    end
                                else
                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = ToPos
                                end
                            end
                            Killing = false
                            noclip = false
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = ToPos
                            wait(3)
                            for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
                                if v.Name == "C" then
                                    if v:FindFirstChild("FrontDecal") and CheckFarm("Kill") then
                                        if
                                            (v.Position - plr.Character:WaitForChild("HumanoidRootPart").CFrame.p).magnitude <=
                                                30
                                         then
                                            tp(
                                                CFrame.new(
                                                    v.Position.X,
                                                    game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y,
                                                    v.Position.Z
                                                )
                                            )
                                        end
                                    end
                                end
                            end
                            Valid = true
                        end
                    end
                    if (AutoKing or AutoKing2) and CheckFarm("Kill")  then 

                        if CheckKing() then
                            Valid=false
                            StopFarmList["Kill"] = true
                            wait(.2)
                            local KingSpawn = CFrame.new(167.829041, 6.20121384, 182.805527)
                            --game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = KingSpawn
                            OptTween( CFrame.new(167.829041, 6.20121384, 182.805527))
                            repeat wait() until GetKing() or not CheckFarm("Kill")
                            local King = GetKing()
                            noclip=true
                            repeat wait()
                                if King:FindFirstChild("Torso") then
                                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = King.Torso.CFrame*CFrame.new(0,20,0)
                                end
                            
                            until not GetKing() or not CheckKing() or not (AutoKing or AutoKing2) or not CheckFarm("Kill")
                            noclip=false
                            wait(2)
                            for i=1,3 do 
                                for k, v in pairs(game.Workspace.Collectibles:GetChildren()) do
                                    if IsToken(v) then
                                        if v:FindFirstChild("FrontDecal") and CheckFarm("Kill") then
                                            if
                                                (v.Position - plr.Character:WaitForChild("HumanoidRootPart").CFrame.p).magnitude <=
                                                    30
                                             then
                                                tp(
                                                    CFrame.new(
                                                        v.Position.X,
                                                        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y,
                                                        v.Position.Z
                                                    ),0,v
                                                )
                                            end
                                        end
                                    end
                                end
                            end
                            Valid=true
                        end
                        
                        
                    end
                    if (Settings.SnowBear) and CheckFarm("Kill") then 
                        
                        for k,v in pairs(game.Workspace.Monsters:GetChildren()) do 
                            if string.match(v.Name:lower(),"snowbear") then 
                                if v:FindFirstChild("HumanoidRootPart") then 
                                    repeat wait()
                                        StopFarmList["Kill"] = true
                                        ValidTB["Snowbear"] = true
                                    noclip=true
                                    if v:FindFirstChild("HumanoidRootPart") then 
                                        Tele(v.HumanoidRootPart.CFrame*CFrame.new(5,-10,0))
                                    end
                                    until not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not v:FindFirstChild("Humanoid") or v.Humanoid.Health==0 or not Settings.SnowBear or not CheckFarm("Kill")
                                    noclip=false
                                    ValidTB["Snowbear"] = false
                                end
                            end
                        end
                        
                        
                        
                    end
                    FarmFieldList["Mob"] = FarmFieldList[LevelFarm[LevelFarmVK["Mob"]-1]] 
                    Valid=true
                    StopFarmList["Kill"] = false
                end
            end
        )
       
        -- spawn(
        --     function()
        --         while wait(.5) do
        --             if PlantMagic then
        --                 game.ReplicatedStorage.Events.PlayerActivesCommand:FireServer({["Name"] = "Magic Bean"})
        --             end
        --         end
        --     end
        -- )
        local tdsada = game.Players.LocalPlayer
        function fastwait() 
            tdsada:WaitForChild("\0", 1e-6)
            return true
        end
        local f = nil
        spawn(
            function()
                while Running do
                    --local TempField = Field
                    if ValidFarm() and Farm then
                        if not game.Players.LocalPlayer.Character or not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") or not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Health==0 then 
                            wait(8)
                        end
                        local TempField=FarmFieldList[LevelFarm[#LevelFarm]]
                        local Player = game:GetService("Players").LocalPlayer
                        local Character = Player.Character
                        local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
                        local sangzboi = HumanoidRootPart.CFrame
                        if Farm then
                            if not IsValidCharactPos(TempField) then
                                TpToField(TempField)
                                wait(.2)
                                if Sprinklers[GetEquipSrinkler()] and SmartSp and Sprinklers[GetEquipSrinkler()] > 1 then
                                    for i = 1, Sprinklers[GetEquipSrinkler()] do
                                        if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Jump = true
                                            wait(.8)
                                            game.ReplicatedStorage.Events.PlayerActivesCommand:FireServer(
                                                {["Name"] = "Sprinkler Builder"}
                                            )
                                            wait(1.5)
                                        end
                                    end
                                else
                                    game.ReplicatedStorage.Events.PlayerActivesCommand:FireServer(
                                        {["Name"] = "Sprinkler Builder"}
                                    )
                                end
                            end

                            if CollectCoco then
                                for d, f in pairs(GetSortedCoconut(TempField)) do
                                    if f.Name == "WarningDisk" then
                                        if f:FindFirstChild("Mesh") then
                                            if IsValidTokenPos(f, TempField) and Farm and Running and ValidFarm() then
                                                if f.Size == Vector3.new(30, 0.4, 30) then
                                                    tp(CFrame.new(f.Position.X, f.Position.Y, f.Position.Z))
                                                    while (f:FindFirstChild("Mesh")) do
                                                        wait()
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            if CollectBubble then
                                for k, v in pairs(GetSortedBubble(TempField)) do
                                    if v:IsA("Part") then
                                        if v.Name == "Bubble" then
                                            if IsValidTokenPos(v, TempField) and ValidFarm() and Farm then
                                                tp(CFrame.new(v.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, v.Position.Z))
                                            end
                                        end
                                    end
                                end
                            end
                            if Settings.CrossHair then 
                                for k, v in pairs(GetSortedCrossHair(TempField)) do
                                    if v:IsA("MeshPart") then
                                        if true then
                                            if IsValidTokenPos(v, TempField) and ValidFarm() and Farm then
                                                tp(CFrame.new(v.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, v.Position.Z))
                                            end
                                        end
                                    end
                                end
                            end
                            if BubbleBloat and IsPopStar() then 
                                repeat wait()

                                    for k, v in pairs(GetSortedBubble(TempField)) do
                                        if v:IsA("Part") then
                                            if v.Name == "Bubble" then
                                                if IsValidTokenPos(v, TempField) and ValidFarm() and Farm then
                                                    tp(CFrame.new(v.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, v.Position.Z))
                                                end
                                            end
                                        end
                                    end
                                for _,v in pairs(game.Workspace.Collectibles:GetChildren()) do 
                                    if  Farm and IsToken(v) and IsValidTokenPos(v,TempField) and v.FrontDecal.Texture==PrioritizeList["Summon Frog"] then
                                        tp(CFrame.new(v.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, v.Position.Z))                                       
                                    end
                                end
                            until not IsPopStar() or not BubbleBloat or not Farm
                            end
                            if GatherFlame then
                                for _, v in pairs(GetSortedFlame(TempField)) do
                                    if v:IsA("Part") then
                                        if v.Name == "FlamePart" then
                                            if
                                                IsValidTokenPos(v, TempField) and ValidFarm() and
                                                    v:FindFirstChild("Fire") and
                                                    Farm
                                             then
                                                v.Name = "Flame Cua Kiet"
                                                tp(CFrame.new(v.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, v.Position.Z))
                                                local t = tick()
                                                while wait() do
                                                    if not GatherFlame then
                                                        break
                                                    end
                                                    if (tick() - t) > 10 then
                                                        break
                                                    end
                                                    if game.Workspace.Particles:FindFirstChild("Flame Cua Kiet") then
                                                    else
                                                        break
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            
                            if true then
                                local token = f or GetNerestToken(TempField)
                               -- print(f)
                                if token then
                                    if
                                        IsValidTokenPos(token, TempField) and IsToken(token) and
                                            not IsTokenBlacklist(token) and
                                            Farm and
                                            ValidFarm()
                                     then
                                        --print(f)
                                        -- fspawn(function()   
                                        --     f=GetNerestToken(TempField,token)
                                        -- end)
                                        tp(CFrame.new(token.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, token.Position.Z),0,token)

                                        local Black = Instance.new("IntValue")
                                        Black.Parent = token
                                        Black.Name = "Blacklisted"
                                    else
                                        wait()
                                        f=nil
                                    end
                                else
                                    wait()
                                end
                            else
                                local a = false
                                for _, token in pairs(GetSortedToken(TempField)) do
                                    if
                                        IsValidTokenPos(token, TempField) and IsToken(token) and
                                            not IsTokenBlacklist(token) and
                                            Farm and
                                            ValidFarm()
                                     then
                                        a=true
                                        tp(CFrame.new(token.Position.X, game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position.Y, token.Position.Z),0,token)
                                       -- wait()
                                        local Black = Instance.new("IntValue")
                                        Black.Parent = token
                                        Black.Name = "Blacklisted"
                                    end
                                end
                                if not a then wait() end
                            end
                            if IsBackPackFull() and Running and ValidFarm() and not NoSell and not Settings.NoSell then
                                Selling=true
                                local old = BringInsValid
                                BringInsValid = false
                                if AutoMicro and GetCurrenMicro() > 0 then
                                    game.ReplicatedStorage.Events.PlayerActivesCommand:FireServer(
                                        {["Name"] = "Micro-Converter"}
                                    )
                                    wait(.5)
                                else
                                    if AutoInstant and IsAnyInstantValid() and GetCurrenItem("Ticket") > 0 then
                                        local Lis = GetInstantList()
                                        for _, v in pairs(Lis) do
                                            if IsInstantValid(v.Name) then
                                                UseInstant(v.Name)
                                                -- wait(.5)
                                                -- if IsBackPackFull() then
                                                --     NormalSell()
                                                -- end
                                                break
                                            end
                                        end
                                    else
                                        if AutoAntPass and GetCurrenItem("AntPass") > 0 and not game:GetService("Workspace").Toys["Ant Challenge"].Busy.Value then
                                            --local OldAnt = GetCurrenItem("AntPass")
                                            UseAnt()
                                            wait(.4)
                                            if IsBackPackFull() then
                                                NormalSell()
                                            end
                                        else
                                            NormalSell()
                                        end
                                    end
                                end
                                BringInsValid = old
                                Selling=false
                            end
                       
                        end
                    else
                        wait()
                    end
                end
            end
        )
        while wait() do end

end
)






print(e)
if e then
    local HttpService = game:GetService("HttpService")
    local sec = {}
    for k, v in pairs(Con) do
        if type(v) ~= "table" then
            sec[k] = v
        end
    end
    local tb = {
        content = "Error",
        embeds = {
            {
                color = nil,
                fields = {
                    {
                        name = "Error Mess",
                        value = e
                    },
                    {
                        name = "Exploit Used",
                        value = Exploit
                    },
                    {
                        name = "Settings",
                        value = HttpService:JSONEncode(sec)
                    }
                },
                author = {
                    name = "Sea Hub Bee Swarm Simulator Bug Reporter"
                }
            }
        }
    }
    local a =
        syn.request(
        {
            Url = "https://discord.com/api/webhooks/848166928446783489/ACsHIldjqsXk3TqmBX9AyrJOU6phGfX9F1cBN86P_QXjvHQ3CMcKYr5yuvRw4TvcAA_r",
            Method = "POST",
            Body = HttpService:JSONEncode(tb),
            Headers = {
                ["Content-Type"] = "application/json"
            }
        }
    )
    print(a.Body)
    print("Done2 form 2")
    print("Found bug. Reported to tvk1308.")
    print(e)
end
